/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Utils__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "DCAAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DCAAccount__factory>;
    getContractFactory(
      name: "DCAExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DCAExecutor__factory>;
    getContractFactory(
      name: "DCAFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DCAFactory__factory>;
    getContractFactory(
      name: "IDCAAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDCAAccount__factory>;
    getContractFactory(
      name: "IDCAExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDCAExecutor__factory>;
    getContractFactory(
      name: "AaveV3Reinvest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV3Reinvest__factory>;
    getContractFactory(
      name: "CompoundV3Reinvest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundV3Reinvest__factory>;
    getContractFactory(
      name: "ReinvestTemplate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReinvestTemplate__factory>;
    getContractFactory(
      name: "ForwardReinvest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForwardReinvest__factory>;
    getContractFactory(
      name: "CometCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometCore__factory>;
    getContractFactory(
      name: "CometExt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometExt__factory>;
    getContractFactory(
      name: "CometExtInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometExtInterface__factory>;
    getContractFactory(
      name: "CometInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometInterface__factory>;
    getContractFactory(
      name: "CometMainInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometMainInterface__factory>;
    getContractFactory(
      name: "CometMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometMath__factory>;
    getContractFactory(
      name: "CometStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CometStorage__factory>;
    getContractFactory(
      name: "IUniversalRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniversalRouter__factory>;
    getContractFactory(
      name: "DCAReinvestProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DCAReinvestProxy__factory>;
    getContractFactory(
      name: "OnlyActive",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyActive__factory>;
    getContractFactory(
      name: "OnlyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyAdmin__factory>;
    getContractFactory(
      name: "OnlyExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyExecutor__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Utils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Utils>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "IUniswapV3SwapCallback",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    getContractAt(
      name: "ISwapRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISwapRouter>;
    getContractAt(
      name: "DCAAccount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DCAAccount>;
    getContractAt(
      name: "DCAExecutor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DCAExecutor>;
    getContractAt(
      name: "DCAFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DCAFactory>;
    getContractAt(
      name: "IDCAAccount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDCAAccount>;
    getContractAt(
      name: "IDCAExecutor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDCAExecutor>;
    getContractAt(
      name: "AaveV3Reinvest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveV3Reinvest>;
    getContractAt(
      name: "CompoundV3Reinvest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundV3Reinvest>;
    getContractAt(
      name: "ReinvestTemplate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReinvestTemplate>;
    getContractAt(
      name: "ForwardReinvest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ForwardReinvest>;
    getContractAt(
      name: "CometCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CometCore>;
    getContractAt(
      name: "CometExt",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CometExt>;
    getContractAt(
      name: "CometExtInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CometExtInterface>;
    getContractAt(
      name: "CometInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CometInterface>;
    getContractAt(
      name: "CometMainInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CometMainInterface>;
    getContractAt(
      name: "CometMath",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CometMath>;
    getContractAt(
      name: "CometStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CometStorage>;
    getContractAt(
      name: "IUniversalRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniversalRouter>;
    getContractAt(
      name: "DCAReinvestProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DCAReinvestProxy>;
    getContractAt(
      name: "OnlyActive",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyActive>;
    getContractAt(
      name: "OnlyAdmin",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyAdmin>;
    getContractAt(
      name: "OnlyExecutor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyExecutor>;

    deployContract(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    deployContract(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISwapRouter>;
    deployContract(
      name: "DCAAccount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAAccount>;
    deployContract(
      name: "DCAExecutor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAExecutor>;
    deployContract(
      name: "DCAFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAFactory>;
    deployContract(
      name: "IDCAAccount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDCAAccount>;
    deployContract(
      name: "IDCAExecutor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDCAExecutor>;
    deployContract(
      name: "AaveV3Reinvest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV3Reinvest>;
    deployContract(
      name: "CompoundV3Reinvest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CompoundV3Reinvest>;
    deployContract(
      name: "ReinvestTemplate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReinvestTemplate>;
    deployContract(
      name: "ForwardReinvest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwardReinvest>;
    deployContract(
      name: "CometCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometCore>;
    deployContract(
      name: "CometExt",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometExt>;
    deployContract(
      name: "CometExtInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometExtInterface>;
    deployContract(
      name: "CometInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometInterface>;
    deployContract(
      name: "CometMainInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometMainInterface>;
    deployContract(
      name: "CometMath",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometMath>;
    deployContract(
      name: "CometStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometStorage>;
    deployContract(
      name: "IUniversalRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRouter>;
    deployContract(
      name: "DCAReinvestProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAReinvestProxy>;
    deployContract(
      name: "OnlyActive",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OnlyActive>;
    deployContract(
      name: "OnlyAdmin",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OnlyAdmin>;
    deployContract(
      name: "OnlyExecutor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OnlyExecutor>;

    deployContract(
      name: "OwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "UUPSUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UUPSUpgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1822Proxiable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1822Proxiable>;
    deployContract(
      name: "IBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "ERC1967Utils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "IUniswapV3SwapCallback",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniswapV3SwapCallback>;
    deployContract(
      name: "ISwapRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISwapRouter>;
    deployContract(
      name: "DCAAccount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAAccount>;
    deployContract(
      name: "DCAExecutor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAExecutor>;
    deployContract(
      name: "DCAFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAFactory>;
    deployContract(
      name: "IDCAAccount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDCAAccount>;
    deployContract(
      name: "IDCAExecutor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDCAExecutor>;
    deployContract(
      name: "AaveV3Reinvest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AaveV3Reinvest>;
    deployContract(
      name: "CompoundV3Reinvest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CompoundV3Reinvest>;
    deployContract(
      name: "ReinvestTemplate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReinvestTemplate>;
    deployContract(
      name: "ForwardReinvest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ForwardReinvest>;
    deployContract(
      name: "CometCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometCore>;
    deployContract(
      name: "CometExt",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometExt>;
    deployContract(
      name: "CometExtInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometExtInterface>;
    deployContract(
      name: "CometInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometInterface>;
    deployContract(
      name: "CometMainInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometMainInterface>;
    deployContract(
      name: "CometMath",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometMath>;
    deployContract(
      name: "CometStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CometStorage>;
    deployContract(
      name: "IUniversalRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniversalRouter>;
    deployContract(
      name: "DCAReinvestProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DCAReinvestProxy>;
    deployContract(
      name: "OnlyActive",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OnlyActive>;
    deployContract(
      name: "OnlyAdmin",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OnlyAdmin>;
    deployContract(
      name: "OnlyExecutor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OnlyExecutor>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
