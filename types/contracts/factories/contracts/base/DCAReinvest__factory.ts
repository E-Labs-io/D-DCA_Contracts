/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvest,
  DCAReinvestInterface,
} from "../../../contracts/base/DCAReinvest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "activeLibrary",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "oldReinvestData_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "newReinvestData_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "withdrawFunds_",
        type: "bool",
      },
    ],
    name: "migrateReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f6d380380610f6d83398101604081905261002f916100cc565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610073565b506000805460ff1916821515179055506100f5565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000602082840312156100de57600080fd5b815180151581146100ee57600080fd5b9392505050565b610e69806101046000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80637c4bb0b111610081578063c9f6d48f1161005b578063c9f6d48f14610202578063f2fde38b14610269578063f58a59361461027c57600080fd5b80637c4bb0b11461018f5780638da5cb5b146101ac578063bcb9236e146101ef57600080fd5b8063454f002a116100b2578063454f002a14610123578063715018a61461014b578063738800b71461015357600080fd5b80630ca75044146100ce57806340438aea14610119575b600080fd5b60408051808201909152600981527f544553542056302e34000000000000000000000000000000000000000000000060208201525b6040516101109190610a3f565b60405180910390f35b610121610295565b005b610136610131366004610c55565b6102d1565b60408051928352901515602083015201610110565b6101216102ea565b6101036040518060400160405280600981526020017f544553542056302e34000000000000000000000000000000000000000000000081525081565b60005461019c9060ff1681565b6040519015158152602001610110565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610110565b6101366101fd366004610c55565b6102fc565b6101036040517f010000000000000000000000000000000000000000000000000000000000000060208201527f1200000000000000000000000000000000000000000000000000000000000000602182015260220160405160208183030381529060405281565b610121610277366004610c9a565b610309565b61013661028a366004610cb7565b600080935093915050565b61029d610372565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b565b6000806102de84846103cb565b915091505b9250929050565b6102f2610372565b6102cf6000610490565b6000806102de848461050d565b610311610372565b73ffffffffffffffffffffffffffffffffffffffff8116610366576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b61036f81610490565b50565b60005473ffffffffffffffffffffffffffffffffffffffff6101009091041633146102cf576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161035d565b6040820151600090819060ff81166103e357506102e3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff8216016104255761041b84866000015161054c565b92509250506102e3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef60ff82160115610488577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee60ff8216016104885761041b848660000151610608565b509250929050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600080601160ff16846040015160ff1611156102e357601260ff16846040015160ff16036102e3576105438385600001516108d1565b915091506102e3565b600080600061055a846109a6565b604081810151602083015191517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015260248101899052929350169063a9059cbb906044016020604051808303816000875af11580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190610d2f565b94959350505050565b6000806000610616846109a6565b60408082015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b09190610d4c565b60208301516040517f095ea7b30000000000000000000000000000000000000000000000000000000081527387870bca3f3fd6335c3f4ce8392d69350b4fa4e260048201526024810189905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063095ea7b3906044016020604051808303816000875af1158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190610d2f565b905080156108c75760208301516040517f617ba03700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101889052306044820152600060648201527387870bca3f3fd6335c3f4ce8392d69350b4fa4e29063617ba03790608401600060405180830381600087803b15801561080457600080fd5b505af1158015610818573d6000803e3d6000fd5b5050505060408381015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b19190610d4c565b90506108bd8382610d65565b9550600086119450505b5050509250929050565b60008060006108df846109a6565b60208101516040517f69328dec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018790523060448201529091507387870bca3f3fd6335c3f4ce8392d69350b4fa4e2906369328dec906064016020604051808303816000875af1158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190610d4c565b9586151595509350505050565b604080516060810182526000808252602080830182905292820152825190916109d59184018101908401610e17565b92915050565b6000815180845260005b81811015610a01576020818501810151868301820152016109e5565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610a5260208301846109db565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610aab57610aab610a59565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610af857610af8610a59565b604052919050565b801515811461036f57600080fd5b8035610b1981610b00565b919050565b60ff8116811461036f57600080fd5b8035610b1981610b1e565b73ffffffffffffffffffffffffffffffffffffffff8116811461036f57600080fd5b8035610b1981610b38565b600060808284031215610b7757600080fd5b610b7f610a88565b9050813567ffffffffffffffff80821115610b9957600080fd5b818401915084601f830112610bad57600080fd5b8135602082821115610bc157610bc1610a59565b610bf1817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610ab1565b92508183528681838601011115610c0757600080fd5b81818501828501376000818385010152828552610c25818701610b0e565b8186015250505050610c3960408301610b2d565b6040820152610c4a60608301610b5a565b606082015292915050565b60008060408385031215610c6857600080fd5b823567ffffffffffffffff811115610c7f57600080fd5b610c8b85828601610b65565b95602094909401359450505050565b600060208284031215610cac57600080fd5b8135610a5281610b38565b600080600060608486031215610ccc57600080fd5b833567ffffffffffffffff80821115610ce457600080fd5b610cf087838801610b65565b94506020860135915080821115610d0657600080fd5b50610d1386828701610b65565b9250506040840135610d2481610b00565b809150509250925092565b600060208284031215610d4157600080fd5b8151610a5281610b00565b600060208284031215610d5e57600080fd5b5051919050565b818103818111156109d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060608284031215610db157600080fd5b6040516060810181811067ffffffffffffffff82111715610dd457610dd4610a59565b80604052508091508251610de781610b1e565b81526020830151610df781610b38565b60208201526040830151610e0a81610b38565b6040919091015292915050565b600060608284031215610e2957600080fd5b610a528383610d9f56fea26469706673582212201a15e50b8e9f12e770a5157397eb41c41da8bcc9de42799de15f6de98a5c082e64736f6c63430008140033";

type DCAReinvestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvest__factory extends ContractFactory {
  constructor(...args: DCAReinvestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    activeLibrary: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(activeLibrary, overrides || {});
  }
  override deploy(
    activeLibrary: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(activeLibrary, overrides || {}) as Promise<
      DCAReinvest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvest__factory {
    return super.connect(runner) as DCAReinvest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestInterface {
    return new Interface(_abi) as DCAReinvestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAReinvest {
    return new Contract(address, _abi, runner) as unknown as DCAReinvest;
  }
}
