/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvest,
  DCAReinvestInterface,
} from "../../../contracts/base/DCAReinvest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "activeLibrary_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveModuals",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "code_",
        type: "uint8",
      },
    ],
    name: "getModuleName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff191660011790553480156200001e57600080fd5b506040516200183f3803806200183f83398101604081905262000041916200011a565b33806200006857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000738162000086565b506200007f81620000df565b5062000145565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000805460ff1916821515908117825560405190917fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b91a250565b6000602082840312156200012d57600080fd5b815180151581146200013e57600080fd5b9392505050565b6116ea80620001556000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063c7b785e81161005b578063c7b785e81461021b578063c9f6d48f1461022e578063f2fde38b146102bb57600080fd5b80638da5cb5b146101b0578063bcb9236e146101f3578063c445d2ea1461020657600080fd5b8063454f002a116100b2578063454f002a14610144578063715018a61461016c578063738800b71461017457600080fd5b80630ca75044146100d957806322f3e2d41461012457806340438aea1461013a575b600080fd5b60408051808201909152600981527f544553542056302e36000000000000000000000000000000000000000000000060208201525b60405161011b919061122b565b60405180910390f35b60005460ff16604051901515815260200161011b565b6101426102d3565b005b610157610152366004611345565b6102f2565b6040805192835290151560208301520161011b565b610142610347565b61010e6040518060400160405280600981526020017f544553542056302e36000000000000000000000000000000000000000000000081525081565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011b565b610157610201366004611345565b610359565b61020e610366565b60405161011b919061145b565b61010e6102293660046114a2565b610403565b61010e6040517f010000000000000000000000000000000000000000000000000000000000000060208201527f120000000000000000000000000000000000000000000000000000000000000060218201527f1100000000000000000000000000000000000000000000000000000000000000602282015260230160405160208183030381529060405281565b6101426102c93660046114bf565b610417565b905090565b6102db610480565b6102f06102ea60005460ff1690565b156104d9565b565b60008054819060ff16610331576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61033b8484610532565b915091505b9250929050565b61034f610480565b6102f060006105c6565b60008061033b8484610643565b6040517f010000000000000000000000000000000000000000000000000000000000000060208201527f120000000000000000000000000000000000000000000000000000000000000060218201527f110000000000000000000000000000000000000000000000000000000000000060228201526060906023016040516020818303038152906040528060200190518101906102ce91906114dc565b60606104118260ff1661068f565b92915050565b61041f610480565b73ffffffffffffffffffffffffffffffffffffffff8116610474576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b61047d816105c6565b50565b60005473ffffffffffffffffffffffffffffffffffffffff6101009091041633146102f0576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161046b565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016821515908117825560405190917fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b91a250565b6040820151600090819060ff811661054a5750610340565b600160ff82160361056d576105638486600001516107a0565b9250925050610340565b601160ff821603610586576105638486600001516108ea565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee60ff8216016105be57610563848660000151610998565b509250929050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600080601160ff16846040015160ff161161066f57610666838560000151610c61565b91509150610340565b601260ff16846040015160ff160361034057610666838560000151610c98565b606060ff82166106d257505060408051808201909152600a81527f4e6f742041637469766500000000000000000000000000000000000000000000602082015290565b60ff821660010361071657505060408051808201909152601581527f466f7277617264205265696e766573742056302e320000000000000000000000602082015290565b60ff821660120361075a57505060408051808201909152601081527f41617665205633205265696e7665737400000000000000000000000000000000602082015290565b60ff821660110361079b575060408051808201909152601481527f436f6d706f756e64205633205265696e7665737400000000000000000000000060208201525b919050565b60008060006107ae84610d6d565b604081015190915073ffffffffffffffffffffffffffffffffffffffff1661083c57806020015173ffffffffffffffffffffffffffffffffffffffff168560405160006040518083038185875af1925050503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b5050809250506108e2565b604080820151602083015191517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201526024810188905291169063a9059cbb906044016020604051808303816000875af11580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df919061158e565b91505b509293915050565b60008060006108f884610d6d565b905061090d8160000151868360400151610d9c565b925061094e6040518060400160405280601d81526020017f436f6d706f756e64205633205265696e7665737420616d6f756e743a2000000081525084610f8c565b821561095957600191505b6105be6040518060400160405280601d81526020017f436f6d706f756e64205633205265696e7665737420616d6f756e743a2000000081525084610f8c565b60008060006109a684610d6d565b60408082015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4091906115ab565b60208301516040517f095ea7b300000000000000000000000000000000000000000000000000000000815273a238dd80c259a72e81d7e4664a9801593f98d1c560048201526024810189905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063095ea7b3906044016020604051808303816000875af1158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061158e565b90508015610c575760208301516040517f617ba03700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018890523060448201526000606482015273a238dd80c259a72e81d7e4664a9801593f98d1c59063617ba03790608401600060405180830381600087803b158015610b9457600080fd5b505af1158015610ba8573d6000803e3d6000fd5b5050505060408381015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4191906115ab565b9050610c4d83826115c4565b9550600086119450505b5050509250929050565b6000806000610c6f84610d6d565b9050610c848160000151868360400151611021565b925082156105be5760019150509250929050565b6000806000610ca684610d6d565b60208101516040517f69328dec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024810187905230604482015290915073a238dd80c259a72e81d7e4664a9801593f98d1c5906369328dec906064016020604051808303816000875af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6091906115ab565b9586151595509350505050565b604080516060810182526000808252602080830182905292820152825190916104119184018101908401611676565b600080610da8856110e5565b90506000610db6848361110a565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820188905291925060009186169063095ea7b3906044016020604051808303816000875af1158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e55919061158e565b905080610ee4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4443414163636f756e74203a205b436f6d706f756e64205265696e766573745d60448201527f202d20417070726f76616c206661696c65640000000000000000000000000000606482015260840161046b565b6040517ff2b9fdb800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820188905284169063f2b9fdb890604401600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b5050505081610f77868561110a565b610f8191906115c4565b979650505050505050565b61101d8282604051602401610fa2929190611692565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc000000000000000000000000000000000000000000000000000000001790526111a2565b5050565b60008061102d856110e5565b9050600061103b848361110a565b6040517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018890529192509083169063f3fef3a390604401600060405180830381600087803b1580156110af57600080fd5b505af11580156110c3573d6000803e3d6000fd5b505050506110d1848361110a565b6110db90826115c4565b9695505050505050565b600060ff821661079b57507346e6b214b524310239732d51387075e0e70970bf919050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b91906115ab565b9392505050565b61047d8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000815180845260005b818110156111ed576020818501810151868301820152016111d1565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061119b60208301846111c7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156112905761129061123e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156112dd576112dd61123e565b604052919050565b801515811461047d57600080fd5b803561079b816112e5565b60ff8116811461047d57600080fd5b803561079b816112fe565b73ffffffffffffffffffffffffffffffffffffffff8116811461047d57600080fd5b803561079b81611318565b6000806040838503121561135857600080fd5b823567ffffffffffffffff8082111561137057600080fd5b908401906080828703121561138457600080fd5b61138c61126d565b82358281111561139b57600080fd5b8301601f810188136113ac57600080fd5b80356020848211156113c0576113c061123e565b6113f0817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601611296565b9450818552898183850101111561140657600080fd5b818184018287013760008183870101528484526114248187016112f3565b818501526114346040870161130d565b60408501526114456060870161133a565b6060850152929997909201359750505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561149657835160ff1683529284019291840191600101611477565b50909695505050505050565b6000602082840312156114b457600080fd5b813561119b816112fe565b6000602082840312156114d157600080fd5b813561119b81611318565b600060208083850312156114ef57600080fd5b825167ffffffffffffffff8082111561150757600080fd5b818501915085601f83011261151b57600080fd5b81518181111561152d5761152d61123e565b8060051b915061153e848301611296565b818152918301840191848101908884111561155857600080fd5b938501935b838510156115825784519250611572836112fe565b828252938501939085019061155d565b98975050505050505050565b6000602082840312156115a057600080fd5b815161119b816112e5565b6000602082840312156115bd57600080fd5b5051919050565b81810381811115610411577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006060828403121561161057600080fd5b6040516060810181811067ffffffffffffffff821117156116335761163361123e565b80604052508091508251611646816112fe565b8152602083015161165681611318565b6020820152604083015161166981611318565b6040919091015292915050565b60006060828403121561168857600080fd5b61119b83836115fe565b6040815260006116a560408301856111c7565b9050826020830152939250505056fea26469706673582212209bab0ce19b1820061ce9410e7ce91d45192f42f1f997854c563d3cc5a7ae10dc64736f6c63430008140033";

type DCAReinvestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvest__factory extends ContractFactory {
  constructor(...args: DCAReinvestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    activeLibrary_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(activeLibrary_, overrides || {});
  }
  override deploy(
    activeLibrary_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(activeLibrary_, overrides || {}) as Promise<
      DCAReinvest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvest__factory {
    return super.connect(runner) as DCAReinvest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestInterface {
    return new Interface(_abi) as DCAReinvestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAReinvest {
    return new Contract(address, _abi, runner) as unknown as DCAReinvest;
  }
}
