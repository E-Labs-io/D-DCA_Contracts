/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvest,
  DCAReinvestInterface,
} from "../../../contracts/base/DCAReinvest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "activeLibrary",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TestCall",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "oldReinvestData_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "newReinvestData_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "withdrawFunds_",
        type: "bool",
      },
    ],
    name: "migrateReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112f33803806112f383398101604081905261002f916100cc565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610073565b506000805460ff1916821515179055506100f5565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000602082840312156100de57600080fd5b815180151581146100ee57600080fd5b9392505050565b6111ef806101046000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063c9f6d48f1161005b578063c9f6d48f146101d3578063f2fde38b1461023a578063f58a59361461024d57600080fd5b80638da5cb5b1461018f578063b7f05836146101b8578063bcb9236e146101c057600080fd5b8063715018a6116100b2578063715018a614610142578063738800b71461014a5780637c4bb0b11461017257600080fd5b80630ca75044146100d957806340438aea14610110578063454f002a1461011a575b600080fd5b604080518082019091526009815268151154d508158c0b8d60ba1b60208201525b6040516101079190610d35565b60405180910390f35b610118610266565b005b61012d610128366004610ee9565b610284565b60408051928352901515602083015201610107565b61011861029d565b6100fa60405180604001604052806009815260200168151154d508158c0b8d60ba1b81525081565b60005461017f9060ff1681565b6040519015158152602001610107565b60005461010090046001600160a01b03166040516001600160a01b039091168152602001610107565b61012d6102af565b61012d6101ce366004610ee9565b6102ec565b6100fa6040517f010000000000000000000000000000000000000000000000000000000000000060208201527f1200000000000000000000000000000000000000000000000000000000000000602182015260220160405160208183030381529060405281565b610118610248366004610f2e565b6102f9565b61012d61025b366004610f4b565b600080935093915050565b61026e610355565b6000805460ff19811660ff90911615179055565b565b60008061029184846103a1565b915091505b9250929050565b6102a5610355565b6102826000610489565b60405160009081906101a4906001907f7628a2add1c8ac905e8699a1bf09feba86d0d90c0a354ee84653d24909f74a64908490a190939092509050565b60008061029184846104f9565b610301610355565b6001600160a01b038116610349576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b61035281610489565b50565b6000546001600160a01b03610100909104163314610282576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610340565b6000806103e26040518060400160405280601881526020017f45786563757472655265696e76657374204c6576656c20320000000000000000815250610538565b6040808501518151808301909252601582527f45786563757472655265696e7665737420436f646500000000000000000000006020830152906104289060ff8316610594565b60ff81166104365750610296565b60001960ff82160161045a576104508486600001516105f6565b9250925050610296565b60101960ff821601156104815760111960ff821601610481576104508486600001516107a6565b509250929050565b600080546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600080601160ff16846040015160ff16111561029657601260ff16846040015160ff16036102965761052f838560000151610a84565b91509150610296565b6103528160405160240161054c9190610d35565b60408051601f198184030181529190526020810180516001600160e01b03167f41304fac00000000000000000000000000000000000000000000000000000000179052610bd4565b6105f282826040516024016105aa929190610fc3565b60408051601f198184030181529190526020810180516001600160e01b03167fb60e72cc00000000000000000000000000000000000000000000000000000000179052610bd4565b5050565b600080600061060484610bdd565b90506106456040518060400160405280602081526020017f466f7277617264205265696e766573742061646472657373287468697329203a81525030610c12565b6106846040518060400160405280601d81526020017f466f7277617264205265696e76657374206d73672e73656e646572203a00000081525033610c12565b6106c76040518060400160405280602081526020017f466f7277617264205265696e7665737420666f7277617264696e6720746f203a8152508260200151610c12565b604080820151602083015191517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526024810188905291169063a9059cbb906044016020604051808303816000875af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610fe5565b915061079e6040518060400160405280601e81526020017f3e205265696e766573743a20466f72776172643a20537563636573733a20000081525083610c70565b509293915050565b60008060006107b484610bdd565b90506107f56040518060400160405280601d81526020017f496e2041415645205265696e76657374202d206d73672e73656e64657200000081525033610c12565b6108346040518060400160405280602081526020017f496e2041415645205265696e76657374202d206164647265737328746869732981525030610c12565b60408082015190516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190611002565b60208301516040517f095ea7b30000000000000000000000000000000000000000000000000000000081527387870bca3f3fd6335c3f4ce8392d69350b4fa4e26004820152602481018990529192506000916001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190610fe5565b90508015610a7a5760208301516040517f617ba0370000000000000000000000000000000000000000000000000000000081526001600160a01b03909116600482015260248101889052306044820152600060648201527387870bca3f3fd6335c3f4ce8392d69350b4fa4e29063617ba03790608401600060405180830381600087803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b5050505060408381015190516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a649190611002565b9050610a70838261101b565b9550600086119450505b5050509250929050565b6000806000610a9284610bdd565b9050610ab66040518060600160405280602281526020016111206022913986610594565b610ad86040518060600160405280602681526020016111426026913933610c12565b610afa6040518060600160405280602981526020016111916029913930610c12565b60208101516040517f69328dec0000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152602481018690523060448201527387870bca3f3fd6335c3f4ce8392d69350b4fa4e2906369328dec906064016020604051808303816000875af1158015610b80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba49190611002565b9250610bc86040518060600160405280602981526020016111686029913984610594565b50508015159250929050565b61035281610cce565b60408051606081018252600080825260208083018290529282015282519091610c0c91840181019084016110b4565b92915050565b6105f28282604051602401610c289291906110d0565b60408051601f198184030181529190526020810180516001600160e01b03167f319af33300000000000000000000000000000000000000000000000000000000179052610bd4565b6105f28282604051602401610c869291906110fb565b60408051601f198184030181529190526020810180516001600160e01b03167fc3b5563500000000000000000000000000000000000000000000000000000000179052610bd4565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000815180845260005b81811015610d1557602081850181015186830182015201610cf9565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d486020830184610cef565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610d8857610d88610d4f565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610db757610db7610d4f565b604052919050565b801515811461035257600080fd5b8035610dd881610dbf565b919050565b60ff8116811461035257600080fd5b8035610dd881610ddd565b6001600160a01b038116811461035257600080fd5b8035610dd881610df7565b600060808284031215610e2957600080fd5b610e31610d65565b9050813567ffffffffffffffff80821115610e4b57600080fd5b818401915084601f830112610e5f57600080fd5b8135602082821115610e7357610e73610d4f565b610e85601f8301601f19168201610d8e565b92508183528681838601011115610e9b57600080fd5b81818501828501376000818385010152828552610eb9818701610dcd565b8186015250505050610ecd60408301610dec565b6040820152610ede60608301610e0c565b606082015292915050565b60008060408385031215610efc57600080fd5b823567ffffffffffffffff811115610f1357600080fd5b610f1f85828601610e17565b95602094909401359450505050565b600060208284031215610f4057600080fd5b8135610d4881610df7565b600080600060608486031215610f6057600080fd5b833567ffffffffffffffff80821115610f7857600080fd5b610f8487838801610e17565b94506020860135915080821115610f9a57600080fd5b50610fa786828701610e17565b9250506040840135610fb881610dbf565b809150509250925092565b604081526000610fd66040830185610cef565b90508260208301529392505050565b600060208284031215610ff757600080fd5b8151610d4881610dbf565b60006020828403121561101457600080fd5b5051919050565b81810381811115610c0c57634e487b7160e01b600052601160045260246000fd5b60006060828403121561104e57600080fd5b6040516060810181811067ffffffffffffffff8211171561107157611071610d4f565b8060405250809150825161108481610ddd565b8152602083015161109481610df7565b602082015260408301516110a781610df7565b6040919091015292915050565b6000606082840312156110c657600080fd5b610d48838361103c565b6040815260006110e36040830185610cef565b90506001600160a01b03831660208301529392505050565b60408152600061110e6040830185610cef565b90508215156020830152939250505056fe3e20496e2041415645205265696e7665737420556e77696e64202d20616d6f756e743e20496e2041415645205265696e7665737420556e77696e64202d206d73672e73656e6465723e20496e2041415645205265696e766573742057697468647261776e202d206d73672e73656e6465723e20496e2041415645205265696e7665737420556e77696e64202d2061646472657373287468697329a2646970667358221220b8d9c1de3c79f556dded4aea43b5f35dd446134efb90010269c38d21e40bcc5464736f6c63430008140033";

type DCAReinvestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvest__factory extends ContractFactory {
  constructor(...args: DCAReinvestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    activeLibrary: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(activeLibrary, overrides || {});
  }
  override deploy(
    activeLibrary: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(activeLibrary, overrides || {}) as Promise<
      DCAReinvest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvest__factory {
    return super.connect(runner) as DCAReinvest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestInterface {
    return new Interface(_abi) as DCAReinvestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAReinvest {
    return new Contract(address, _abi, runner) as unknown as DCAReinvest;
  }
}
