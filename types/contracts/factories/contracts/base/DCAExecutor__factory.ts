/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvestLogic.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvestLogic.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526003805460ff191660011790553480156200001e57600080fd5b5060405162002b4c38038062002b4c83398101604081905262000041916200021b565b338181806200006a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000758162000151565b506200008181620001a1565b5050815160068054602085015160408601516060870151608088015161ffff96871663ffffffff199095169490941762010000938716939093029290921763ffffffff60201b19166401000000009186169190910261ffff60301b1916176601000000000000949091169390930292909217600160401b600160e01b031916680100000000000000006001600160a01b039384160217905560a0830151600780546001600160a01b031990811692841692909217905560c09093015160088054909416911617909155506200030d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b805161ffff81168114620001fe57600080fd5b919050565b80516001600160a01b0381168114620001fe57600080fd5b6000808284036101008112156200023157600080fd5b60e08112156200024057600080fd5b5060405160e081016001600160401b03811182821017156200027257634e487b7160e01b600052604160045260246000fd5b6040526200028084620001eb565b81526200029060208501620001eb565b6020820152620002a360408501620001eb565b6040820152620002b660608501620001eb565b6060820152620002c96080850162000203565b6080820152620002dc60a0850162000203565b60a0820152620002ef60c0850162000203565b60c082015291506200030460e0840162000203565b90509250929050565b61282f806200031d6000396000f3fe60806040526004361061016e5760003560e01c8063715018a6116100cb578063ab6319b51161007f578063f2fde38b11610059578063f2fde38b1461057f578063f3e8ff5b1461059f578063fd88ed0f146105cc576101c0565b8063ab6319b5146104f6578063bfe22a0114610516578063d9fa9c1a14610536576101c0565b80638da5cb5b116100b05780638da5cb5b146104985780639665b658146104b6578063a8c2ec03146104d6576101c0565b8063715018a614610463578063892cd8f514610478576101c0565b80633adee794116101225780635864badb116101075780635864badb146104035780635b2fc958146104235780637048027514610443576101c0565b80633adee794146103cf5780633c7c46dc146103ee576101c0565b806318f1f54d1161015357806318f1f54d1461023f578063256a49351461025f578063350157a81461039d576101c0565b80630853ac1c146102085780631785f53c1461021f576101c0565b366101c05760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101b7565b34801561021457600080fd5b5061021d6105e1565b005b34801561022b57600080fd5b5061021d61023a366004611ded565b6105f5565b34801561024b57600080fd5b5061021d61025a366004611e08565b61061e565b34801561026b57600080fd5b506103216040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516103949190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b60405180910390f35b3480156103a957600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610394565b3480156103db57600080fd5b50600a545b604051908152602001610394565b3480156103fa57600080fd5b506009546103e0565b34801561040f57600080fd5b5061021d61041e366004611f32565b6106e5565b34801561042f57600080fd5b5061021d61043e366004611e08565b610aa2565b34801561044f57600080fd5b5061021d61045e366004611ded565b610cd5565b34801561046f57600080fd5b5061021d610d01565b34801561048457600080fd5b5061021d610493366004611e08565b610d13565b3480156104a457600080fd5b506000546001600160a01b03166103b7565b3480156104c257600080fd5b5061021d6104d1366004611ded565b610e47565b3480156104e257600080fd5b5061021d6104f1366004611ded565b610e5b565b34801561050257600080fd5b5061021d610511366004611ff2565b611028565b34801561052257600080fd5b5061021d610531366004612047565b6111cc565b34801561054257600080fd5b5061056f610551366004611ded565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610394565b34801561058b57600080fd5b5061021d61059a366004611ded565b6111dd565b3480156105ab57600080fd5b506105bf6105ba366004611e08565b611231565b6040516103949190612164565b3480156105d857600080fd5b506103b7611546565b6105e961155f565b6105f360006115a5565b565b6105fd61155f565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b038316146106c25760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101b7565b6106cc82826115fc565b600980549060006106dc83612234565b91905055505050565b6001546001600160a01b031633146107655760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101b7565b60035460ff166107ca5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101b7565b600a825111156108425760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f7765640000000000000060648201526084016101b7565b80518251146108df5760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a4016101b7565b60005b8251811015610a9d5743610967600460008685815181106109055761090561224b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106109415761094161224b565b60209081029190910181015182528101919091526040016000206005015460ff16611667565b6005600086858151811061097d5761097d61224b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106109b9576109b961224b565b60200260200101518152602001908152602001600020546109da9190612261565b1015610a8b57610a1c8382815181106109f5576109f561224b565b6020026020010151838381518110610a0f57610a0f61224b565b6020026020010151611782565b15610a8b57818181518110610a3357610a3361224b565b6020026020010151838281518110610a4d57610a4d61224b565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610a9581612274565b9150506108e2565b505050565b6001546001600160a01b03163314610b225760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101b7565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610bbe5760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101b7565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610c3c57600080fd5b505af1158015610c50573d6000803e3d6000fd5b505060098054925090506000610c6583612234565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610cc99160ff169061228d565b60405180910390a45050565b610cdd61155f565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610d0961155f565b6105f36000611858565b6001546001600160a01b03163314610d935760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101b7565b60035460ff16610df85760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101b7565b6000610e048383611782565b90508015610a9d5760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b610e4f61155f565b610e58816115a5565b50565b3360009081526002602052604090205460ff1680610e8357506000546001600160a01b031633145b610ef55760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101b7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b919061229b565b90508015610a9d576000806000610f91846118b5565b6006549295509093509150610fbc906801000000000000000090046001600160a01b03168487611914565b600754610fd3906001600160a01b03168387611914565b600854610fea906001600160a01b03168287611914565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60035460ff1661108d5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101b7565b61109a6020820182611ded565b6001600160a01b0316336001600160a01b0316146111205760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101b7565b61113161112c82612475565b6119a6565b6111a35760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101b7565b6111b46111af82612475565b611a2b565b600980549060006111c483612274565b919050555050565b6111d461155f565b610e5881611c74565b6111e561155f565b6001600160a01b038116611228576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101b7565b610e5881611858565b611239611d02565b6001600160a01b03838116600090815260046020908152604080832086845282529182902082516101008101845281548516815283516060810185526001830180549687168252600160a01b90960460ff16818501526002830180549296939594870194919392918401916112ad9061254f565b80601f01602080910402602001604051908101604052809291908181526020018280546112d99061254f565b80156113265780601f106112fb57610100808354040283529160200191611326565b820191906000526020600020905b81548152906001019060200180831161130957829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061137e9061254f565b80601f01602080910402602001604051908101604052809291908181526020018280546113aa9061254f565b80156113f75780601f106113cc576101008083540402835291602001916113f7565b820191906000526020600020905b8154815290600101906020018083116113da57829003601f168201915b50505091909252505050815260058281015460209092019160ff1690811115611422576114226120df565b6005811115611433576114336120df565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060800160405290816000820180546114869061254f565b80601f01602080910402602001604051908101604052809291908181526020018280546114b29061254f565b80156114ff5780601f106114d4576101008083540402835291602001916114ff565b820191906000526020600020905b8154815290600101906020018083116114e257829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b031660609091015290525090505b92915050565b600061155a6001546001600160a01b031690565b905090565b6000546001600160a01b031633146105f3576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101b7565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b038216600081815260046020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610cc99160ff169061228d565b60008082600581111561167c5761167c6120df565b036116895750603c919050565b600182600581111561169d5761169d6120df565b036116ae57611540603c6005612589565b60028260058111156116c2576116c26120df565b036116d1575062015180919050565b60038260058111156116e5576116e56120df565b036116f457506202a300919050565b6004826005811115611708576117086120df565b03611717575062093a80919050565b600582600581111561172b5761172b6120df565b0361173a57506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101b7565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af11580156117fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182291906125a0565b90508015611851576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600654600090819081906118d090859061ffff166012611cb1565b6006549093506118ed90859062010000900461ffff166012611cb1565b60065490925061190c908590640100000000900461ffff166012611cb1565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af115801561197c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a091906125a0565b50505050565b60008060059050600081846060015160058111156119c6576119c66120df565b855191101591506001600160a01b0316158015906119f157506020840151516001600160a01b031615155b8015611a0a57506040840151516001600160a01b031615155b8015611a1a575060008460800151115b8015611a235750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a087015184528252918290208551815490851673ffffffffffffffffffffffffffffffffffffffff1990911617815581860151805195820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff1990941696909516959095179190911783559083015184939192906002840190611ada908261260b565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b0390931692909217919091178155918101519091906004840190611b3e908261260b565b50505060608201518160050160006101000a81548160ff02191690836005811115611b6b57611b6b6120df565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e0820151805160098301908190611bb4908261260b565b5060208201516001918201805460408086015160609687015161ffff1990931694151561ff0019169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191611c69919061228d565b60405180910390a450565b6003805460ff19168215159081179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600080611cbf6002846126cb565b611cca90600a6127c8565b611cd89061ffff8616612589565b9050611ce583600a6127c8565b611cef8287612589565b611cf991906127d7565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611d4e604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001611dcc604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b80356001600160a01b0381168114611de857600080fd5b919050565b600060208284031215611dff57600080fd5b61185182611dd1565b60008060408385031215611e1b57600080fd5b611e2483611dd1565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611e6c57611e6c611e32565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e9b57611e9b611e32565b604052919050565b600067ffffffffffffffff821115611ebd57611ebd611e32565b5060051b60200190565b600082601f830112611ed857600080fd5b81356020611eed611ee883611ea3565b611e72565b82815260059290921b84018101918181019086841115611f0c57600080fd5b8286015b84811015611f275780358352918301918301611f10565b509695505050505050565b60008060408385031215611f4557600080fd5b823567ffffffffffffffff80821115611f5d57600080fd5b818501915085601f830112611f7157600080fd5b81356020611f81611ee883611ea3565b82815260059290921b84018101918181019089841115611fa057600080fd5b948201945b83861015611fc557611fb686611dd1565b82529482019490820190611fa5565b96505086013592505080821115611fdb57600080fd5b50611fe885828601611ec7565b9150509250929050565b60006020828403121561200457600080fd5b813567ffffffffffffffff81111561201b57600080fd5b8201610100818503121561185157600080fd5b8015158114610e5857600080fd5b8035611de88161202e565b60006020828403121561205957600080fd5b81356118518161202e565b6000815180845260005b8181101561208a5760208185018101518683018201520161206e565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152611a236060850182612064565b634e487b7160e01b600052602160045260246000fd5b6006811061211357634e487b7160e01b600052602160045260246000fd5b9052565b600081516080845261212c6080850182612064565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b6020815261217e6020820183516001600160a01b03169052565b6000602083015161010080604085015261219c6101208501836120aa565b91506040850151601f19808685030160608701526121ba84836120aa565b9350606087015191506121d060808701836120f5565b608087015160a087015260a087015160c087015260c087015191506121f960e087018315159052565b60e08701519150808685030183870152506122148382612117565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816122435761224361221e565b506000190190565b634e487b7160e01b600052603260045260246000fd5b808201808211156115405761154061221e565b6000600182016122865761228661221e565b5060010190565b6020810161154082846120f5565b6000602082840312156122ad57600080fd5b5051919050565b803560ff81168114611de857600080fd5b600067ffffffffffffffff8311156122df576122df611e32565b6122f2601f8401601f1916602001611e72565b905082815283838301111561230657600080fd5b828260208301376000602084830101529392505050565b60006060828403121561232f57600080fd5b6040516060810167ffffffffffffffff828210818311171561235357612353611e32565b8160405282935061236385611dd1565b8352612371602086016122b4565b6020840152604085013591508082111561238a57600080fd5b508301601f8101851361239c57600080fd5b6123ab858235602084016122c5565b6040830152505092915050565b803560068110611de857600080fd5b6000608082840312156123d957600080fd5b6040516080810167ffffffffffffffff82821081831117156123fd576123fd611e32565b81604052829350843591508082111561241557600080fd5b508301601f8101851361242757600080fd5b612436858235602084016122c5565b82525060208301356124478161202e565b6020820152612458604084016122b4565b604082015261246960608401611dd1565b60608201525092915050565b6000610100823603121561248857600080fd5b612490611e48565b61249983611dd1565b8152602083013567ffffffffffffffff808211156124b657600080fd5b6124c23683870161231d565b602084015260408501359150808211156124db57600080fd5b6124e73683870161231d565b60408401526124f8606086016123b8565b60608401526080850135608084015260a085013560a084015261251d60c0860161203c565b60c084015260e085013591508082111561253657600080fd5b50612543368286016123c7565b60e08301525092915050565b600181811c9082168061256357607f821691505b60208210810361258357634e487b7160e01b600052602260045260246000fd5b50919050565b80820281158282048414176115405761154061221e565b6000602082840312156125b257600080fd5b81516118518161202e565b601f821115610a9d57600081815260208120601f850160051c810160208610156125e45750805b601f850160051c820191505b81811015612603578281556001016125f0565b505050505050565b815167ffffffffffffffff81111561262557612625611e32565b61263981612633845461254f565b846125bd565b602080601f83116001811461266e57600084156126565750858301515b600019600386901b1c1916600185901b178555612603565b600085815260208120601f198616915b8281101561269d5788860151825594840194600190910190840161267e565b50858210156126bb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff82811682821603908111156115405761154061221e565b600181815b8085111561271f5781600019048211156127055761270561221e565b8085161561271257918102915b93841c93908002906126e9565b509250929050565b60008261273657506001611540565b8161274357506000611540565b816001811461275957600281146127635761277f565b6001915050611540565b60ff8411156127745761277461221e565b50506001821b611540565b5060208310610133831016604e8410600b84101617156127a2575081810a611540565b6127ac83836126e4565b80600019048211156127c0576127c061221e565b029392505050565b600061185160ff841683612727565b6000826127f457634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220106ac2a24c127bf3058971d9545e2a22867cce1ea8dbe1760ea8e815d38f523f64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
