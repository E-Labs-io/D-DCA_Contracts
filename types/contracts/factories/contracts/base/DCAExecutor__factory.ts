/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedStrategy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FeeDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "StrategySubscription",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "getIntervalTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "isIntervalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newFlag_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "fee_",
        type: "tuple",
      },
    ],
    name: "setFeeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setIntervalActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b50604051620032e0380380620032e083398101604081905262000047916200034b565b338181806200007157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007c816200009e565b506200008881620000ee565b506200009690508262000138565b50506200046e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b62000142620002b4565b6200014d81620002e5565b620001c3576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c2031303025606482015260840162000068565b80516006805460208401516040808601516060870151608088015161ffff97881663ffffffff199096169590951762010000948816949094029390931763ffffffff60201b19166401000000009187169190910261ffff60301b1916176601000000000000959092169490940217600160401b600160e01b031916680100000000000000006001600160a01b03928316021790915560a0830151600780546001600160a01b031990811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6000546001600160a01b03163314620002e35760405163118cdaa760e01b815233600482015260240162000068565b565b6020810151815160408301516000929162000300916200043d565b6200030c91906200043d565b61ffff16612710149050919050565b805161ffff811681146200032e57600080fd5b919050565b80516001600160a01b03811681146200032e57600080fd5b6000808284036101008112156200036157600080fd5b60e08112156200037057600080fd5b5060405160e081016001600160401b0381118282101715620003a257634e487b7160e01b600052604160045260246000fd5b604052620003b0846200031b565b8152620003c0602085016200031b565b6020820152620003d3604085016200031b565b6040820152620003e6606085016200031b565b6060820152620003f96080850162000333565b60808201526200040c60a0850162000333565b60a08201526200041f60c0850162000333565b60c082015291506200043460e0840162000333565b90509250929050565b61ffff8181168382160190808211156200046757634e487b7160e01b600052601160045260246000fd5b5092915050565b612e62806200047e6000396000f3fe60806040526004361061019a5760003560e01c80637b260087116100e1578063ab6319b51161008a578063c55cfc7411610064578063c55cfc74146105f9578063d9fa9c1a14610636578063f2fde38b1461066f578063f3e8ff5b1461068f576101ec565b8063ab6319b514610599578063bfe22a01146105b9578063c4cf87f0146105d9576101ec565b80638da5cb5b116100bb5780638da5cb5b1461053b5780639665b65814610559578063a8c2ec0314610579576101ec565b80637b260087146104db578063892cd8f5146104fb57806389c8c5c91461051b576101ec565b8063350157a8116101435780635b2fc9581161011d5780635b2fc9581461048657806370480275146104a6578063715018a6146104c6576101ec565b8063350157a8146104255780633adee794146104525780633c7c46dc14610471576101ec565b80631b29b4fc116101745780631b29b4fc1461028b57806322f3e2d4146102c0578063256a4935146102f0576101ec565b80630853ac1c146102345780631785f53c1461024b57806318f1f54d1461026b576101ec565b366101ec5760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101e3565b34801561024057600080fd5b506102496106bc565b005b34801561025757600080fd5b506102496102663660046123c1565b6106d0565b34801561027757600080fd5b506102496102863660046123dc565b6106f9565b34801561029757600080fd5b506102ab6102a6366004612415565b6107c0565b60405190151581526020015b60405180910390f35b3480156102cc57600080fd5b5060025474010000000000000000000000000000000000000000900460ff166102ab565b3480156102fc57600080fd5b506103b26040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516102b79190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b34801561043157600080fd5b5061043a610803565b6040516001600160a01b0390911681526020016102b7565b34801561045e57600080fd5b50600b545b6040519081526020016102b7565b34801561047d57600080fd5b50600a54610463565b34801561049257600080fd5b506102496104a13660046123dc565b61081c565b3480156104b257600080fd5b506102496104c13660046123c1565b610a4f565b3480156104d257600080fd5b50610249610a7e565b3480156104e757600080fd5b506102496104f636600461249b565b610a90565b34801561050757600080fd5b506102496105163660046123dc565b610c80565b34801561052757600080fd5b50610463610536366004612415565b610db9565b34801561054757600080fd5b506000546001600160a01b031661043a565b34801561056557600080fd5b506102496105743660046123c1565b610df8565b34801561058557600080fd5b506102496105943660046123c1565b610e0c565b3480156105a557600080fd5b506102496105b436600461254b565b610fda565b3480156105c557600080fd5b506102496105d43660046125a0565b61124d565b3480156105e557600080fd5b506102496105f43660046125bd565b6112f0565b34801561060557600080fd5b506106196106143660046123dc565b6113d5565b6040805193845260208401929092521515908201526060016102b7565b34801561064257600080fd5b506102ab6106513660046123c1565b6001600160a01b031660009081526001602052604090205460ff1690565b34801561067b57600080fd5b5061024961068a3660046123c1565b611486565b34801561069b57600080fd5b506106af6106aa3660046123dc565b6114da565b6040516102b79190612744565b6106c4611811565b6106ce6000611857565b565b6106d8611811565b6001600160a01b03166000908152600160205260409020805460ff19169055565b336001600160a01b0383161461079d5760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101e3565b6107a782826118b9565b600a80549060006107b78361284b565b91905055505050565b6000600360008360068111156107d8576107d861268d565b60068111156107e9576107e961268d565b815260208101919091526040016000205460ff1692915050565b60006108176002546001600160a01b031690565b905090565b6002546001600160a01b0316331461089c5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101e3565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff166109385760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101e3565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517f0283e5fa000000000000000000000000000000000000000000000000000000008152908101839052630283e5fa90602401600060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b5050600a80549250905060006109df8361284b565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a92191610a439160ff1690612880565b60405180910390a45050565b610a57611811565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b610a86611811565b6106ce6000611cae565b610a98611811565b610aa181611d16565b610b15576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c203130302560648201526084016101e3565b80516006805460208401516040808601516060870151608088015161ffff9788167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909616959095176201000094881694909402939093177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000918716919091027fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff161766010000000000009590921694909402177fffffffff0000000000000000000000000000000000000000ffffffffffffffff16680100000000000000006001600160a01b03928316021790915560a0830151600780547fffffffffffffffffffffffff000000000000000000000000000000000000000090811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6002546001600160a01b03163314610d005760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101e3565b60025474010000000000000000000000000000000000000000900460ff16610d54576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d608383611d48565b90508015610db45760405182906001600160a01b038516907fb89af9bc8aa44a0bb15ecf17cc88021e8a65196963bed8e33aa51c08b1eca0ef90600090a3600b8054906000610dae8361288e565b91905055505b505050565b600060096000836006811115610dd157610dd161268d565b6006811115610de257610de261268d565b8152602001908152602001600020549050919050565b610e00611811565b610e0981611857565b50565b3360009081526001602052604090205460ff1680610e3457506000546001600160a01b031633145b610ea65760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101e3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2c91906128c6565b90508015610db45760008080610f43600685611e1e565b6006549295509093509150610f6e906801000000000000000090046001600160a01b03168487611e72565b600754610f85906001600160a01b03168387611e72565b600854610f9c906001600160a01b03168287611e72565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60025474010000000000000000000000000000000000000000900460ff1661102e576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61103b60208201826123c1565b6001600160a01b0316336001600160a01b0316146110c15760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101e3565b6110d26110cd82612acd565b611f04565b6111445760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101e3565b6111576102a66080830160608401612415565b6111c95760405162461bcd60e51b815260206004820152602d60248201527f4443416578656375746f72203a205b5375627363726962655d20496e7465727660448201527f616c204e6f74204163746976650000000000000000000000000000000000000060648201526084016101e3565b6111da6111d582612acd565b611f70565b600a80549060006111ea8361288e565b909155506009905060006112046080840160608501612415565b60068111156112155761121561268d565b60068111156112265761122661268d565b815260200190815260200160002060008154809291906112459061288e565b919050555050565b3360009081526001602052604090205460ff168061127557506000546001600160a01b031633145b6112e75760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101e3565b610e098161222d565b3360009081526001602052604090205460ff168061131857506000546001600160a01b031633145b61138a5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101e3565b80600360008460068111156113a1576113a161268d565b60068111156113b2576113b261268d565b81526020810191909152604001600020805460ff19169115159190911790555050565b6001600160a01b0382811660009081526004602081815260408084208685529091528083205490517f3887d28b000000000000000000000000000000000000000000000000000000008152918201859052919283928392911690633887d28b90602401606060405180830381865afa158015611455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114799190612ba7565b9250925092509250925092565b61148e611811565b6001600160a01b0381166114d1576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101e3565b610e0981611cae565b6114e26122d6565b6001600160a01b038381166000908152600460209081526040808320868452825291829020825161010081018452815485168152835160608101855260018301805496871682527401000000000000000000000000000000000000000090960460ff168185015260028301805492969395948701949193929184019161156790612be0565b80601f016020809104026020016040519081016040528092919081815260200182805461159390612be0565b80156115e05780601f106115b5576101008083540402835291602001916115e0565b820191906000526020600020905b8154815290600101906020018083116115c357829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff16602080840191909152600486018054919095019492939192918401919061164990612be0565b80601f016020809104026020016040519081016040528092919081815260200182805461167590612be0565b80156116c25780601f10611697576101008083540402835291602001916116c2565b820191906000526020600020905b8154815290600101906020018083116116a557829003601f168201915b505050919092525050508152600582015460209091019060ff1660068111156116ed576116ed61268d565b60068111156116fe576116fe61268d565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff161515151581526020016009820160405180608001604052908160008201805461175190612be0565b80601f016020809104026020016040519081016040528092919081815260200182805461177d90612be0565b80156117ca5780601f1061179f576101008083540402835291602001916117ca565b820191906000526020600020905b8154815290600101906020018083116117ad57829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b031660609091015290525090505b92915050565b6000546001600160a01b031633146106ce576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101e3565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b0382811660009081526004602090815260408083208584528252808320815161010081018352815486168152825160608101845260018301805497881682527401000000000000000000000000000000000000000090970460ff168186015260028301805496979296939587019491939184019161193d90612be0565b80601f016020809104026020016040519081016040528092919081815260200182805461196990612be0565b80156119b65780601f1061198b576101008083540402835291602001916119b6565b820191906000526020600020905b81548152906001019060200180831161199957829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff166020808401919091526004860180549190950194929391929184019190611a1f90612be0565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4b90612be0565b8015611a985780601f10611a6d57610100808354040283529160200191611a98565b820191906000526020600020905b815481529060010190602001808311611a7b57829003601f168201915b505050919092525050508152600582015460209091019060ff166006811115611ac357611ac361268d565b6006811115611ad457611ad461268d565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815260200160098201604051806080016040529081600082018054611b2790612be0565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5390612be0565b8015611ba05780601f10611b7557610100808354040283529160200191611ba0565b820191906000526020600020905b815481529060010190602001808311611b8357829003601f168201915b50505091835250506001919091015460ff808216151560208085019190915261010083049091166040808501919091526001600160a01b03620100009093048316606094850152939094528816600090815260048452828120888252909352908220600801805460ff191690558301519293506009929091506006811115611c2a57611c2a61268d565b6006811115611c3b57611c3b61268d565b81526020019081526020016000206000815480929190611c5a9061284b565b91905055506000151582846001600160a01b03167f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a9218460600151604051611ca19190612880565b60405180910390a4505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60208101518151604083015160009291611d2f91612c33565b611d399190612c33565b61ffff16612710149050919050565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de89190612c55565b90508015611e17576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b815460009081908190611e359061ffff16856122a2565b8554909350611e4e9062010000900461ffff16856122a2565b8554909250611e6990640100000000900461ffff16856122a2565b90509250925092565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efe9190612c55565b50505050565b6000806006905060008184606001516006811115611f2457611f2461268d565b855191101591506001600160a01b031615801590611f4f57506020840151516001600160a01b031615155b8015611f5f575060008460800151115b8015611f685750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a08701518452825291829020855181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617815581860151805195820180549382015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff000000000000000000000000000000000000000000909416969095169590951791909117835590830151849391929060028401906120459082612cc0565b5050506040828101518051600384018054602084015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b03909316929092179190911781559181015190919060048401906120c49082612cc0565b505050606082015160058201805460ff191660018360068111156120ea576120ea61268d565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e08201518051600983019081906121339082612cc0565b506020820151600191820180546040808601516060968701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093169415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a921916122229190612880565b60405180910390a450565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600060018361ffff1610156122b95750600061180b565b60006127106122cc61ffff861685612dda565b611f689190612df1565b60405180610100016040528060006001600160a01b03168152602001612322604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260200160008152602001600081526020016000151581526020016123a0604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b80356001600160a01b03811681146123bc57600080fd5b919050565b6000602082840312156123d357600080fd5b611e17826123a5565b600080604083850312156123ef57600080fd5b6123f8836123a5565b946020939093013593505050565b8035600781106123bc57600080fd5b60006020828403121561242757600080fd5b611e1782612406565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561248357612483612430565b60405290565b803561ffff811681146123bc57600080fd5b600060e082840312156124ad57600080fd5b60405160e0810181811067ffffffffffffffff821117156124d0576124d0612430565b6040526124dc83612489565b81526124ea60208401612489565b60208201526124fb60408401612489565b604082015261250c60608401612489565b606082015261251d608084016123a5565b608082015261252e60a084016123a5565b60a082015261253f60c084016123a5565b60c08201529392505050565b60006020828403121561255d57600080fd5b813567ffffffffffffffff81111561257457600080fd5b82016101008185031215611e1757600080fd5b8015158114610e0957600080fd5b80356123bc81612587565b6000602082840312156125b257600080fd5b8135611e1781612587565b600080604083850312156125d057600080fd5b6125d983612406565b915060208301356125e981612587565b809150509250929050565b6000815180845260005b8181101561261a576020818501810151868301820152016125fe565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152611f6860608501826125f4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106126f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600081516080845261270c60808501826125f4565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b6020815261275e6020820183516001600160a01b03169052565b6000602083015161010080604085015261277c610120850183612658565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808685030160608701526127b88483612658565b9350606087015191506127ce60808701836126bc565b608087015160a087015260a087015160c087015260c087015191506127f760e087018315159052565b60e087015191508086850301838701525061281283826126f7565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008161285a5761285a61281c565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6020810161180b82846126bc565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128bf576128bf61281c565b5060010190565b6000602082840312156128d857600080fd5b5051919050565b803560ff811681146123bc57600080fd5b600067ffffffffffffffff8084111561290b5761290b612430565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561295157612951612430565b8160405280935085815286868601111561296a57600080fd5b858560208301376000602087830101525050509392505050565b60006060828403121561299657600080fd5b6040516060810167ffffffffffffffff82821081831117156129ba576129ba612430565b816040528293506129ca856123a5565b83526129d8602086016128df565b602084015260408501359150808211156129f157600080fd5b508301601f81018513612a0357600080fd5b612a12858235602084016128f0565b6040830152505092915050565b600060808284031215612a3157600080fd5b6040516080810167ffffffffffffffff8282108183111715612a5557612a55612430565b816040528293508435915080821115612a6d57600080fd5b508301601f81018513612a7f57600080fd5b612a8e858235602084016128f0565b8252506020830135612a9f81612587565b6020820152612ab0604084016128df565b6040820152612ac1606084016123a5565b60608201525092915050565b60006101008236031215612ae057600080fd5b612ae861245f565b612af1836123a5565b8152602083013567ffffffffffffffff80821115612b0e57600080fd5b612b1a36838701612984565b60208401526040850135915080821115612b3357600080fd5b612b3f36838701612984565b6040840152612b5060608601612406565b60608401526080850135608084015260a085013560a0840152612b7560c08601612595565b60c084015260e0850135915080821115612b8e57600080fd5b50612b9b36828601612a1f565b60e08301525092915050565b600080600060608486031215612bbc57600080fd5b83519250602084015191506040840151612bd581612587565b809150509250925092565b600181811c90821680612bf457607f821691505b602082108103612c2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b61ffff818116838216019080821115612c4e57612c4e61281c565b5092915050565b600060208284031215612c6757600080fd5b8151611e1781612587565b601f821115610db457600081815260208120601f850160051c81016020861015612c995750805b601f850160051c820191505b81811015612cb857828155600101612ca5565b505050505050565b815167ffffffffffffffff811115612cda57612cda612430565b612cee81612ce88454612be0565b84612c72565b602080601f831160018114612d415760008415612d0b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612cb8565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612d8e57888601518255948401946001909101908401612d6f565b5085821015612dca57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761180b5761180b61281c565b600082612e27577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220c651ceb4fca57f623f46d5f60f2853b0349d78af60b0b316b2a1cfcb3a6318f964736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
