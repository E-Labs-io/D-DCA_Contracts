/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526003805460ff191660011790553480156200001e57600080fd5b5060405162002eb038038062002eb083398101604081905262000041916200021b565b338181806200006a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000758162000151565b506200008181620001a1565b5050815160068054602085015160408601516060870151608088015161ffff96871663ffffffff199095169490941762010000938716939093029290921763ffffffff60201b19166401000000009186169190910261ffff60301b1916176601000000000000949091169390930292909217600160401b600160e01b031916680100000000000000006001600160a01b039384160217905560a0830151600780546001600160a01b031990811692841692909217905560c09093015160088054909416911617909155506200030d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b805161ffff81168114620001fe57600080fd5b919050565b80516001600160a01b0381168114620001fe57600080fd5b6000808284036101008112156200023157600080fd5b60e08112156200024057600080fd5b5060405160e081016001600160401b03811182821017156200027257634e487b7160e01b600052604160045260246000fd5b6040526200028084620001eb565b81526200029060208501620001eb565b6020820152620002a360408501620001eb565b6040820152620002b660608501620001eb565b6060820152620002c96080850162000203565b6080820152620002dc60a0850162000203565b60a0820152620002ef60c0850162000203565b60c082015291506200030460e0840162000203565b90509250929050565b612b93806200031d6000396000f3fe6080604052600436106101795760003560e01c8063892cd8f5116100cb578063bfe22a011161007f578063f2fde38b11610059578063f2fde38b146105c7578063f3e8ff5b146105e7578063fd88ed0f14610614576101cb565b8063bfe22a0114610521578063c55cfc7414610541578063d9fa9c1a1461057e576101cb565b80639665b658116100b05780639665b658146104c1578063a8c2ec03146104e1578063ab6319b514610501576101cb565b8063892cd8f5146104835780638da5cb5b146104a3576101cb565b80633adee7941161012d5780635b2fc958116101075780635b2fc9581461042e578063704802751461044e578063715018a61461046e576101cb565b80633adee794146103da5780633c7c46dc146103f95780635864badb1461040e576101cb565b806318f1f54d1161015e57806318f1f54d1461024a578063256a49351461026a578063350157a8146103a8576101cb565b80630853ac1c146102135780631785f53c1461022a576101cb565b366101cb5760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101c2565b34801561021f57600080fd5b50610228610629565b005b34801561023657600080fd5b50610228610245366004611fd2565b61063d565b34801561025657600080fd5b50610228610265366004611fed565b610666565b34801561027657600080fd5b5061032c6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b60405161039f9190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b60405180910390f35b3480156103b457600080fd5b506001546001600160a01b03165b6040516001600160a01b03909116815260200161039f565b3480156103e657600080fd5b50600a545b60405190815260200161039f565b34801561040557600080fd5b506009546103eb565b34801561041a57600080fd5b5061022861042936600461214e565b61072d565b34801561043a57600080fd5b50610228610449366004611fed565b610afd565b34801561045a57600080fd5b50610228610469366004611fd2565b610d30565b34801561047a57600080fd5b50610228610d5c565b34801561048f57600080fd5b5061022861049e366004611fed565b610d6e565b3480156104af57600080fd5b506000546001600160a01b03166103c2565b3480156104cd57600080fd5b506102286104dc366004611fd2565b610eb5565b3480156104ed57600080fd5b506102286104fc366004611fd2565b610ec9565b34801561050d57600080fd5b5061022861051c36600461220e565b611096565b34801561052d57600080fd5b5061022861053c366004612263565b61124d565b34801561054d57600080fd5b5061056161055c366004611fed565b61125e565b60408051938452602084019290925215159082015260600161039f565b34801561058a57600080fd5b506105b7610599366004611fd2565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200161039f565b3480156105d357600080fd5b506102286105e2366004611fd2565b61130f565b3480156105f357600080fd5b50610607610602366004611fed565b611363565b60405161039f91906123d0565b34801561062057600080fd5b506103c261169a565b6106316116b3565b61063b60006116f9565b565b6106456116b3565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b0383161461070a5760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101c2565b610714828261175b565b60098054906000610724836124d7565b91905055505050565b6001546001600160a01b031633146107ad5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101c2565b60035460ff166108255760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101c2565b600a8251111561089d5760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f7765640000000000000060648201526084016101c2565b805182511461093a5760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a4016101c2565b60005b8251811015610af857436109c260046000868581518110610960576109606124ee565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061099c5761099c6124ee565b60209081029190910181015182528101919091526040016000206005015460ff166117c6565b600560008685815181106109d8576109d86124ee565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858581518110610a1457610a146124ee565b6020026020010151815260200190815260200160002054610a35919061251d565b1015610ae657610a77838281518110610a5057610a506124ee565b6020026020010151838381518110610a6a57610a6a6124ee565b60200260200101516118e1565b15610ae657818181518110610a8e57610a8e6124ee565b6020026020010151838281518110610aa857610aa86124ee565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610af081612530565b91505061093d565b505050565b6001546001600160a01b03163314610b7d5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101c2565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610c195760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101c2565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610c9757600080fd5b505af1158015610cab573d6000803e3d6000fd5b505060098054925090506000610cc0836124d7565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610d249160ff169061254a565b60405180910390a45050565b610d386116b3565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610d646116b3565b61063b60006119b7565b6001546001600160a01b03163314610dee5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101c2565b60035460ff16610e665760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101c2565b6000610e7283836118e1565b90508015610af85760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b610ebd6116b3565b610ec6816116f9565b50565b3360009081526002602052604090205460ff1680610ef157506000546001600160a01b031633145b610f635760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101c2565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610fc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe99190612558565b90508015610af8576000806000610fff84611a1f565b600654929550909350915061102a906801000000000000000090046001600160a01b03168487611a7e565b600754611041906001600160a01b03168387611a7e565b600854611058906001600160a01b03168287611a7e565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60035460ff1661110e5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101c2565b61111b6020820182611fd2565b6001600160a01b0316336001600160a01b0316146111a15760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101c2565b6111b26111ad82612750565b611b10565b6112245760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101c2565b61123561123082612750565b611b95565b6009805490600061124583612530565b919050555050565b6112556116b3565b610ec681611e59565b6001600160a01b0382811660009081526004602081815260408084208685529091528083205490517f3887d28b000000000000000000000000000000000000000000000000000000008152918201859052919283928392911690633887d28b90602401606060405180830381865afa1580156112de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611302919061282a565b9250925092509250925092565b6113176116b3565b6001600160a01b03811661135a576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101c2565b610ec6816119b7565b61136b611ee7565b6001600160a01b038381166000908152600460209081526040808320868452825291829020825161010081018452815485168152835160608101855260018301805496871682527401000000000000000000000000000000000000000090960460ff16818501526002830180549296939594870194919392918401916113f090612863565b80601f016020809104026020016040519081016040528092919081815260200182805461141c90612863565b80156114695780601f1061143e57610100808354040283529160200191611469565b820191906000526020600020905b81548152906001019060200180831161144c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff1660208084019190915260048601805491909501949293919291840191906114d290612863565b80601f01602080910402602001604051908101604052809291908181526020018280546114fe90612863565b801561154b5780601f106115205761010080835404028352916020019161154b565b820191906000526020600020905b81548152906001019060200180831161152e57829003601f168201915b50505091909252505050815260058281015460209092019160ff169081111561157657611576612319565b600581111561158757611587612319565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060800160405290816000820180546115da90612863565b80601f016020809104026020016040519081016040528092919081815260200182805461160690612863565b80156116535780601f1061162857610100808354040283529160200191611653565b820191906000526020600020905b81548152906001019060200180831161163657829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b031660609091015290525090505b92915050565b60006116ae6001546001600160a01b031690565b905090565b6000546001600160a01b0316331461063b576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101c2565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b038216600081815260046020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610d249160ff169061254a565b6000808260058111156117db576117db612319565b036117e85750603c919050565b60018260058111156117fc576117fc612319565b0361180d57611694603c60056128b6565b600282600581111561182157611821612319565b03611830575062015180919050565b600382600581111561184457611844612319565b0361185357506202a300919050565b600482600581111561186757611867612319565b03611876575062093a80919050565b600582600581111561188a5761188a612319565b0361189957506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101c2565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af115801561195d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198191906128cd565b905080156119b0576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60065460009081908190611a3a90859061ffff166012611e96565b600654909350611a5790859062010000900461ffff166012611e96565b600654909250611a76908590640100000000900461ffff166012611e96565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0a91906128cd565b50505050565b6000806005905060008184606001516005811115611b3057611b30612319565b855191101591506001600160a01b031615801590611b5b57506020840151516001600160a01b031615155b8015611b7457506040840151516001600160a01b031615155b8015611b84575060008460800151115b8015611b8d5750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a08701518452825291829020855181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617815581860151805195820180549382015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090941696909516959095179190911783559083015184939192906002840190611c6a9082612938565b5050506040828101518051600384018054602084015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b0390931692909217919091178155918101519091906004840190611ce99082612938565b50505060608201518160050160006101000a81548160ff02191690836005811115611d1657611d16612319565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e0820151805160098301908190611d5f9082612938565b506020820151600191820180546040808601516060968701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093169415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191611e4e919061254a565b60405180910390a450565b6003805460ff19168215159081179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600080611ea4600284612a16565b611eaf90600a612b13565b611ebd9061ffff86166128b6565b9050611eca83600a612b13565b611ed482876128b6565b611ede9190612b22565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611f33604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001611fb1604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b80356001600160a01b0381168114611fcd57600080fd5b919050565b600060208284031215611fe457600080fd5b6119b082611fb6565b6000806040838503121561200057600080fd5b61200983611fb6565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561206a5761206a612017565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120b7576120b7612017565b604052919050565b600067ffffffffffffffff8211156120d9576120d9612017565b5060051b60200190565b600082601f8301126120f457600080fd5b81356020612109612104836120bf565b612070565b82815260059290921b8401810191818101908684111561212857600080fd5b8286015b84811015612143578035835291830191830161212c565b509695505050505050565b6000806040838503121561216157600080fd5b823567ffffffffffffffff8082111561217957600080fd5b818501915085601f83011261218d57600080fd5b8135602061219d612104836120bf565b82815260059290921b840181019181810190898411156121bc57600080fd5b948201945b838610156121e1576121d286611fb6565b825294820194908201906121c1565b965050860135925050808211156121f757600080fd5b50612204858286016120e3565b9150509250929050565b60006020828403121561222057600080fd5b813567ffffffffffffffff81111561223757600080fd5b820161010081850312156119b057600080fd5b8015158114610ec657600080fd5b8035611fcd8161224a565b60006020828403121561227557600080fd5b81356119b08161224a565b6000815180845260005b818110156122a65760208185018101518683018201520161228a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152611b8d6060850182612280565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061237f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60008151608084526123986080850182612280565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b602081526123ea6020820183516001600160a01b03169052565b600060208301516101008060408501526124086101208501836122e4565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08086850301606087015261244484836122e4565b93506060870151915061245a6080870183612348565b608087015160a087015260a087015160c087015260c0870151915061248360e087018315159052565b60e087015191508086850301838701525061249e8382612383565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816124e6576124e66124a8565b506000190190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80820180821115611694576116946124a8565b60006000198203612543576125436124a8565b5060010190565b602081016116948284612348565b60006020828403121561256a57600080fd5b5051919050565b803560ff81168114611fcd57600080fd5b600067ffffffffffffffff83111561259c5761259c612017565b6125cd60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612070565b90508281528383830111156125e157600080fd5b828260208301376000602084830101529392505050565b60006060828403121561260a57600080fd5b6040516060810167ffffffffffffffff828210818311171561262e5761262e612017565b8160405282935061263e85611fb6565b835261264c60208601612571565b6020840152604085013591508082111561266557600080fd5b508301601f8101851361267757600080fd5b61268685823560208401612582565b6040830152505092915050565b803560068110611fcd57600080fd5b6000608082840312156126b457600080fd5b6040516080810167ffffffffffffffff82821081831117156126d8576126d8612017565b8160405282935084359150808211156126f057600080fd5b508301601f8101851361270257600080fd5b61271185823560208401612582565b82525060208301356127228161224a565b602082015261273360408401612571565b604082015261274460608401611fb6565b60608201525092915050565b6000610100823603121561276357600080fd5b61276b612046565b61277483611fb6565b8152602083013567ffffffffffffffff8082111561279157600080fd5b61279d368387016125f8565b602084015260408501359150808211156127b657600080fd5b6127c2368387016125f8565b60408401526127d360608601612693565b60608401526080850135608084015260a085013560a08401526127f860c08601612258565b60c084015260e085013591508082111561281157600080fd5b5061281e368286016126a2565b60e08301525092915050565b60008060006060848603121561283f57600080fd5b835192506020840151915060408401516128588161224a565b809150509250925092565b600181811c9082168061287757607f821691505b6020821081036128b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8082028115828204841417611694576116946124a8565b6000602082840312156128df57600080fd5b81516119b08161224a565b601f821115610af857600081815260208120601f850160051c810160208610156129115750805b601f850160051c820191505b818110156129305782815560010161291d565b505050505050565b815167ffffffffffffffff81111561295257612952612017565b612966816129608454612863565b846128ea565b602080601f83116001811461299b57600084156129835750858301515b600019600386901b1c1916600185901b178555612930565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156129e8578886015182559484019460019091019084016129c9565b5085821015612a065787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff8281168282160390811115611694576116946124a8565b600181815b80851115612a6a578160001904821115612a5057612a506124a8565b80851615612a5d57918102915b93841c9390800290612a34565b509250929050565b600082612a8157506001611694565b81612a8e57506000611694565b8160018114612aa45760028114612aae57612aca565b6001915050611694565b60ff841115612abf57612abf6124a8565b50506001821b611694565b5060208310610133831016604e8410600b8410161715612aed575081810a611694565b612af78383612a2f565b8060001904821115612b0b57612b0b6124a8565b029392505050565b60006119b060ff841683612a72565b600082612b58577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220e9f55de9b9c78e208b6e3d5ad9b123f3657445b5a59434a808283ae62e1ce1aa64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
