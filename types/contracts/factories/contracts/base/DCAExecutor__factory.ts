/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526003805460ff191660011790553480156200001e57600080fd5b5060405162002d7e38038062002d7e83398101604081905262000041916200021b565b338181806200006a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000758162000151565b506200008181620001a1565b5050815160068054602085015160408601516060870151608088015161ffff96871663ffffffff199095169490941762010000938716939093029290921763ffffffff60201b19166401000000009186169190910261ffff60301b1916176601000000000000949091169390930292909217600160401b600160e01b031916680100000000000000006001600160a01b039384160217905560a0830151600780546001600160a01b031990811692841692909217905560c09093015160088054909416911617909155506200030d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b805161ffff81168114620001fe57600080fd5b919050565b80516001600160a01b0381168114620001fe57600080fd5b6000808284036101008112156200023157600080fd5b60e08112156200024057600080fd5b5060405160e081016001600160401b03811182821017156200027257634e487b7160e01b600052604160045260246000fd5b6040526200028084620001eb565b81526200029060208501620001eb565b6020820152620002a360408501620001eb565b6040820152620002b660608501620001eb565b6060820152620002c96080850162000203565b6080820152620002dc60a0850162000203565b60a0820152620002ef60c0850162000203565b60c082015291506200030460e0840162000203565b90509250929050565b612a61806200031d6000396000f3fe60806040526004361061016e5760003560e01c8063715018a6116100cb578063ab6319b51161007f578063f2fde38b11610059578063f2fde38b1461057f578063f3e8ff5b1461059f578063fd88ed0f146105cc576101c0565b8063ab6319b5146104f6578063bfe22a0114610516578063d9fa9c1a14610536576101c0565b80638da5cb5b116100b05780638da5cb5b146104985780639665b658146104b6578063a8c2ec03146104d6576101c0565b8063715018a614610463578063892cd8f514610478576101c0565b80633adee794116101225780635864badb116101075780635864badb146104035780635b2fc958146104235780637048027514610443576101c0565b80633adee794146103cf5780633c7c46dc146103ee576101c0565b806318f1f54d1161015357806318f1f54d1461023f578063256a49351461025f578063350157a81461039d576101c0565b80630853ac1c146102085780631785f53c1461021f576101c0565b366101c05760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101b7565b34801561021457600080fd5b5061021d6105e1565b005b34801561022b57600080fd5b5061021d61023a366004611ed9565b6105f5565b34801561024b57600080fd5b5061021d61025a366004611ef4565b61061e565b34801561026b57600080fd5b506103216040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516103949190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b60405180910390f35b3480156103a957600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610394565b3480156103db57600080fd5b50600a545b604051908152602001610394565b3480156103fa57600080fd5b506009546103e0565b34801561040f57600080fd5b5061021d61041e366004612055565b6106e5565b34801561042f57600080fd5b5061021d61043e366004611ef4565b610ab5565b34801561044f57600080fd5b5061021d61045e366004611ed9565b610ce8565b34801561046f57600080fd5b5061021d610d14565b34801561048457600080fd5b5061021d610493366004611ef4565b610d26565b3480156104a457600080fd5b506000546001600160a01b03166103b7565b3480156104c257600080fd5b5061021d6104d1366004611ed9565b610e6d565b3480156104e257600080fd5b5061021d6104f1366004611ed9565b610e81565b34801561050257600080fd5b5061021d610511366004612115565b61104e565b34801561052257600080fd5b5061021d61053136600461216a565b611205565b34801561054257600080fd5b5061056f610551366004611ed9565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610394565b34801561058b57600080fd5b5061021d61059a366004611ed9565b611216565b3480156105ab57600080fd5b506105bf6105ba366004611ef4565b61126a565b60405161039491906122d7565b3480156105d857600080fd5b506103b76115a1565b6105e96115ba565b6105f36000611600565b565b6105fd6115ba565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b038316146106c25760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101b7565b6106cc8282611662565b600980549060006106dc836123de565b91905055505050565b6001546001600160a01b031633146107655760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101b7565b60035460ff166107dd5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101b7565b600a825111156108555760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f7765640000000000000060648201526084016101b7565b80518251146108f25760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a4016101b7565b60005b8251811015610ab0574361097a60046000868581518110610918576109186123f5565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858581518110610954576109546123f5565b60209081029190910181015182528101919091526040016000206005015460ff166116cd565b60056000868581518110610990576109906123f5565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106109cc576109cc6123f5565b60200260200101518152602001908152602001600020546109ed9190612424565b1015610a9e57610a2f838281518110610a0857610a086123f5565b6020026020010151838381518110610a2257610a226123f5565b60200260200101516117e8565b15610a9e57818181518110610a4657610a466123f5565b6020026020010151838281518110610a6057610a606123f5565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610aa881612437565b9150506108f5565b505050565b6001546001600160a01b03163314610b355760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101b7565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610bd15760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101b7565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610c4f57600080fd5b505af1158015610c63573d6000803e3d6000fd5b505060098054925090506000610c78836123de565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610cdc9160ff1690612451565b60405180910390a45050565b610cf06115ba565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610d1c6115ba565b6105f360006118be565b6001546001600160a01b03163314610da65760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101b7565b60035460ff16610e1e5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101b7565b6000610e2a83836117e8565b90508015610ab05760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b610e756115ba565b610e7e81611600565b50565b3360009081526002602052604090205460ff1680610ea957506000546001600160a01b031633145b610f1b5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101b7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa1919061245f565b90508015610ab0576000806000610fb784611926565b6006549295509093509150610fe2906801000000000000000090046001600160a01b03168487611985565b600754610ff9906001600160a01b03168387611985565b600854611010906001600160a01b03168287611985565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60035460ff166110c65760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101b7565b6110d36020820182611ed9565b6001600160a01b0316336001600160a01b0316146111595760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101b7565b61116a61116582612657565b611a17565b6111dc5760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101b7565b6111ed6111e882612657565b611a9c565b600980549060006111fd83612437565b919050555050565b61120d6115ba565b610e7e81611d60565b61121e6115ba565b6001600160a01b038116611261576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101b7565b610e7e816118be565b611272611dee565b6001600160a01b038381166000908152600460209081526040808320868452825291829020825161010081018452815485168152835160608101855260018301805496871682527401000000000000000000000000000000000000000090960460ff16818501526002830180549296939594870194919392918401916112f790612731565b80601f016020809104026020016040519081016040528092919081815260200182805461132390612731565b80156113705780601f1061134557610100808354040283529160200191611370565b820191906000526020600020905b81548152906001019060200180831161135357829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff1660208084019190915260048601805491909501949293919291840191906113d990612731565b80601f016020809104026020016040519081016040528092919081815260200182805461140590612731565b80156114525780601f1061142757610100808354040283529160200191611452565b820191906000526020600020905b81548152906001019060200180831161143557829003601f168201915b50505091909252505050815260058281015460209092019160ff169081111561147d5761147d612220565b600581111561148e5761148e612220565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060800160405290816000820180546114e190612731565b80601f016020809104026020016040519081016040528092919081815260200182805461150d90612731565b801561155a5780601f1061152f5761010080835404028352916020019161155a565b820191906000526020600020905b81548152906001019060200180831161153d57829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b031660609091015290525090505b92915050565b60006115b56001546001600160a01b031690565b905090565b6000546001600160a01b031633146105f3576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101b7565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b038216600081815260046020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610cdc9160ff1690612451565b6000808260058111156116e2576116e2612220565b036116ef5750603c919050565b600182600581111561170357611703612220565b036117145761159b603c6005612784565b600282600581111561172857611728612220565b03611737575062015180919050565b600382600581111561174b5761174b612220565b0361175a57506202a300919050565b600482600581111561176e5761176e612220565b0361177d575062093a80919050565b600582600581111561179157611791612220565b036117a057506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101b7565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611864573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611888919061279b565b905080156118b7576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6006546000908190819061194190859061ffff166012611d9d565b60065490935061195e90859062010000900461ffff166012611d9d565b60065490925061197d908590640100000000900461ffff166012611d9d565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af11580156119ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a11919061279b565b50505050565b6000806005905060008184606001516005811115611a3757611a37612220565b855191101591506001600160a01b031615801590611a6257506020840151516001600160a01b031615155b8015611a7b57506040840151516001600160a01b031615155b8015611a8b575060008460800151115b8015611a945750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a08701518452825291829020855181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617815581860151805195820180549382015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090941696909516959095179190911783559083015184939192906002840190611b719082612806565b5050506040828101518051600384018054602084015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b0390931692909217919091178155918101519091906004840190611bf09082612806565b50505060608201518160050160006101000a81548160ff02191690836005811115611c1d57611c1d612220565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e0820151805160098301908190611c669082612806565b506020820151600191820180546040808601516060968701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093169415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191611d559190612451565b60405180910390a450565b6003805460ff19168215159081179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600080611dab6002846128e4565b611db690600a6129e1565b611dc49061ffff8616612784565b9050611dd183600a6129e1565b611ddb8287612784565b611de591906129f0565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611e3a604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001611eb8604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b80356001600160a01b0381168114611ed457600080fd5b919050565b600060208284031215611eeb57600080fd5b6118b782611ebd565b60008060408385031215611f0757600080fd5b611f1083611ebd565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611f7157611f71611f1e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611fbe57611fbe611f1e565b604052919050565b600067ffffffffffffffff821115611fe057611fe0611f1e565b5060051b60200190565b600082601f830112611ffb57600080fd5b8135602061201061200b83611fc6565b611f77565b82815260059290921b8401810191818101908684111561202f57600080fd5b8286015b8481101561204a5780358352918301918301612033565b509695505050505050565b6000806040838503121561206857600080fd5b823567ffffffffffffffff8082111561208057600080fd5b818501915085601f83011261209457600080fd5b813560206120a461200b83611fc6565b82815260059290921b840181019181810190898411156120c357600080fd5b948201945b838610156120e8576120d986611ebd565b825294820194908201906120c8565b965050860135925050808211156120fe57600080fd5b5061210b85828601611fea565b9150509250929050565b60006020828403121561212757600080fd5b813567ffffffffffffffff81111561213e57600080fd5b820161010081850312156118b757600080fd5b8015158114610e7e57600080fd5b8035611ed481612151565b60006020828403121561217c57600080fd5b81356118b781612151565b6000815180845260005b818110156121ad57602081850181015186830182015201612191565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152611a946060850182612187565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110612286577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600081516080845261229f6080850182612187565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b602081526122f16020820183516001600160a01b03169052565b6000602083015161010080604085015261230f6101208501836121eb565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08086850301606087015261234b84836121eb565b935060608701519150612361608087018361224f565b608087015160a087015260a087015160c087015260c0870151915061238a60e087018315159052565b60e08701519150808685030183870152506123a5838261228a565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816123ed576123ed6123af565b506000190190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8082018082111561159b5761159b6123af565b6000600019820361244a5761244a6123af565b5060010190565b6020810161159b828461224f565b60006020828403121561247157600080fd5b5051919050565b803560ff81168114611ed457600080fd5b600067ffffffffffffffff8311156124a3576124a3611f1e565b6124d460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601611f77565b90508281528383830111156124e857600080fd5b828260208301376000602084830101529392505050565b60006060828403121561251157600080fd5b6040516060810167ffffffffffffffff828210818311171561253557612535611f1e565b8160405282935061254585611ebd565b835261255360208601612478565b6020840152604085013591508082111561256c57600080fd5b508301601f8101851361257e57600080fd5b61258d85823560208401612489565b6040830152505092915050565b803560068110611ed457600080fd5b6000608082840312156125bb57600080fd5b6040516080810167ffffffffffffffff82821081831117156125df576125df611f1e565b8160405282935084359150808211156125f757600080fd5b508301601f8101851361260957600080fd5b61261885823560208401612489565b825250602083013561262981612151565b602082015261263a60408401612478565b604082015261264b60608401611ebd565b60608201525092915050565b6000610100823603121561266a57600080fd5b612672611f4d565b61267b83611ebd565b8152602083013567ffffffffffffffff8082111561269857600080fd5b6126a4368387016124ff565b602084015260408501359150808211156126bd57600080fd5b6126c9368387016124ff565b60408401526126da6060860161259a565b60608401526080850135608084015260a085013560a08401526126ff60c0860161215f565b60c084015260e085013591508082111561271857600080fd5b50612725368286016125a9565b60e08301525092915050565b600181811c9082168061274557607f821691505b60208210810361277e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808202811582820484141761159b5761159b6123af565b6000602082840312156127ad57600080fd5b81516118b781612151565b601f821115610ab057600081815260208120601f850160051c810160208610156127df5750805b601f850160051c820191505b818110156127fe578281556001016127eb565b505050505050565b815167ffffffffffffffff81111561282057612820611f1e565b6128348161282e8454612731565b846127b8565b602080601f83116001811461286957600084156128515750858301515b600019600386901b1c1916600185901b1785556127fe565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156128b657888601518255948401946001909101908401612897565b50858210156128d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff828116828216039081111561159b5761159b6123af565b600181815b8085111561293857816000190482111561291e5761291e6123af565b8085161561292b57918102915b93841c9390800290612902565b509250929050565b60008261294f5750600161159b565b8161295c5750600061159b565b8160018114612972576002811461297c57612998565b600191505061159b565b60ff84111561298d5761298d6123af565b50506001821b61159b565b5060208310610133831016604e8410600b84101617156129bb575081810a61159b565b6129c583836128fd565b80600019048211156129d9576129d96123af565b029392505050565b60006118b760ff841683612940565b600082612a26577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220993287fd47ee3d9ccc8332e8041ded9345abb88f561ae9072392eeb800bec91664736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
