/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FeeDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVcalculateFeeOfAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVcalculateSplitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVgetFeeQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVgetFeesOfAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "executorFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "computingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "adminFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "fee_",
        type: "tuple",
      },
    ],
    name: "setFeeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526003805460ff191660011790553480156200001e57600080fd5b50604051620038813803806200388183398101604081905262000041916200041f565b338181806200006b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000768162000098565b506200008281620000e8565b506200009090508262000132565b505062000599565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6200013c620002fd565b6200018b6040518060400160405280601681526020017f636865636b20746f74616c2066656520616d6f756e7400000000000000000000815250826060015161ffff166200032e60201b60201c565b62000196816200037f565b6200020c576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c2031303025606482015260840162000062565b80516006805460208401516040808601516060870151608088015161ffff97881663ffffffff199096169590951762010000948816949094029390931763ffffffff60201b19166401000000009187169190910261ffff60301b1916176601000000000000959092169490940217600160401b600160e01b031916680100000000000000006001600160a01b03928316021790915560a0830151600780546001600160a01b031990811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6000546001600160a01b031633146200032c5760405163118cdaa760e01b815233600482015260240162000062565b565b6200037b82826040516024016200034792919062000511565b60408051601f198184030181529190526020810180516001600160e01b03908116632d839cb360e21b17909152620003b516565b5050565b602081015181516040830151600092916200039a9162000568565b620003a6919062000568565b61ffff16612710149050919050565b620003cb81620003ce60201b62001a441760201c565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b805161ffff811681146200040257600080fd5b919050565b80516001600160a01b03811681146200040257600080fd5b6000808284036101008112156200043557600080fd5b60e08112156200044457600080fd5b5060405160e081016001600160401b03811182821017156200047657634e487b7160e01b600052604160045260246000fd5b6040526200048484620003ef565b81526200049460208501620003ef565b6020820152620004a760408501620003ef565b6040820152620004ba60608501620003ef565b6060820152620004cd6080850162000407565b6080820152620004e060a0850162000407565b60a0820152620004f360c0850162000407565b60c082015291506200050860e0840162000407565b90509250929050565b604081526000835180604084015260005b8181101562000541576020818701810151606086840101520162000522565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b61ffff8181168382160190808211156200059257634e487b7160e01b600052601160045260246000fd5b5092915050565b6132d880620005a96000396000f3fe6080604052600436106101b05760003560e01c806370480275116100ec578063ab6319b51161008a578063d9fa9c1a11610064578063d9fa9c1a14610670578063f2fde38b146106b9578063f3e8ff5b146106d9578063fd88ed0f1461070657610202565b8063ab6319b5146105f3578063bfe22a0114610613578063c55cfc741461063357610202565b8063892cd8f5116100c6578063892cd8f5146105755780638da5cb5b146105955780639665b658146105b3578063a8c2ec03146105d357610202565b80637048027514610520578063715018a6146105405780637b2600871461055557610202565b8063256a4935116101595780633c7c46dc116101335780633c7c46dc146104ab5780635864badb146104c05780635b2fc958146104e0578063701ebd5e1461050057610202565b8063256a49351461032f578063350157a8146104645780633adee7941461049657610202565b80631785f53c1161018a5780631785f53c146102cf57806318f1f54d146102ef5780632200dd761461030f57610202565b80630853ac1c1461024a578063144b771514610261578063177a3cc5146102a157610202565b366102025760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101f9565b34801561025657600080fd5b5061025f61071b565b005b34801561026d57600080fd5b5061028161027c36600461266b565b61072f565b604080519384526020840192909252908201526060015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc36600461269b565b61074b565b604051908152602001610298565b3480156102db57600080fd5b5061025f6102ea3660046126dc565b610764565b3480156102fb57600080fd5b5061025f61030a3660046126f7565b61078d565b34801561031b57600080fd5b506102c161032a36600461269b565b610854565b34801561033b57600080fd5b506103f16040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516102989190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b34801561047057600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610298565b3480156104a257600080fd5b50600a546102c1565b3480156104b757600080fd5b506009546102c1565b3480156104cc57600080fd5b5061025f6104db36600461282c565b610864565b3480156104ec57600080fd5b5061025f6104fb3660046126f7565b610c3a565b34801561050c57600080fd5b506102c161051b36600461266b565b610e6d565b34801561052c57600080fd5b5061025f61053b3660046126dc565b610e8b565b34801561054c57600080fd5b5061025f610eb7565b34801561056157600080fd5b5061025f6105703660046128ec565b610ec9565b34801561058157600080fd5b5061025f6105903660046126f7565b611100565b3480156105a157600080fd5b506000546001600160a01b031661047e565b3480156105bf57600080fd5b5061025f6105ce3660046126dc565b611247565b3480156105df57600080fd5b5061025f6105ee3660046126dc565b61125b565b3480156105ff57600080fd5b5061025f61060e36600461299c565b611429565b34801561061f57600080fd5b5061025f61062e3660046129f1565b6115e0565b34801561063f57600080fd5b5061065361064e3660046126f7565b6115f1565b604080519384526020840192909252151590820152606001610298565b34801561067c57600080fd5b506106a961068b3660046126dc565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610298565b3480156106c557600080fd5b5061025f6106d43660046126dc565b6116a2565b3480156106e557600080fd5b506106f96106f43660046126f7565b6116f6565b6040516102989190612b40565b34801561071257600080fd5b5061047e611a2b565b610723611a65565b61072d6000611aab565b565b6000808061073e600685611b0d565b9250925092509193909250565b600061075b61ffff841683611b80565b90505b92915050565b61076c611a65565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b038316146108315760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101f9565b61083b8282611c6f565b6009805490600061084b83612c29565b91905055505050565b600061075b61ffff841683611cda565b6001546001600160a01b031633146108e45760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101f9565b60035460ff1661095c5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101f9565b600a825111156109d45760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f7765640000000000000060648201526084016101f9565b8051825114610a715760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a4016101f9565b60005b8251811015610c3557610b7360056000858481518110610a9657610a96612c5e565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000848481518110610ad257610ad2612c5e565b602002602001015181526020019081526020016000205460046000868581518110610aff57610aff612c5e565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858581518110610b3b57610b3b612c5e565b60209081029190910181015182528101919091526040016000206005015460ff166007811115610b6d57610b6d612a89565b90611d68565b15610c2357610bb4838281518110610b8d57610b8d612c5e565b6020026020010151838381518110610ba757610ba7612c5e565b6020026020010151611d7c565b15610c2357818181518110610bcb57610bcb612c5e565b6020026020010151838281518110610be557610be5612c5e565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610c2d81612c8d565b915050610a74565b505050565b6001546001600160a01b03163314610cba5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101f9565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610d565760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101f9565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610dd457600080fd5b505af1158015610de8573d6000803e3d6000fd5b505060098054925090506000610dfd83612c29565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610e619160ff1690612cc5565b60405180910390a45050565b60065460009061075e906601000000000000900461ffff1683611cda565b610e93611a65565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610ebf611a65565b61072d6000611e52565b610ed1611a65565b610f186040518060400160405280601681526020017f636865636b20746f74616c2066656520616d6f756e7400000000000000000000815250826060015161ffff16611eba565b610f2181611f31565b610f95576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c203130302560648201526084016101f9565b80516006805460208401516040808601516060870151608088015161ffff9788167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909616959095176201000094881694909402939093177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000918716919091027fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff161766010000000000009590921694909402177fffffffff0000000000000000000000000000000000000000ffffffffffffffff16680100000000000000006001600160a01b03928316021790915560a0830151600780547fffffffffffffffffffffffff000000000000000000000000000000000000000090811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6001546001600160a01b031633146111805760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101f9565b60035460ff166111f85760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101f9565b60006112048383611d7c565b90508015610c355760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b61124f611a65565b61125881611aab565b50565b3360009081526002602052604090205460ff168061128357506000546001600160a01b031633145b6112f55760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101f9565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137b9190612cd3565b90508015610c355760008080611392600685611b0d565b60065492955090935091506113bd906801000000000000000090046001600160a01b03168487611f63565b6007546113d4906001600160a01b03168387611f63565b6008546113eb906001600160a01b03168287611f63565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60035460ff166114a15760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101f9565b6114ae60208201826126dc565b6001600160a01b0316336001600160a01b0316146115345760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101f9565b61154561154082612ead565b611ff5565b6115b75760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101f9565b6115c86115c382612ead565b61207a565b600980549060006115d883612c8d565b919050555050565b6115e8611a65565b61125881612337565b6001600160a01b0382811660009081526004602081815260408084208685529091528083205490517f3887d28b000000000000000000000000000000000000000000000000000000008152918201859052919283928392911690633887d28b90602401606060405180830381865afa158015611671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116959190612f87565b9250925092509250925092565b6116aa611a65565b6001600160a01b0381166116ed576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101f9565b61125881611e52565b6116fe61259c565b6001600160a01b038381166000908152600460209081526040808320868452825291829020825161010081018452815485168152835160608101855260018301805496871682527401000000000000000000000000000000000000000090960460ff168185015260028301805492969395948701949193929184019161178390612fc0565b80601f01602080910402602001604051908101604052809291908181526020018280546117af90612fc0565b80156117fc5780601f106117d1576101008083540402835291602001916117fc565b820191906000526020600020905b8154815290600101906020018083116117df57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff16602080840191909152600486018054919095019492939192918401919061186590612fc0565b80601f016020809104026020016040519081016040528092919081815260200182805461189190612fc0565b80156118de5780601f106118b3576101008083540402835291602001916118de565b820191906000526020600020905b8154815290600101906020018083116118c157829003601f168201915b505050919092525050508152600582015460209091019060ff16600781111561190957611909612a89565b600781111561191a5761191a612a89565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff161515151581526020016009820160405180608001604052908160008201805461196d90612fc0565b80601f016020809104026020016040519081016040528092919081815260200182805461199990612fc0565b80156119e65780601f106119bb576101008083540402835291602001916119e6565b820191906000526020600020905b8154815290600101906020018083116119c957829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b03166060909101529052509392505050565b6000611a3f6001546001600160a01b031690565b905090565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000546001600160a01b0316331461072d576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101f9565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b600080600080611b2f8660000160069054906101000a900461ffff1686611b80565b8654909150611b429061ffff1682611b80565b8654909450611b5b9062010000900461ffff1682611b80565b8654909350611b7690640100000000900461ffff1682611b80565b9150509250925092565b600060018361ffff161015611b975750600061075e565b611c116040518060400160405280600781526020017f46696e64696e67000000000000000000000000000000000000000000000000008152508461ffff166040518060400160405280600281526020017f6f6600000000000000000000000000000000000000000000000000000000000081525085612374565b6000612710611c2461ffff861685613013565b611c2e919061302a565b905061075b6040518060400160405280600981526020017f616e73776572206973000000000000000000000000000000000000000000000081525082611eba565b6001600160a01b038216600081815260046020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610e619160ff1690612cc5565b6000611d1f6040518060400160405280601181526020017f546f74616c204665652050657263656e740000000000000000000000000000008152508461ffff16611eba565b611d5e6040518060400160405280600881526020017f746f74616c20496e00000000000000000000000000000000000000000000000081525083611eba565b61075b8383611b80565b6000611d7483836123eb565b159392505050565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1c9190613065565b9050801561075b576001600160a01b03841660009081526005602090815260408083208684529091529020439055905092915050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611f2d8282604051602401611ed0929190613082565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052612423565b5050565b60208101518151604083015160009291611f4a916130a4565b611f5491906130a4565b61ffff16612710149050919050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fef9190613065565b50505050565b600080600790506000818460600151600781111561201557612015612a89565b855191101591506001600160a01b03161580159061204057506020840151516001600160a01b031615155b801561205957506040840151516001600160a01b031615155b8015612069575060008460800151115b80156120725750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a08701518452825291829020855181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617815581860151805195820180549382015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009094169690951695909517919091178355908301518493919290600284019061214f9082613114565b5050506040828101518051600384018054602084015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b03909316929092179190911781559181015190919060048401906121ce9082613114565b505050606082015160058201805460ff191660018360078111156121f4576121f4612a89565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e082015180516009830190819061223d9082613114565b506020820151600191820180546040808601516060968701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093169415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c19161232c9190612cc5565b60405180910390a450565b6003805460ff19168215159081179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b611fef8484848460405160240161238e9493929190613210565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc67ea9d100000000000000000000000000000000000000000000000000000000179052612423565b6000806123f78461242c565b612401908461324d565b9050804211612419576124144282613260565b612072565b6000949350505050565b61125881611a44565b60008082600781111561244157612441612a89565b0361244e5750603c919050565b600182600781111561246257612462612a89565b036124735761075e603c6005613013565b600282600781111561248757612487612a89565b036124995761075e610e10600c613013565b60038260078111156124ad576124ad612a89565b036124bc575062015180919050565b60048260078111156124d0576124d0612a89565b036124df57506202a300919050565b60058260078111156124f3576124f3612a89565b03612502575062093a80919050565b600682600781111561251657612516612a89565b036125295761075e62093a806002613013565b600782600781111561253d5761253d612a89565b0361254c57506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101f9565b61072d613273565b60405180610100016040528060006001600160a01b031681526020016125e8604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001612666604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b60006020828403121561267d57600080fd5b5035919050565b803561ffff8116811461269657600080fd5b919050565b600080604083850312156126ae57600080fd5b6126b783612684565b946020939093013593505050565b80356001600160a01b038116811461269657600080fd5b6000602082840312156126ee57600080fd5b61075b826126c5565b6000806040838503121561270a57600080fd5b6126b7836126c5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561276657612766612713565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561279557612795612713565b604052919050565b600067ffffffffffffffff8211156127b7576127b7612713565b5060051b60200190565b600082601f8301126127d257600080fd5b813560206127e76127e28361279d565b61276c565b82815260059290921b8401810191818101908684111561280657600080fd5b8286015b84811015612821578035835291830191830161280a565b509695505050505050565b6000806040838503121561283f57600080fd5b823567ffffffffffffffff8082111561285757600080fd5b818501915085601f83011261286b57600080fd5b8135602061287b6127e28361279d565b82815260059290921b8401810191818101908984111561289a57600080fd5b948201945b838610156128bf576128b0866126c5565b8252948201949082019061289f565b965050860135925050808211156128d557600080fd5b506128e2858286016127c1565b9150509250929050565b600060e082840312156128fe57600080fd5b60405160e0810181811067ffffffffffffffff8211171561292157612921612713565b60405261292d83612684565b815261293b60208401612684565b602082015261294c60408401612684565b604082015261295d60608401612684565b606082015261296e608084016126c5565b608082015261297f60a084016126c5565b60a082015261299060c084016126c5565b60c08201529392505050565b6000602082840312156129ae57600080fd5b813567ffffffffffffffff8111156129c557600080fd5b8201610100818503121561075b57600080fd5b801515811461125857600080fd5b8035612696816129d8565b600060208284031215612a0357600080fd5b813561075b816129d8565b6000815180845260005b81811015612a3457602081850181015186830182015201612a18565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526120726060850182612a0e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60088110612aef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815160808452612b086080850182612a0e565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b60208152612b5a6020820183516001600160a01b03169052565b60006020830151610100806040850152612b78610120850183612a54565b91506040850151601f1980868503016060870152612b968483612a54565b935060608701519150612bac6080870183612ab8565b608087015160a087015260a087015160c087015260c08701519150612bd560e087018315159052565b60e0870151915080868503018387015250612bf08382612af3565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081612c3857612c38612bfa565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cbe57612cbe612bfa565b5060010190565b6020810161075e8284612ab8565b600060208284031215612ce557600080fd5b5051919050565b803560ff8116811461269657600080fd5b600067ffffffffffffffff831115612d1757612d17612713565b612d2a6020601f19601f8601160161276c565b9050828152838383011115612d3e57600080fd5b828260208301376000602084830101529392505050565b600060608284031215612d6757600080fd5b6040516060810167ffffffffffffffff8282108183111715612d8b57612d8b612713565b81604052829350612d9b856126c5565b8352612da960208601612cec565b60208401526040850135915080821115612dc257600080fd5b508301601f81018513612dd457600080fd5b612de385823560208401612cfd565b6040830152505092915050565b80356008811061269657600080fd5b600060808284031215612e1157600080fd5b6040516080810167ffffffffffffffff8282108183111715612e3557612e35612713565b816040528293508435915080821115612e4d57600080fd5b508301601f81018513612e5f57600080fd5b612e6e85823560208401612cfd565b8252506020830135612e7f816129d8565b6020820152612e9060408401612cec565b6040820152612ea1606084016126c5565b60608201525092915050565b60006101008236031215612ec057600080fd5b612ec8612742565b612ed1836126c5565b8152602083013567ffffffffffffffff80821115612eee57600080fd5b612efa36838701612d55565b60208401526040850135915080821115612f1357600080fd5b612f1f36838701612d55565b6040840152612f3060608601612df0565b60608401526080850135608084015260a085013560a0840152612f5560c086016129e6565b60c084015260e0850135915080821115612f6e57600080fd5b50612f7b36828601612dff565b60e08301525092915050565b600080600060608486031215612f9c57600080fd5b83519250602084015191506040840151612fb5816129d8565b809150509250925092565b600181811c90821680612fd457607f821691505b60208210810361300d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808202811582820484141761075e5761075e612bfa565b600082613060577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561307757600080fd5b815161075b816129d8565b6040815260006130956040830185612a0e565b90508260208301529392505050565b61ffff8181168382160190808211156130bf576130bf612bfa565b5092915050565b601f821115610c3557600081815260208120601f850160051c810160208610156130ed5750805b601f850160051c820191505b8181101561310c578281556001016130f9565b505050505050565b815167ffffffffffffffff81111561312e5761312e612713565b6131428161313c8454612fc0565b846130c6565b602080601f831160018114613195576000841561315f5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561310c565b600085815260208120601f198616915b828110156131c4578886015182559484019460019091019084016131a5565b508582101561320057878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b6080815260006132236080830187612a0e565b856020840152828103604084015261323b8186612a0e565b91505082606083015295945050505050565b8082018082111561075e5761075e612bfa565b8181038181111561075e5761075e612bfa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea26469706673582212201563cd53603d81b5db5962aa292dfb627bbf359cad0367cd734ee0867c4eeb1864736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
