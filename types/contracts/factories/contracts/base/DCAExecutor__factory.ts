/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FeeDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVcalculateFeeOfAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVcalculateSplitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVgetFeeQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVgetFeesOfAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "executorFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "computingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "adminFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "fee_",
        type: "tuple",
      },
    ],
    name: "setFeeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200348d3803806200348d83398101604081905262000047916200034b565b338181806200007157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007c816200009e565b506200008881620000ee565b506200009690508262000138565b50506200046e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b62000142620002b4565b6200014d81620002e5565b620001c3576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c2031303025606482015260840162000068565b80516005805460208401516040808601516060870151608088015161ffff97881663ffffffff199096169590951762010000948816949094029390931763ffffffff60201b19166401000000009187169190910261ffff60301b1916176601000000000000959092169490940217600160401b600160e01b031916680100000000000000006001600160a01b03928316021790915560a0830151600680546001600160a01b031990811692841692909217905560c0840151600780549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6000546001600160a01b03163314620002e35760405163118cdaa760e01b815233600482015260240162000068565b565b6020810151815160408301516000929162000300916200043d565b6200030c91906200043d565b61ffff16612710149050919050565b805161ffff811681146200032e57600080fd5b919050565b80516001600160a01b03811681146200032e57600080fd5b6000808284036101008112156200036157600080fd5b60e08112156200037057600080fd5b5060405160e081016001600160401b0381118282101715620003a257634e487b7160e01b600052604160045260246000fd5b604052620003b0846200031b565b8152620003c0602085016200031b565b6020820152620003d3604085016200031b565b6040820152620003e6606085016200031b565b6060820152620003f96080850162000333565b60808201526200040c60a0850162000333565b60a08201526200041f60c0850162000333565b60c082015291506200043460e0840162000333565b90509250929050565b61ffff8181168382160190808211156200046757634e487b7160e01b600052601160045260246000fd5b5092915050565b61300f806200047e6000396000f3fe6080604052600436106101b05760003560e01c8063701ebd5e116100ec578063a8c2ec031161008a578063d9fa9c1a11610064578063d9fa9c1a1461068c578063f2fde38b146106c5578063f3e8ff5b146106e5578063fd88ed0f1461071257610202565b8063a8c2ec031461060f578063ab6319b51461062f578063c55cfc741461064f57610202565b80637b260087116100c65780637b26008714610591578063892cd8f5146105b15780638da5cb5b146105d15780639665b658146105ef57610202565b8063701ebd5e1461053c578063704802751461055c578063715018a61461057c57610202565b806322f3e2d4116101595780633adee794116101335780633adee794146104d25780633c7c46dc146104e75780635864badb146104fc5780635b2fc9581461051c57610202565b806322f3e2d41461032f578063256a49351461036b578063350157a8146104a057610202565b80631785f53c1161018a5780631785f53c146102cf57806318f1f54d146102ef5780632200dd761461030f57610202565b80630853ac1c1461024a578063144b771514610261578063177a3cc5146102a157610202565b366102025760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101f9565b34801561025657600080fd5b5061025f610727565b005b34801561026d57600080fd5b5061028161027c3660046123b7565b61073b565b604080519384526020840192909252908201526060015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc3660046123e7565b610757565b604051908152602001610298565b3480156102db57600080fd5b5061025f6102ea366004612428565b610770565b3480156102fb57600080fd5b5061025f61030a366004612443565b610799565b34801561031b57600080fd5b506102c161032a3660046123e7565b610860565b34801561033b57600080fd5b5060025474010000000000000000000000000000000000000000900460ff165b6040519015158152602001610298565b34801561037757600080fd5b5061042d6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260055461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600654811660a08301526007541660c082015290565b6040516102989190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b3480156104ac57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610298565b3480156104de57600080fd5b506009546102c1565b3480156104f357600080fd5b506008546102c1565b34801561050857600080fd5b5061025f610517366004612596565b610870565b34801561052857600080fd5b5061025f610537366004612443565b610c5e565b34801561054857600080fd5b506102c16105573660046123b7565b610e91565b34801561056857600080fd5b5061025f610577366004612428565b610eaf565b34801561058857600080fd5b5061025f610ede565b34801561059d57600080fd5b5061025f6105ac366004612656565b610ef0565b3480156105bd57600080fd5b5061025f6105cc366004612443565b6110e0565b3480156105dd57600080fd5b506000546001600160a01b03166104ba565b3480156105fb57600080fd5b5061025f61060a366004612428565b61123f565b34801561061b57600080fd5b5061025f61062a366004612428565b611253565b34801561063b57600080fd5b5061025f61064a366004612706565b611421565b34801561065b57600080fd5b5061066f61066a366004612443565b6115f0565b604080519384526020840192909252151590820152606001610298565b34801561069857600080fd5b5061035b6106a7366004612428565b6001600160a01b031660009081526001602052604090205460ff1690565b3480156106d157600080fd5b5061025f6106e0366004612428565b6116a3565b3480156106f157600080fd5b50610705610700366004612443565b6116f7565b6040516102989190612892565b34801561071e57600080fd5b506104ba611a2c565b61072f611a45565b6107396000611a8b565b565b6000808061074a600585611aed565b9250925092509193909250565b600061076761ffff841683611b41565b90505b92915050565b610778611a45565b6001600160a01b03166000908152600160205260409020805460ff19169055565b336001600160a01b0383161461083d5760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101f9565b6108478282611b7d565b6008805490600061085783612999565b91905055505050565b600061076761ffff841683611be8565b6002546001600160a01b031633146108f05760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101f9565b60025474010000000000000000000000000000000000000000900460ff166109805760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101f9565b600a825111156109f85760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f7765640000000000000060648201526084016101f9565b8051825114610a955760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a4016101f9565b60005b8251811015610c5957610b9760046000858481518110610aba57610aba6129ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000848481518110610af657610af66129ce565b602002602001015181526020019081526020016000205460036000868581518110610b2357610b236129ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858581518110610b5f57610b5f6129ce565b60209081029190910181015182528101919091526040016000206005015460ff166007811115610b9157610b916127db565b90611bf4565b15610c4757610bd8838281518110610bb157610bb16129ce565b6020026020010151838381518110610bcb57610bcb6129ce565b6020026020010151611c08565b15610c4757818181518110610bef57610bef6129ce565b6020026020010151838281518110610c0957610c096129ce565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610c51816129fd565b915050610a98565b505050565b6002546001600160a01b03163314610cde5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101f9565b6001600160a01b038216600090815260036020908152604080832084845290915290206008015460ff16610d7a5760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101f9565b6001600160a01b038216600081815260036020908152604080832085845290915290819020600801805460ff19169055517fa30b19970000000000000000000000000000000000000000000000000000000081526004810183905263a30b199790602401600060405180830381600087803b158015610df857600080fd5b505af1158015610e0c573d6000803e3d6000fd5b505060088054925090506000610e2183612999565b90915550506001600160a01b03821660008181526003602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610e859160ff1690612a35565b60405180910390a45050565b60055460009061076a906601000000000000900461ffff1683611be8565b610eb7611a45565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b610ee6611a45565b6107396000611cdd565b610ef8611a45565b610f0181611d45565b610f75576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c203130302560648201526084016101f9565b80516005805460208401516040808601516060870151608088015161ffff9788167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909616959095176201000094881694909402939093177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000918716919091027fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff161766010000000000009590921694909402177fffffffff0000000000000000000000000000000000000000ffffffffffffffff16680100000000000000006001600160a01b03928316021790915560a0830151600680547fffffffffffffffffffffffff000000000000000000000000000000000000000090811692841692909217905560c0840151600780549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6002546001600160a01b031633146111605760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101f9565b60025474010000000000000000000000000000000000000000900460ff166111f05760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101f9565b60006111fc8383611c08565b90508015610c595760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b611247611a45565b61125081611a8b565b50565b3360009081526001602052604090205460ff168061127b57506000546001600160a01b031633145b6112ed5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101f9565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113739190612a43565b90508015610c59576000808061138a600585611aed565b60055492955090935091506113b5906801000000000000000090046001600160a01b03168487611d77565b6006546113cc906001600160a01b03168387611d77565b6007546113e3906001600160a01b03168287611d77565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60025474010000000000000000000000000000000000000000900460ff166114b15760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f206973207061757365640000000000000000000000000000000000000000000060648201526084016101f9565b6114be6020820182612428565b6001600160a01b0316336001600160a01b0316146115445760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101f9565b61155561155082612c54565b611e09565b6115c75760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101f9565b6115d86115d382612c54565b611e8b565b600880549060006115e8836129fd565b919050555050565b6001600160a01b0382811660009081526003602090815260408083208584529091528082205490517f3887d28b0000000000000000000000000000000000000000000000000000000081526004810185905291928392839290911690633887d28b90602401606060405180830381865afa158015611672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116969190612d2e565b9250925092509250925092565b6116ab611a45565b6001600160a01b0381166116ee576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101f9565b61125081611cdd565b6116ff6122e8565b6001600160a01b038381166000908152600360209081526040808320868452825291829020825161010081018452815485168152835160608101855260018301805496871682527401000000000000000000000000000000000000000090960460ff168185015260028301805492969395948701949193929184019161178490612d67565b80601f01602080910402602001604051908101604052809291908181526020018280546117b090612d67565b80156117fd5780601f106117d2576101008083540402835291602001916117fd565b820191906000526020600020905b8154815290600101906020018083116117e057829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff16602080840191909152600486018054919095019492939192918401919061186690612d67565b80601f016020809104026020016040519081016040528092919081815260200182805461189290612d67565b80156118df5780601f106118b4576101008083540402835291602001916118df565b820191906000526020600020905b8154815290600101906020018083116118c257829003601f168201915b505050919092525050508152600582015460209091019060ff16600781111561190a5761190a6127db565b600781111561191b5761191b6127db565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff161515151581526020016009820160405180608001604052908160008201805461196e90612d67565b80601f016020809104026020016040519081016040528092919081815260200182805461199a90612d67565b80156119e75780601f106119bc576101008083540402835291602001916119e7565b820191906000526020600020905b8154815290600101906020018083116119ca57829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b03166060909101529052509392505050565b6000611a406002546001600160a01b031690565b905090565b6000546001600160a01b03163314610739576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101f9565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b815460009081908190611b049061ffff1685611b41565b8554909350611b1d9062010000900461ffff1685611b41565b8554909250611b3890640100000000900461ffff1685611b41565b90509250925092565b600060018361ffff161015611b585750600061076a565b6000612710611b6b61ffff861685612dba565b611b759190612dd1565b949350505050565b6001600160a01b038216600081815260036020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610e859160ff1690612a35565b60006107678383611b41565b6000611c008383612148565b159392505050565b6005546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca89190612e0c565b90508015610767576001600160a01b038416600090815260046020908152604080832086845290915290204390559392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60208101518151604083015160009291611d5e91612e29565b611d689190612e29565b61ffff16612710149050919050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e039190612e0c565b50505050565b6000806007905060008184606001516007811115611e2957611e296127db565b855191101591506001600160a01b031615801590611e5457506020840151516001600160a01b031615155b8015611e6d57506040840151516001600160a01b031615155b8015611e7d575060008460800151115b8015611b7557509392505050565b600160c0820181905281516001600160a01b03908116600090815260036020908152604080832060a08701518452825291829020855181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617815581860151805195820180549382015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090941696909516959095179190911783559083015184939192906002840190611f609082612e99565b5050506040828101518051600384018054602084015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b0390931692909217919091178155918101519091906004840190611fdf9082612e99565b505050606082015160058201805460ff19166001836007811115612005576120056127db565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e082015180516009830190819061204e9082612e99565b506020820151600191820180546040808601516060968701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093169415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c19161213d9190612a35565b60405180910390a450565b60008061215484612180565b61215e9084612fb3565b9050804211612176576121714282612fc6565b611b75565b6000949350505050565b600080826007811115612195576121956127db565b036121a25750603c919050565b60018260078111156121b6576121b66127db565b036121c75761076a603c6005612dba565b60028260078111156121db576121db6127db565b036121ed5761076a610e10600c612dba565b6003826007811115612201576122016127db565b03612210575062015180919050565b6004826007811115612224576122246127db565b0361223357506202a300919050565b6005826007811115612247576122476127db565b03612256575062093a80919050565b600682600781111561226a5761226a6127db565b0361227d5761076a62093a806002612dba565b6007826007811115612291576122916127db565b036122a057506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101f9565b60405180610100016040528060006001600160a01b03168152602001612334604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260200160008152602001600081526020016000151581526020016123b2604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b6000602082840312156123c957600080fd5b5035919050565b803561ffff811681146123e257600080fd5b919050565b600080604083850312156123fa57600080fd5b612403836123d0565b946020939093013593505050565b80356001600160a01b03811681146123e257600080fd5b60006020828403121561243a57600080fd5b61076782612411565b6000806040838503121561245657600080fd5b61240383612411565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156124b2576124b261245f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156124ff576124ff61245f565b604052919050565b600067ffffffffffffffff8211156125215761252161245f565b5060051b60200190565b600082601f83011261253c57600080fd5b8135602061255161254c83612507565b6124b8565b82815260059290921b8401810191818101908684111561257057600080fd5b8286015b8481101561258b5780358352918301918301612574565b509695505050505050565b600080604083850312156125a957600080fd5b823567ffffffffffffffff808211156125c157600080fd5b818501915085601f8301126125d557600080fd5b813560206125e561254c83612507565b82815260059290921b8401810191818101908984111561260457600080fd5b948201945b838610156126295761261a86612411565b82529482019490820190612609565b9650508601359250508082111561263f57600080fd5b5061264c8582860161252b565b9150509250929050565b600060e0828403121561266857600080fd5b60405160e0810181811067ffffffffffffffff8211171561268b5761268b61245f565b604052612697836123d0565b81526126a5602084016123d0565b60208201526126b6604084016123d0565b60408201526126c7606084016123d0565b60608201526126d860808401612411565b60808201526126e960a08401612411565b60a08201526126fa60c08401612411565b60c08201529392505050565b60006020828403121561271857600080fd5b813567ffffffffffffffff81111561272f57600080fd5b8201610100818503121561076757600080fd5b6000815180845260005b818110156127685760208185018101518683018201520161274c565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152611b756060850182612742565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60088110612841577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600081516080845261285a6080850182612742565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b602081526128ac6020820183516001600160a01b03169052565b600060208301516101008060408501526128ca6101208501836127a6565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08086850301606087015261290684836127a6565b93506060870151915061291c608087018361280a565b608087015160a087015260a087015160c087015260c0870151915061294560e087018315159052565b60e08701519150808685030183870152506129608382612845565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816129a8576129a861296a565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a2e57612a2e61296a565b5060010190565b6020810161076a828461280a565b600060208284031215612a5557600080fd5b5051919050565b803560ff811681146123e257600080fd5b600067ffffffffffffffff831115612a8757612a8761245f565b612ab860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116016124b8565b9050828152838383011115612acc57600080fd5b828260208301376000602084830101529392505050565b600060608284031215612af557600080fd5b6040516060810167ffffffffffffffff8282108183111715612b1957612b1961245f565b81604052829350612b2985612411565b8352612b3760208601612a5c565b60208401526040850135915080821115612b5057600080fd5b508301601f81018513612b6257600080fd5b612b7185823560208401612a6d565b6040830152505092915050565b8035600881106123e257600080fd5b801515811461125057600080fd5b80356123e281612b8d565b600060808284031215612bb857600080fd5b6040516080810167ffffffffffffffff8282108183111715612bdc57612bdc61245f565b816040528293508435915080821115612bf457600080fd5b508301601f81018513612c0657600080fd5b612c1585823560208401612a6d565b8252506020830135612c2681612b8d565b6020820152612c3760408401612a5c565b6040820152612c4860608401612411565b60608201525092915050565b60006101008236031215612c6757600080fd5b612c6f61248e565b612c7883612411565b8152602083013567ffffffffffffffff80821115612c9557600080fd5b612ca136838701612ae3565b60208401526040850135915080821115612cba57600080fd5b612cc636838701612ae3565b6040840152612cd760608601612b7e565b60608401526080850135608084015260a085013560a0840152612cfc60c08601612b9b565b60c084015260e0850135915080821115612d1557600080fd5b50612d2236828601612ba6565b60e08301525092915050565b600080600060608486031215612d4357600080fd5b83519250602084015191506040840151612d5c81612b8d565b809150509250925092565b600181811c90821680612d7b57607f821691505b602082108103612db4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808202811582820484141761076a5761076a61296a565b600082612e07577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215612e1e57600080fd5b815161076781612b8d565b61ffff818116838216019080821115612e4457612e4461296a565b5092915050565b601f821115610c5957600081815260208120601f850160051c81016020861015612e725750805b601f850160051c820191505b81811015612e9157828155600101612e7e565b505050505050565b815167ffffffffffffffff811115612eb357612eb361245f565b612ec781612ec18454612d67565b84612e4b565b602080601f831160018114612f1a5760008415612ee45750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612e91565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612f6757888601518255948401946001909101908401612f48565b5085821015612fa357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561076a5761076a61296a565b8181038181111561076a5761076a61296a56fea26469706673582212200b33e1d254d18212f68385cb27c56da4f67cd41bd168d6d8428c379115cf4b9f64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
