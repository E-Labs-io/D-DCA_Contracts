/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FeeDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVcalculateFeeOfAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVcalculateSplitFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVgetFeeQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "DEVgetFeesOfAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "executorFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "computingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "adminFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "getIntervalTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "isIntervalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newFlag_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "fee_",
        type: "tuple",
      },
    ],
    name: "setFeeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setIntervalActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162003c8f38038062003c8f83398101604081905262000047916200034b565b338181806200007157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007c816200009e565b506200008881620000ee565b506200009690508262000138565b50506200046e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b62000142620002b4565b6200014d81620002e5565b620001c3576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c2031303025606482015260840162000068565b80516006805460208401516040808601516060870151608088015161ffff97881663ffffffff199096169590951762010000948816949094029390931763ffffffff60201b19166401000000009187169190910261ffff60301b1916176601000000000000959092169490940217600160401b600160e01b031916680100000000000000006001600160a01b03928316021790915560a0830151600780546001600160a01b031990811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6000546001600160a01b03163314620002e35760405163118cdaa760e01b815233600482015260240162000068565b565b6020810151815160408301516000929162000300916200043d565b6200030c91906200043d565b61ffff16612710149050919050565b805161ffff811681146200032e57600080fd5b919050565b80516001600160a01b03811681146200032e57600080fd5b6000808284036101008112156200036157600080fd5b60e08112156200037057600080fd5b5060405160e081016001600160401b0381118282101715620003a257634e487b7160e01b600052604160045260246000fd5b604052620003b0846200031b565b8152620003c0602085016200031b565b6020820152620003d3604085016200031b565b6040820152620003e6606085016200031b565b6060820152620003f96080850162000333565b60808201526200040c60a0850162000333565b60a08201526200041f60c0850162000333565b60c082015291506200043460e0840162000333565b90509250929050565b61ffff8181168382160190808211156200046757634e487b7160e01b600052601160045260246000fd5b5092915050565b613811806200047e6000396000f3fe6080604052600436106101dc5760003560e01c80637048027511610102578063ab6319b511610095578063d9fa9c1a11610064578063d9fa9c1a1461073c578063f2fde38b14610775578063f3e8ff5b14610795578063fd88ed0f146107c25761022e565b8063ab6319b51461069f578063bfe22a01146106bf578063c4cf87f0146106df578063c55cfc74146106ff5761022e565b806389c8c5c9116100d157806389c8c5c9146106215780638da5cb5b146106415780639665b6581461065f578063a8c2ec031461067f5761022e565b806370480275146105ac578063715018a6146105cc5780637b260087146105e1578063892cd8f5146106015761022e565b806322f3e2d41161017a5780633c7c46dc116101495780633c7c46dc146105375780635864badb1461054c5780635b2fc9581461056c578063701ebd5e1461058c5761022e565b806322f3e2d41461038b578063256a4935146103bb578063350157a8146104f05780633adee794146105225761022e565b80631785f53c116101b65780631785f53c146102fb57806318f1f54d1461031b5780631b29b4fc1461033b5780632200dd761461036b5761022e565b80630853ac1c14610276578063144b77151461028d578063177a3cc5146102cd5761022e565b3661022e5760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d00000000000000006044820152606401610225565b34801561028257600080fd5b5061028b6107d7565b005b34801561029957600080fd5b506102ad6102a8366004612b4a565b6107eb565b604080519384526020840192909252908201526060015b60405180910390f35b3480156102d957600080fd5b506102ed6102e8366004612b7a565b610807565b6040519081526020016102c4565b34801561030757600080fd5b5061028b610316366004612bbb565b610820565b34801561032757600080fd5b5061028b610336366004612bd6565b610849565b34801561034757600080fd5b5061035b610356366004612c01565b610910565b60405190151581526020016102c4565b34801561037757600080fd5b506102ed610386366004612b7a565b610953565b34801561039757600080fd5b5060025474010000000000000000000000000000000000000000900460ff1661035b565b3480156103c757600080fd5b5061047d6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516102c49190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b3480156104fc57600080fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016102c4565b34801561052e57600080fd5b50600b546102ed565b34801561054357600080fd5b50600a546102ed565b34801561055857600080fd5b5061028b610567366004612d53565b610963565b34801561057857600080fd5b5061028b610587366004612bd6565b610d51565b34801561059857600080fd5b506102ed6105a7366004612b4a565b610f84565b3480156105b857600080fd5b5061028b6105c7366004612bbb565b610fa2565b3480156105d857600080fd5b5061028b610fd1565b3480156105ed57600080fd5b5061028b6105fc366004612e13565b610fe3565b34801561060d57600080fd5b5061028b61061c366004612bd6565b6111d3565b34801561062d57600080fd5b506102ed61063c366004612c01565b611347565b34801561064d57600080fd5b506000546001600160a01b031661050a565b34801561066b57600080fd5b5061028b61067a366004612bbb565b611386565b34801561068b57600080fd5b5061028b61069a366004612bbb565b61139a565b3480156106ab57600080fd5b5061028b6106ba366004612ec3565b611568565b3480156106cb57600080fd5b5061028b6106da366004612f18565b611817565b3480156106eb57600080fd5b5061028b6106fa366004612f35565b6118ba565b34801561070b57600080fd5b5061071f61071a366004612bd6565b61199f565b6040805193845260208401929092521515908201526060016102c4565b34801561074857600080fd5b5061035b610757366004612bbb565b6001600160a01b031660009081526001602052604090205460ff1690565b34801561078157600080fd5b5061028b610790366004612bbb565b611a50565b3480156107a157600080fd5b506107b56107b0366004612bd6565b611aa4565b6040516102c491906130bc565b3480156107ce57600080fd5b5061050a611dd9565b6107df611df2565b6107e96000611e38565b565b600080806107fa600685611e9a565b9250925092509193909250565b600061081761ffff841683611eee565b90505b92915050565b610828611df2565b6001600160a01b03166000908152600160205260409020805460ff19169055565b336001600160a01b038316146108ed5760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a401610225565b6108f78282611f2a565b600a8054906000610907836131c3565b91905055505050565b60006003600083600781111561092857610928613005565b600781111561093957610939613005565b815260208101919091526040016000205460ff1692915050565b600061081761ffff84168361231f565b6002546001600160a01b031633146109e35760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f7200000000000000006064820152608401610225565b60025474010000000000000000000000000000000000000000900460ff16610a735760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f20697320706175736564000000000000000000000000000000000000000000006064820152608401610225565b600a82511115610aeb5760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f776564000000000000006064820152608401610225565b8051825114610b885760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a401610225565b60005b8251811015610d4c57610c8a60056000858481518110610bad57610bad6131f8565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000848481518110610be957610be96131f8565b602002602001015181526020019081526020016000205460046000868581518110610c1657610c166131f8565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858581518110610c5257610c526131f8565b60209081029190910181015182528101919091526040016000206005015460ff166007811115610c8457610c84613005565b9061232b565b15610d3a57610ccb838281518110610ca457610ca46131f8565b6020026020010151838381518110610cbe57610cbe6131f8565b602002602001015161233f565b15610d3a57818181518110610ce257610ce26131f8565b6020026020010151838281518110610cfc57610cfc6131f8565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610d4481613227565b915050610b8b565b505050565b6002546001600160a01b03163314610dd15760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f7200000000000000006064820152608401610225565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610e6d5760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e73756273637269626564000000006064820152608401610225565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610eeb57600080fd5b505af1158015610eff573d6000803e3d6000fd5b5050600a8054925090506000610f14836131c3565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610f789160ff169061325f565b60405180910390a45050565b60065460009061081a906601000000000000900461ffff168361231f565b610faa611df2565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b610fd9611df2565b6107e96000612414565b610feb611df2565b610ff48161247c565b611068576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c20313030256064820152608401610225565b80516006805460208401516040808601516060870151608088015161ffff9788167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909616959095176201000094881694909402939093177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000918716919091027fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff161766010000000000009590921694909402177fffffffff0000000000000000000000000000000000000000ffffffffffffffff16680100000000000000006001600160a01b03928316021790915560a0830151600780547fffffffffffffffffffffffff000000000000000000000000000000000000000090811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6002546001600160a01b031633146112535760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f7200000000000000006064820152608401610225565b60025474010000000000000000000000000000000000000000900460ff166112e35760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f20697320706175736564000000000000000000000000000000000000000000006064820152608401610225565b60006112ef838361233f565b90508015610d4c5760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3600b805490600061133d83613227565b9190505550505050565b60006009600083600781111561135f5761135f613005565b600781111561137057611370613005565b8152602001908152602001600020549050919050565b61138e611df2565b61139781611e38565b50565b3360009081526001602052604090205460ff16806113c257506000546001600160a01b031633145b6114345760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e000000000000000000000000000000006064820152608401610225565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ba919061326d565b90508015610d4c57600080806114d1600685611e9a565b60065492955090935091506114fc906801000000000000000090046001600160a01b031684876124ae565b600754611513906001600160a01b031683876124ae565b60085461152a906001600160a01b031682876124ae565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60025474010000000000000000000000000000000000000000900460ff166115f85760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e747261637460448201527f20697320706175736564000000000000000000000000000000000000000000006064820152608401610225565b6116056020820182612bbb565b6001600160a01b0316336001600160a01b03161461168b5760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e737562736372696265006064820152608401610225565b61169c61169782613456565b612540565b61170e5760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f64207374726174656779000000000000000000000000000000000000000000006064820152608401610225565b6117216103566080830160608401612c01565b6117935760405162461bcd60e51b815260206004820152602d60248201527f4443416578656375746f72203a205b5375627363726962655d20496e7465727660448201527f616c204e6f7420416374697665000000000000000000000000000000000000006064820152608401610225565b6117a461179f82613456565b6125a9565b600a80549060006117b483613227565b909155506009905060006117ce6080840160608501612c01565b60078111156117df576117df613005565b60078111156117f0576117f0613005565b8152602001908152602001600020600081548092919061180f90613227565b919050555050565b3360009081526001602052604090205460ff168061183f57506000546001600160a01b031633145b6118b15760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e000000000000000000000000000000006064820152608401610225565b61139781612866565b3360009081526001602052604090205460ff16806118e257506000546001600160a01b031633145b6119545760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e000000000000000000000000000000006064820152608401610225565b806003600084600781111561196b5761196b613005565b600781111561197c5761197c613005565b81526020810191909152604001600020805460ff19169115159190911790555050565b6001600160a01b0382811660009081526004602081815260408084208685529091528083205490517f3887d28b000000000000000000000000000000000000000000000000000000008152918201859052919283928392911690633887d28b90602401606060405180830381865afa158015611a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a439190613530565b9250925092509250925092565b611a58611df2565b6001600160a01b038116611a9b576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610225565b61139781612414565b611aac612a7b565b6001600160a01b038381166000908152600460209081526040808320868452825291829020825161010081018452815485168152835160608101855260018301805496871682527401000000000000000000000000000000000000000090960460ff1681850152600283018054929693959487019491939291840191611b3190613569565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5d90613569565b8015611baa5780601f10611b7f57610100808354040283529160200191611baa565b820191906000526020600020905b815481529060010190602001808311611b8d57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff166020808401919091526004860180549190950194929391929184019190611c1390613569565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3f90613569565b8015611c8c5780601f10611c6157610100808354040283529160200191611c8c565b820191906000526020600020905b815481529060010190602001808311611c6f57829003601f168201915b505050919092525050508152600582015460209091019060ff166007811115611cb757611cb7613005565b6007811115611cc857611cc8613005565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815260200160098201604051806080016040529081600082018054611d1b90613569565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4790613569565b8015611d945780601f10611d6957610100808354040283529160200191611d94565b820191906000526020600020905b815481529060010190602001808311611d7757829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b03166060909101529052509392505050565b6000611ded6002546001600160a01b031690565b905090565b6000546001600160a01b031633146107e9576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610225565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b815460009081908190611eb19061ffff1685611eee565b8554909350611eca9062010000900461ffff1685611eee565b8554909250611ee590640100000000900461ffff1685611eee565b90509250925092565b600060018361ffff161015611f055750600061081a565b6000612710611f1861ffff8616856135bc565b611f2291906135d3565b949350505050565b6001600160a01b0382811660009081526004602090815260408083208584528252808320815161010081018352815486168152825160608101845260018301805497881682527401000000000000000000000000000000000000000090970460ff1681860152600283018054969792969395870194919391840191611fae90613569565b80601f0160208091040260200160405190810160405280929190818152602001828054611fda90613569565b80156120275780601f10611ffc57610100808354040283529160200191612027565b820191906000526020600020905b81548152906001019060200180831161200a57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff16602080840191909152600486018054919095019492939192918401919061209090613569565b80601f01602080910402602001604051908101604052809291908181526020018280546120bc90613569565b80156121095780601f106120de57610100808354040283529160200191612109565b820191906000526020600020905b8154815290600101906020018083116120ec57829003601f168201915b505050919092525050508152600582015460209091019060ff16600781111561213457612134613005565b600781111561214557612145613005565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff161515151581526020016009820160405180608001604052908160008201805461219890613569565b80601f01602080910402602001604051908101604052809291908181526020018280546121c490613569565b80156122115780601f106121e657610100808354040283529160200191612211565b820191906000526020600020905b8154815290600101906020018083116121f457829003601f168201915b50505091835250506001919091015460ff808216151560208085019190915261010083049091166040808501919091526001600160a01b03620100009093048316606094850152939094528816600090815260048452828120888252909352908220600801805460ff19169055830151929350600992909150600781111561229b5761229b613005565b60078111156122ac576122ac613005565b815260200190815260200160002060008154809291906122cb906131c3565b91905055506000151582846001600160a01b03167f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c18460600151604051612312919061325f565b60405180910390a4505050565b60006108178383611eee565b600061233783836128db565b159392505050565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af11580156123bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123df919061360e565b90508015610817576001600160a01b038416600090815260056020908152604080832086845290915290204390559392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602081015181516040830151600092916124959161362b565b61249f919061362b565b61ffff16612710149050919050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015612516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253a919061360e565b50505050565b600080600790506000818460600151600781111561256057612560613005565b855191101591506001600160a01b03161580159061258b57506020840151516001600160a01b031615155b801561259b575060008460800151115b8015611f2257509392505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a08701518452825291829020855181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617815581860151805195820180549382015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009094169690951695909517919091178355908301518493919290600284019061267e908261369b565b5050506040828101518051600384018054602084015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b03909316929092179190911781559181015190919060048401906126fd908261369b565b505050606082015160058201805460ff1916600183600781111561272357612723613005565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e082015180516009830190819061276c908261369b565b506020820151600191820180546040808601516060968701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093169415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c19161285b919061325f565b60405180910390a450565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b6000806128e784612913565b6128f190846137b5565b90508042116129095761290442826137c8565b611f22565b6000949350505050565b60008082600781111561292857612928613005565b036129355750603c919050565b600182600781111561294957612949613005565b0361295a5761081a603c60056135bc565b600282600781111561296e5761296e613005565b036129805761081a610e10600c6135bc565b600382600781111561299457612994613005565b036129a3575062015180919050565b60048260078111156129b7576129b7613005565b036129c657506202a300919050565b60058260078111156129da576129da613005565b036129e9575062093a80919050565b60068260078111156129fd576129fd613005565b03612a105761081a62093a8060026135bc565b6007826007811115612a2457612a24613005565b03612a3357506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c00006044820152606401610225565b60405180610100016040528060006001600160a01b03168152602001612ac7604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001612b45604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b600060208284031215612b5c57600080fd5b5035919050565b803561ffff81168114612b7557600080fd5b919050565b60008060408385031215612b8d57600080fd5b612b9683612b63565b946020939093013593505050565b80356001600160a01b0381168114612b7557600080fd5b600060208284031215612bcd57600080fd5b61081782612ba4565b60008060408385031215612be957600080fd5b612b9683612ba4565b803560088110612b7557600080fd5b600060208284031215612c1357600080fd5b61081782612bf2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715612c6f57612c6f612c1c565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612cbc57612cbc612c1c565b604052919050565b600067ffffffffffffffff821115612cde57612cde612c1c565b5060051b60200190565b600082601f830112612cf957600080fd5b81356020612d0e612d0983612cc4565b612c75565b82815260059290921b84018101918181019086841115612d2d57600080fd5b8286015b84811015612d485780358352918301918301612d31565b509695505050505050565b60008060408385031215612d6657600080fd5b823567ffffffffffffffff80821115612d7e57600080fd5b818501915085601f830112612d9257600080fd5b81356020612da2612d0983612cc4565b82815260059290921b84018101918181019089841115612dc157600080fd5b948201945b83861015612de657612dd786612ba4565b82529482019490820190612dc6565b96505086013592505080821115612dfc57600080fd5b50612e0985828601612ce8565b9150509250929050565b600060e08284031215612e2557600080fd5b60405160e0810181811067ffffffffffffffff82111715612e4857612e48612c1c565b604052612e5483612b63565b8152612e6260208401612b63565b6020820152612e7360408401612b63565b6040820152612e8460608401612b63565b6060820152612e9560808401612ba4565b6080820152612ea660a08401612ba4565b60a0820152612eb760c08401612ba4565b60c08201529392505050565b600060208284031215612ed557600080fd5b813567ffffffffffffffff811115612eec57600080fd5b8201610100818503121561081757600080fd5b801515811461139757600080fd5b8035612b7581612eff565b600060208284031215612f2a57600080fd5b813561081781612eff565b60008060408385031215612f4857600080fd5b612f5183612bf2565b91506020830135612f6181612eff565b809150509250929050565b6000815180845260005b81811015612f9257602081850181015186830182015201612f76565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152611f226060850182612f6c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6008811061306b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60008151608084526130846080850182612f6c565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b602081526130d66020820183516001600160a01b03169052565b600060208301516101008060408501526130f4610120850183612fd0565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808685030160608701526131308483612fd0565b9350606087015191506131466080870183613034565b608087015160a087015260a087015160c087015260c0870151915061316f60e087018315159052565b60e087015191508086850301838701525061318a838261306f565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816131d2576131d2613194565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361325857613258613194565b5060010190565b6020810161081a8284613034565b60006020828403121561327f57600080fd5b5051919050565b803560ff81168114612b7557600080fd5b600067ffffffffffffffff8311156132b1576132b1612c1c565b6132e260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612c75565b90508281528383830111156132f657600080fd5b828260208301376000602084830101529392505050565b60006060828403121561331f57600080fd5b6040516060810167ffffffffffffffff828210818311171561334357613343612c1c565b8160405282935061335385612ba4565b835261336160208601613286565b6020840152604085013591508082111561337a57600080fd5b508301601f8101851361338c57600080fd5b61339b85823560208401613297565b6040830152505092915050565b6000608082840312156133ba57600080fd5b6040516080810167ffffffffffffffff82821081831117156133de576133de612c1c565b8160405282935084359150808211156133f657600080fd5b508301601f8101851361340857600080fd5b61341785823560208401613297565b825250602083013561342881612eff565b602082015261343960408401613286565b604082015261344a60608401612ba4565b60608201525092915050565b6000610100823603121561346957600080fd5b613471612c4b565b61347a83612ba4565b8152602083013567ffffffffffffffff8082111561349757600080fd5b6134a33683870161330d565b602084015260408501359150808211156134bc57600080fd5b6134c83683870161330d565b60408401526134d960608601612bf2565b60608401526080850135608084015260a085013560a08401526134fe60c08601612f0d565b60c084015260e085013591508082111561351757600080fd5b50613524368286016133a8565b60e08301525092915050565b60008060006060848603121561354557600080fd5b8351925060208401519150604084015161355e81612eff565b809150509250925092565b600181811c9082168061357d57607f821691505b6020821081036135b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808202811582820484141761081a5761081a613194565b600082613609577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561362057600080fd5b815161081781612eff565b61ffff81811683821601908082111561364657613646613194565b5092915050565b601f821115610d4c57600081815260208120601f850160051c810160208610156136745750805b601f850160051c820191505b8181101561369357828155600101613680565b505050505050565b815167ffffffffffffffff8111156136b5576136b5612c1c565b6136c9816136c38454613569565b8461364d565b602080601f83116001811461371c57600084156136e65750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555613693565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156137695788860151825594840194600190910190840161374a565b50858210156137a557878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561081a5761081a613194565b8181038181111561081a5761081a61319456fea2646970667358221220857cebb81ff3909ce5e7f3e8700f9c52adb6cb26394b0f34c2cb3b444192e8cc64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
