/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "NotAllowedBaseToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed_",
        type: "bool",
      },
    ],
    name: "BaseTokenAllowanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedStrategy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FeeDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "StrategySubscription",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "getIntervalTotalActiveStrategies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "isIntervalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isTokenAllowedAsBase",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newFlag_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed_",
        type: "bool",
      },
    ],
    name: "setBaseTokenAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "fee_",
        type: "tuple",
      },
    ],
    name: "setFeeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setIntervalActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b50604051620032513803806200325183398101604081905262000047916200034b565b338181806200007157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007c816200009e565b506200008881620000ee565b506200009690508262000138565b50506200046e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b62000142620002b4565b6200014d81620002e5565b620001c3576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c2031303025606482015260840162000068565b80516008805460208401516040808601516060870151608088015161ffff97881663ffffffff199096169590951762010000948816949094029390931763ffffffff60201b19166401000000009187169190910261ffff60301b1916176601000000000000959092169490940217600160401b600160e01b031916680100000000000000006001600160a01b03928316021790915560a0830151600980546001600160a01b031990811692841692909217905560c0840151600a80549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6000546001600160a01b03163314620002e35760405163118cdaa760e01b815233600482015260240162000068565b565b6020810151815160408301516000929162000300916200043d565b6200030c91906200043d565b61ffff16612710149050919050565b805161ffff811681146200032e57600080fd5b919050565b80516001600160a01b03811681146200032e57600080fd5b6000808284036101008112156200036157600080fd5b60e08112156200037057600080fd5b5060405160e081016001600160401b0381118282101715620003a257634e487b7160e01b600052604160045260246000fd5b604052620003b0846200031b565b8152620003c0602085016200031b565b6020820152620003d3604085016200031b565b6040820152620003e6606085016200031b565b6060820152620003f96080850162000333565b60808201526200040c60a0850162000333565b60a08201526200041f60c0850162000333565b60c082015291506200043460e0840162000333565b90509250929050565b61ffff8181168382160190808211156200046757634e487b7160e01b600052601160045260246000fd5b5092915050565b612dd3806200047e6000396000f3fe6080604052600436106101a55760003560e01c80637b260087116100e1578063b572a3c91161008a578063c55cfc7411610064578063c55cfc741461063d578063c7ba6a001461067a578063d9fa9c1a1461069a578063f2fde38b146106d3576101f7565b8063b572a3c9146105c4578063bfe22a01146105fd578063c4cf87f01461061d576101f7565b80639665b658116100bb5780639665b65814610564578063a8c2ec0314610584578063ab6319b5146105a4576101f7565b80637b2600871461050657806386bbc384146105265780638da5cb5b14610546576101f7565b8063350157a81161014e578063435727471161012857806343572747146104915780636745b3e1146104b157806370480275146104d1578063715018a6146104f1576101f7565b8063350157a8146104305780633adee7941461045d5780633c7c46dc1461047c576101f7565b80631b29b4fc1161017f5780631b29b4fc1461029657806322f3e2d4146102cb578063256a4935146102fb576101f7565b80630853ac1c1461023f5780631785f53c146102565780631a4230e714610276576101f7565b366101f75760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101ee565b34801561024b57600080fd5b506102546106f3565b005b34801561026257600080fd5b5061025461027136600461256b565b610707565b34801561028257600080fd5b5061025461029136600461259f565b610730565b3480156102a257600080fd5b506102b66102b13660046125e5565b61082d565b60405190151581526020015b60405180910390f35b3480156102d757600080fd5b5060025474010000000000000000000000000000000000000000900460ff166102b6565b34801561030757600080fd5b506103bd6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260085461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600954811660a0830152600a541660c082015290565b6040516102c29190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b34801561043c57600080fd5b50610445610870565b6040516001600160a01b0390911681526020016102c2565b34801561046957600080fd5b50600c545b6040519081526020016102c2565b34801561048857600080fd5b50600b5461046e565b34801561049d57600080fd5b506102546104ac366004612600565b610889565b3480156104bd57600080fd5b506102546104cc366004612600565b610a96565b3480156104dd57600080fd5b506102546104ec36600461256b565b610be3565b3480156104fd57600080fd5b50610254610c12565b34801561051257600080fd5b5061025461052136600461269e565b610c24565b34801561053257600080fd5b5061046e6105413660046125e5565b610e14565b34801561055257600080fd5b506000546001600160a01b0316610445565b34801561057057600080fd5b5061025461057f36600461256b565b610e53565b34801561059057600080fd5b5061025461059f36600461256b565b610e67565b3480156105b057600080fd5b506102546105bf36600461274e565b6114c9565b3480156105d057600080fd5b506102b66105df36600461256b565b6001600160a01b031660009081526007602052604090205460ff1690565b34801561060957600080fd5b5061025461061836600461278a565b611805565b34801561062957600080fd5b506102546106383660046127a7565b6118a8565b34801561064957600080fd5b5061065d6106583660046127c3565b61198d565b6040805193845260208401929092521515908201526060016102c2565b34801561068657600080fd5b50610254610695366004612600565b611a0e565b3480156106a657600080fd5b506102b66106b536600461256b565b6001600160a01b031660009081526001602052604090205460ff1690565b3480156106df57600080fd5b506102546106ee36600461256b565b611ca7565b6106fb611cfb565b6107056000611d41565b565b61070f611cfb565b6001600160a01b03166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff168061075857506000546001600160a01b031633145b6107ca5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ee565b6001600160a01b038216600081815260076020908152604091829020805460ff19168515159081179091558251938452908301527fd1f0540938f6c74ef93e6e1ad100a0ff30b046f9c053a43dcb7ba15e59411ee8910160405180910390a15050565b600060036000836007811115610845576108456127ed565b6007811115610856576108566127ed565b815260208101919091526040016000205460ff1692915050565b60006108846002546001600160a01b031690565b905090565b6002546001600160a01b031633146109095760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ee565b6001600160a01b038316600090815260056020908152604080832085845290915290205460ff166109a25760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101ee565b6001600160a01b038316600081815260056020908152604080832086845290915290819020805460ff19169055517f0283e5fa00000000000000000000000000000000000000000000000000000000815260048101849052630283e5fa90602401600060405180830381600087803b158015610a1d57600080fd5b505af1158015610a31573d6000803e3d6000fd5b5050600b8054925090506000610a468361284b565b91905055506000151582846001600160a01b03167f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a92184604051610a899190612880565b60405180910390a4505050565b336001600160a01b03841614610b3a5760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101ee565b6001600160a01b038316600090815260056020908152604080832085845290915290205460ff16610bd35760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f72203a205b556e7375627363726962655d205374726160448201527f7465677920616c726561647920756e737562736372696265640000000000000060648201526084016101ee565b610bde838383611da3565b505050565b610beb611cfb565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b610c1a611cfb565b6107056000611e28565b610c2c611cfb565b610c3581611e90565b610ca9576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c203130302560648201526084016101ee565b80516008805460208401516040808601516060870151608088015161ffff9788167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909616959095176201000094881694909402939093177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000918716919091027fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff161766010000000000009590921694909402177fffffffff0000000000000000000000000000000000000000ffffffffffffffff16680100000000000000006001600160a01b03928316021790915560a0830151600980547fffffffffffffffffffffffff000000000000000000000000000000000000000090811692841692909217905560c0840151600a80549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b600060046000836007811115610e2c57610e2c6127ed565b6007811115610e3d57610e3d6127ed565b8152602001908152602001600020549050919050565b610e5b611cfb565b610e6481611d41565b50565b3360009081526001602052604090205460ff1680610e8f57506000546001600160a01b031633145b610f015760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ee565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8791906128c1565b9050610fc86040518060400160405280601181526020017f4578656375746f723a2042616c616e636500000000000000000000000000000081525082611ec2565b604080518082018252601e81527f4578656375746f723a20496e6974616c2041646d696e2042616c616e636500006020820152600a5491517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015261108a928516906370a08231906024015b602060405180830381865afa158015611061573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108591906128c1565b611ec2565b6110fd604051806060016040528060228152602001612d7c602291396008546040517f70a08231000000000000000000000000000000000000000000000000000000008152680100000000000000009091046001600160a01b0390811660048301528516906370a0823190602401611044565b60408051808201909152601481527f4578656375746f723a2041646d696e2046656573000000000000000000000000602082015260085461114a9190640100000000900461ffff16611ec2565b60408051808201909152601781527f4578656375746f723a204578656375746f722046656573000000000000000000602082015260085461118f919061ffff16611ec2565b60408051808201909152601681527f4578656375746f723a20636f6d7075746520466565730000000000000000000060208201526008546111da919062010000900461ffff16611ec2565b8015610bde57600080806111ef600885611f57565b9250925092506112346040518060400160405280601681526020017f4578656375746f723a2041646d696e20416d6f756e740000000000000000000081525082611ec2565b6112736040518060400160405280601981526020017f4578656375746f723a204578656375746f7220416d6f756e740000000000000081525084611ec2565b6112b26040518060400160405280601881526020017f4578656375746f723a20636f6d7075746520416d6f756e74000000000000000081525083611ec2565b6008546112d5906801000000000000000090046001600160a01b03168487611fab565b6009546112ec906001600160a01b03168387611fab565b600a54611303906001600160a01b03168287611fab565b604080518082018252601b81527f4578656375746f723a2052656d61696e696e672042616c616e63650000000000602082015290517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015261137f91906001600160a01b038816906370a0823190602401611044565b604080518082018252601b81527f4578656375746f723a204e65772041646d696e2042616c616e636500000000006020820152600a5491517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201526113ff928816906370a0823190602401611044565b604080518082018252601e81527f4578656375746f723a204e6577204578656375746f722042616c616e63650000602082015260085491517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03680100000000000000009093048316600482015261148b928816906370a0823190602401611044565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60025474010000000000000000000000000000000000000000900460ff1661151d576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61152f61152982612ac8565b33612037565b6115a15760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101ee565b6115b26115ad82612ac8565b61204e565b6116245760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101ee565b6116376102b160808301606084016125e5565b6116a95760405162461bcd60e51b815260206004820152602d60248201527f4443416578656375746f72203a205b5375627363726962655d20496e7465727660448201527f616c204e6f74204163746976650000000000000000000000000000000000000060648201526084016101ee565b600560006116ba602084018461256b565b6001600160a01b031681526020808201929092526040908101600090812060a0850135825290925290205460ff161561175b5760405162461bcd60e51b815260206004820152603560248201527f4443416578656375746f72203a205b5375627363726962655d2053747261746560448201527f677920616c72656164792073756273637269626564000000000000000000000060648201526084016101ee565b6007600061176c6020840184612ba2565b61177a90602081019061256b565b6001600160a01b0316815260208101919091526040016000205460ff166117f4576117a86020820182612ba2565b6117b690602081019061256b565b6040517f723cf98f0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911660048201526024016101ee565b610e6461180082612ac8565b6120ba565b3360009081526001602052604090205460ff168061182d57506000546001600160a01b031633145b61189f5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ee565b610e64816121a4565b3360009081526001602052604090205460ff16806118d057506000546001600160a01b031633145b6119425760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ee565b8060036000846007811115611959576119596127ed565b600781111561196a5761196a6127ed565b81526020810191909152604001600020805460ff19169115159190911790555050565b6000806000846001600160a01b0316633887d28b856040518263ffffffff1660e01b81526004016119c091815260200190565b606060405180830381865afa1580156119dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a019190612be0565b9250925092509250925092565b6002546001600160a01b03163314611a8e5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ee565b60025474010000000000000000000000000000000000000000900460ff16611ae2576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038316600090815260056020908152604080832085845290915290205460ff16611b7b5760405162461bcd60e51b815260206004820152602f60248201527f4443414578656375746f72203a205b457865637574655d20537472617465677960448201527f206e6f742073756273637269626564000000000000000000000000000000000060648201526084016101ee565b611b848161082d565b611bf65760405162461bcd60e51b815260206004820152602b60248201527f4443414578656375746f72203a205b457865637574655d20496e74657276616c60448201527f204e6f742041637469766500000000000000000000000000000000000000000060648201526084016101ee565b6001600160a01b0383166000908152600660209081526040808320858452909152902054611c25908290612219565b611c975760405162461bcd60e51b815260206004820152602f60248201527f4443414578656375746f72203a205b457865637574655d204e6f7420696e206560448201527f7865637574696f6e2077696e646f77000000000000000000000000000000000060648201526084016101ee565b611ca1838361222d565b50505050565b611caf611cfb565b6001600160a01b038116611cf2576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101ee565b610e6481611e28565b6000546001600160a01b03163314610705576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101ee565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b600b8054906000611db38361284b565b90915550506001600160a01b03831660009081526005602090815260408083208584529091528120805460ff19169055600490826007811115611df857611df86127ed565b6007811115611e0957611e096127ed565b81526020019081526020016000206000815480929190610a469061284b565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60208101518151604083015160009291611ea991612c19565b611eb39190612c19565b61ffff16612710149050919050565b611f538282604051602401611ed8929190612c3b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc0000000000000000000000000000000000000000000000000000000017905261234c565b5050565b815460009081908190611f6e9061ffff1685612355565b8554909350611f879062010000900461ffff1685612355565b8554909250611fa290640100000000900461ffff1685612355565b90509250925092565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015612013573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca19190612cae565b81516001600160a01b038281169116145b92915050565b600080600790506000818460600151600781111561206e5761206e6127ed565b855191101591506001600160a01b03161580159061209957506020840151516001600160a01b031615155b80156120a9575060008460800151115b80156120b25750805b949350505050565b80516001600160a01b0316600090815260056020908152604080832060a085015184529091528120805460ff19166001179055600b8054916120fb83612ccb565b9190505550600460008260600151600781111561211a5761211a6127ed565b600781111561212b5761212b6127ed565b8152602001908152602001600020600081548092919061214a90612ccb565b9190505550600115158160a0015182600001516001600160a01b03167f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a92184606001516040516121999190612880565b60405180910390a450565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006122258383612389565b159392505050565b6008546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af11580156122a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122cd9190612cae565b90508015612345576001600160a01b03841660009081526006602090815260408083208684529091528120429055600c80549161230983612ccb565b909155505060405183906001600160a01b038616907fb89af9bc8aa44a0bb15ecf17cc88021e8a65196963bed8e33aa51c08b1eca0ef90600090a35b9392505050565b610e64816123c1565b600060018361ffff16101561236c57506000612048565b600061271061237f61ffff861685612d03565b6120b29190612d1a565b600080612395846123e2565b61239f9084612d55565b90508042116123b7576123b24282612d68565b6120b2565b6000949350505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000808260078111156123f7576123f76127ed565b036124045750603c919050565b6001826007811115612418576124186127ed565b0361242957612048603c6005612d03565b600282600781111561243d5761243d6127ed565b0361244c575062015180919050565b6003826007811115612460576124606127ed565b0361247357612048620151806002612d03565b6004826007811115612487576124876127ed565b0361249a57612048620151806003612d03565b60058260078111156124ae576124ae6127ed565b036124bd575062093a80919050565b60068260078111156124d1576124d16127ed565b036124e45761204862093a806002612d03565b60078260078111156124f8576124f86127ed565b0361250757506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101ee565b80356001600160a01b038116811461256657600080fd5b919050565b60006020828403121561257d57600080fd5b6123458261254f565b8015158114610e6457600080fd5b803561256681612586565b600080604083850312156125b257600080fd5b6125bb8361254f565b915060208301356125cb81612586565b809150509250929050565b80356008811061256657600080fd5b6000602082840312156125f757600080fd5b612345826125d6565b60008060006060848603121561261557600080fd5b61261e8461254f565b925060208401359150611fa2604085016125d6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561268657612686612633565b60405290565b803561ffff8116811461256657600080fd5b600060e082840312156126b057600080fd5b60405160e0810181811067ffffffffffffffff821117156126d3576126d3612633565b6040526126df8361268c565b81526126ed6020840161268c565b60208201526126fe6040840161268c565b604082015261270f6060840161268c565b60608201526127206080840161254f565b608082015261273160a0840161254f565b60a082015261274260c0840161254f565b60c08201529392505050565b60006020828403121561276057600080fd5b813567ffffffffffffffff81111561277757600080fd5b8201610100818503121561234557600080fd5b60006020828403121561279c57600080fd5b813561234581612586565b600080604083850312156127ba57600080fd5b6125bb836125d6565b600080604083850312156127d657600080fd5b6127df8361254f565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008161285a5761285a61281c565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60208101600883106128bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602082840312156128d357600080fd5b5051919050565b803560ff8116811461256657600080fd5b600067ffffffffffffffff8084111561290657612906612633565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561294c5761294c612633565b8160405280935085815286868601111561296557600080fd5b858560208301376000602087830101525050509392505050565b60006060828403121561299157600080fd5b6040516060810167ffffffffffffffff82821081831117156129b5576129b5612633565b816040528293506129c58561254f565b83526129d3602086016128da565b602084015260408501359150808211156129ec57600080fd5b508301601f810185136129fe57600080fd5b612a0d858235602084016128eb565b6040830152505092915050565b600060808284031215612a2c57600080fd5b6040516080810167ffffffffffffffff8282108183111715612a5057612a50612633565b816040528293508435915080821115612a6857600080fd5b508301601f81018513612a7a57600080fd5b612a89858235602084016128eb565b8252506020830135612a9a81612586565b6020820152612aab604084016128da565b6040820152612abc6060840161254f565b60608201525092915050565b60006101008236031215612adb57600080fd5b612ae3612662565b612aec8361254f565b8152602083013567ffffffffffffffff80821115612b0957600080fd5b612b153683870161297f565b60208401526040850135915080821115612b2e57600080fd5b612b3a3683870161297f565b6040840152612b4b606086016125d6565b60608401526080850135608084015260a085013560a0840152612b7060c08601612594565b60c084015260e0850135915080821115612b8957600080fd5b50612b9636828601612a1a565b60e08301525092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112612bd657600080fd5b9190910192915050565b600080600060608486031215612bf557600080fd5b83519250602084015191506040840151612c0e81612586565b809150509250925092565b61ffff818116838216019080821115612c3457612c3461281c565b5092915050565b604081526000835180604084015260005b81811015612c695760208187018101516060868401015201612c4c565b5060006060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150508260208301529392505050565b600060208284031215612cc057600080fd5b815161234581612586565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cfc57612cfc61281c565b5060010190565b80820281158282048414176120485761204861281c565b600082612d50577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b808201808211156120485761204861281c565b818103818111156120485761204861281c56fe4578656375746f723a20496e6974616c20457865637574696f6e2042616c616e6365a26469706673582212206ba9293f3c9cde5bb5e420047f317a186af0dd80bc2b8b667587712282e7527964736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
