/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAAccount,
  DCAAccountInterface,
} from "../../contracts/DCAAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "DCAExecutorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "NewStrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "reInvest_",
        type: "bool",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor_",
        type: "address",
      },
    ],
    name: "StrategySubscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "StrategyUnsubscribed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
    ],
    name: "Execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutorDeactivateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetBaseBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenCostPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenRemainingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "GetStrategyData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetTargetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "",
        type: "uint8",
      },
    ],
    name: "IntervalTimings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "depositReinvestMethod",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "withdrawReinvestMethod",
            type: "bytes",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvest_",
        type: "tuple",
      },
    ],
    name: "SetStrategyReinvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "newStrategy_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "seedFunds_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "subscribeToExecutor_",
        type: "bool",
      },
    ],
    name: "SetupStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "SubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "UnFundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "UnsubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "WithdrawSavings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newExecutorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526008805462ffffff60a01b191661027160a41b1790553480156200002757600080fd5b5060405162003918380380620039188339810160408190526200004a91620002d8565b82816001600160a01b0381166200007c57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200008781620001b6565b50600180546001600160a01b0319166001600160a01b0392909216919091179055620000b38362000206565b6001600160a01b038216608052620001ad600760205260047f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df5560147fb39221ace053465ec3453ce2b36430bd138b997ecea25c1043da0c366812b828556116807fb7c774451310d1be4108bc180d1b52823cb0ee0274a6c0081bcaf94f115fb96d55612d007f3be6fd20d5acfde5b873b48692cd31f4d3c7e8ee8a813af4696af8859e5ca6c655619d807fb805995a7ec585a251200611a61d179cfd7fb105e1ab17dc415a7336783786f75560056000526202a3007fbcdda56b5d08466ec462cbbe0adfa57cb0a15fcc8940ef68f702f21b787bc93555565b50505062000322565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6008546001600160a01b03808316911603620002655760405162461bcd60e51b815260206004820152601f60248201527f416c7265616479207573696e67207468697320444341206578656375746f7200604482015260640162000073565b600880546001600160a01b0383166001600160a01b0319918216811790925560018054909116821790556040517f5143bfc9ce9795735e71faebae63e6679d7d1cbc32cd175adf3801580709a29990600090a250565b80516001600160a01b0381168114620002d357600080fd5b919050565b600080600060608486031215620002ee57600080fd5b620002f984620002bb565b92506200030960208501620002bb565b91506200031960408501620002bb565b90509250925092565b6080516135cc6200034c600039600081816128e0015281816129920152612b5701526135cc6000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063b87462fe116100cd578063d948714411610081578063e5cb579311610066578063e5cb579314610327578063ea26752e1461033a578063f2fde38b1461034d57600080fd5b8063d9487144146102de578063df79f1e0146102fe57600080fd5b8063c8f62ee4116100b2578063c8f62ee414610288578063ca4c8b31146102a8578063cc821a6b146102cb57600080fd5b8063b87462fe14610236578063bff7f69e1461025f57600080fd5b8063715018a6116101245780638e2894c0116101095780638e2894c0146101fd5780639665b65814610210578063a30b19971461022357600080fd5b8063715018a6146101da5780638da5cb5b146101e257600080fd5b80630c9763d8116101555780630c9763d81461018e5780636f2d41cb146101a15780636fbac7b5146101b457600080fd5b80630853ac1c146101715780630a2f52a61461017b575b600080fd5b610179610360565b005b610179610189366004612c88565b610387565b61017961019c366004612e3a565b610401565b6101796101af366004612c88565b610458565b6101c76101c2366004612e98565b610c48565b6040519081526020015b60405180910390f35b610179610c7c565b6000546040516001600160a01b0390911681526020016101d1565b61017961020b366004612f3c565b610c90565b61017961021e366004612e98565b610eb2565b610179610231366004612c88565b610ee9565b6101c7610244366004612e98565b6001600160a01b031660009081526003602052604090205490565b6101c761026d366004612e98565b6001600160a01b031660009081526004602052604090205490565b6101c7610296366004613053565b60076020526000908152604090205481565b6102bb6102b636600461306e565b611364565b60405190151581526020016101d1565b6101796102d93660046130a5565b6114f0565b6102f16102ec366004612c88565b611603565b6040516101d191906131c4565b6101c761030c366004612e98565b6001600160a01b031660009081526006602052604090205490565b6101796103353660046130a5565b611986565b6101796103483660046130a5565b611a47565b61017961035b366004612e98565b611b51565b610368611ba5565b6001805473ffffffffffffffffffffffffffffffffffffffff19169055565b61038f611ba5565b60008181526002602052604090206008015460ff166103f55760405162461bcd60e51b815260206004820181905260248201527f537472617465677920697320616c726561647920556e7375627363726962656460448201526064015b60405180910390fd5b6103fe81611beb565b50565b6000828152600260209081526040909120825160098201805460ff191691151591909117815591830151839291600a019061043c9082613306565b50604082015160028201906104519082613306565b5050505050565b610460611ba5565b600081815260026020818152604080842081516101008101835281546001600160a01b03908116825283516060810185526001840180549283168252600160a01b90920460ff16818701529583018054929693958701949192918401916104c69061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546104f29061327e565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906105979061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546105c39061327e565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b50505091909252505050815260058281015460209092019160ff169081111561063b5761063b613152565b600581111561064c5761064c613152565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060600160405290816000820160009054906101000a900460ff161515151581526020016001820180546106ba9061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546106e69061327e565b80156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b5050505050815260200160028201805461074c9061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546107789061327e565b80156107c55780601f1061079a576101008083540402835291602001916107c5565b820191906000526020600020905b8154815290600101906020018083116107a857829003601f168201915b5050505050815250508152505090508060c00151156108265760405162461bcd60e51b815260206004820152601e60248201527f537472617465677920697320616c72656164792053756273637269626564000060448201526064016103ec565b60808101516108369060056133dc565b602080830151516001600160a01b031660009081526003909152604090205410156108c95760405162461bcd60e51b815260206004820152602d60248201527f4e65656420746f2068617665203520657865637574696f6e732066756e64656460448201527f20746f207375627363726962650000000000000000000000000000000000000060648201526084016103ec565b60008281526002602081815260409283902083516101008101855281546001600160a01b03908116825285516060810187526001840180549283168252600160a01b90920460ff16818601529483018054610c44979396949587019493840191906109339061327e565b80601f016020809104026020016040519081016040528092919081815260200182805461095f9061327e565b80156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610a049061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a309061327e565b8015610a7d5780601f10610a5257610100808354040283529160200191610a7d565b820191906000526020600020905b815481529060010190602001808311610a6057829003601f168201915b50505091909252505050815260058281015460209092019160ff1690811115610aa857610aa8613152565b6005811115610ab957610ab9613152565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182018054610b279061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b539061327e565b8015610ba05780601f10610b7557610100808354040283529160200191610ba0565b820191906000526020600020905b815481529060010190602001808311610b8357829003601f168201915b50505050508152602001600282018054610bb99061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054610be59061327e565b8015610c325780601f10610c0757610100808354040283529160200191610c32565b820191906000526020600020905b815481529060010190602001808311610c1557829003601f168201915b50505050508152505081525050612064565b5050565b6001600160a01b0381166000908152600660209081526040808320546003909252822054610c7691906133f3565b92915050565b610c84611ba5565b610c8e60006121b2565b565b610c98611ba5565b600b8054906000610ca883613415565b9091555050600b5460a08401819052308452600060c0850181905290815260026020818152604092839020865181546001600160a01b0391821673ffffffffffffffffffffffffffffffffffffffff199091161782558288015180516001840180549583015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff1990961691909316179390931781559382015187949193840190610d519082613306565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b0390931692909217919091178155918101519091906004840190610db59082613306565b50505060608201518160050160006101000a81548160ff02191690836005811115610de257610de2613152565b02179055506080820151600682015560a0820151600782015560c082015160088201805491151560ff1992831617905560e08301518051600984018054911515919093161782556020810151909190600a840190610e409082613306565b5060408201516002820190610e559082613306565b505084159250610e7291505057602083015151610e729083611986565b8015610e8157610e8183612064565b600b546040517f0c0f11867405f4e2b6b3acc0fd60f8590a5298e6a03fa7b918741dcebbc8501490600090a2505050565b610eba611ba5565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610f435760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f72000000000060448201526064016103ec565b600081815260026020818152604080842081516101008101835281546001600160a01b03908116825283516060810185526001840180549283168252600160a01b90920460ff1681870152958301805492969395870194919291840191610fa99061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd59061327e565b80156110225780601f10610ff757610100808354040283529160200191611022565b820191906000526020600020905b81548152906001019060200180831161100557829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061107a9061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546110a69061327e565b80156110f35780601f106110c8576101008083540402835291602001916110f3565b820191906000526020600020905b8154815290600101906020018083116110d657829003601f168201915b50505091909252505050815260058281015460209092019160ff169081111561111e5761111e613152565b600581111561112f5761112f613152565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060600160405290816000820160009054906101000a900460ff1615151515815260200160018201805461119d9061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546111c99061327e565b80156112165780601f106111eb57610100808354040283529160200191611216565b820191906000526020600020905b8154815290600101906020018083116111f957829003601f168201915b5050505050815260200160028201805461122f9061327e565b80601f016020809104026020016040519081016040528092919081815260200182805461125b9061327e565b80156112a85780601f1061127d576101008083540402835291602001916112a8565b820191906000526020600020905b81548152906001019060200180831161128b57829003601f168201915b5050505050815250508152505090506112c98160800151826060015161220f565b602080830151516001600160a01b0316600090815260069091526040812080549091906112f790849061342e565b909155505060a08101516000908152600260205260408120600801805460ff19169055600a80546001929061132d90849061342e565b909155505060a08101516040517fb7f1dfe2f6ac6dcd488a08b928272e146948d54526bda95825333be1739e843090600090a25050565b6001546000906001600160a01b031633146113c15760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f72000000000060448201526064016103ec565b60008381526002602052604081206005908101548592429260079260ff16908111156113ef576113ef613152565b600581111561140057611400613152565b815260200190815260200160002054600560008481526020019081526020016000205461142d9190613441565b1061147a5760405162461bcd60e51b815260206004820152601460248201527f44434120496e74657276616c206e6f74206d657400000000000000000000000060448201526064016103ec565b60008481526002602052604090206008015460ff166114db5760405162461bcd60e51b815260206004820152601660248201527f5374726174656779206973206e6f74206163746976650000000000000000000060448201526064016103ec565b60006114e78585612259565b95945050505050565b6114f8611ba5565b6001600160a01b0382166000908152600360205260409020548111156115605760405162461bcd60e51b815260206004820152601760248201527f42616c616e6365206f6620746f6b656e20746f206c6f7700000000000000000060448201526064016103ec565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156115ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d19190613454565b506001600160a01b038216600090815260036020526040812080548392906115fa90849061342e565b90915550505050565b61160b612bcc565b60008281526002602081815260409283902083516101008101855281546001600160a01b03908116825285516060810187526001840180549283168252600160a01b90920460ff168186015294830180549296939594870194939192918401916116749061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546116a09061327e565b80156116ed5780601f106116c2576101008083540402835291602001916116ed565b820191906000526020600020905b8154815290600101906020018083116116d057829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906117459061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546117719061327e565b80156117be5780601f10611793576101008083540402835291602001916117be565b820191906000526020600020905b8154815290600101906020018083116117a157829003601f168201915b50505091909252505050815260058281015460209092019160ff16908111156117e9576117e9613152565b60058111156117fa576117fa613152565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060600160405290816000820160009054906101000a900460ff161515151581526020016001820180546118689061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546118949061327e565b80156118e15780601f106118b6576101008083540402835291602001916118e1565b820191906000526020600020905b8154815290600101906020018083116118c457829003601f168201915b505050505081526020016002820180546118fa9061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546119269061327e565b80156119735780601f1061194857610100808354040283529160200191611973565b820191906000526020600020905b81548152906001019060200180831161195657829003601f168201915b5050509190925250505090525092915050565b61198e611ba5565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156119fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1e9190613454565b506001600160a01b038216600090815260036020526040812080548392906115fa908490613441565b611a4f611ba5565b6001600160a01b038216600090815260046020526040902054811115611ab75760405162461bcd60e51b815260206004820152601760248201527f42616c616e6365206f6620746f6b656e20746f206c6f7700000000000000000060448201526064016103ec565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015611b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b289190613454565b506001600160a01b038216600090815260046020526040812080548392906115fa90849061342e565b611b59611ba5565b6001600160a01b038116611b9c576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016103ec565b6103fe816121b2565b6000546001600160a01b03163314610c8e576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016103ec565b600081815260026020818152604080842081516101008101835281546001600160a01b03908116825283516060810185526001840180549283168252600160a01b90920460ff1681870152958301805492969395870194919291840191611c519061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7d9061327e565b8015611cca5780601f10611c9f57610100808354040283529160200191611cca565b820191906000526020600020905b815481529060010190602001808311611cad57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190611d229061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4e9061327e565b8015611d9b5780601f10611d7057610100808354040283529160200191611d9b565b820191906000526020600020905b815481529060010190602001808311611d7e57829003601f168201915b50505091909252505050815260058281015460209092019160ff1690811115611dc657611dc6613152565b6005811115611dd757611dd7613152565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182018054611e459061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054611e719061327e565b8015611ebe5780601f10611e9357610100808354040283529160200191611ebe565b820191906000526020600020905b815481529060010190602001808311611ea157829003601f168201915b50505050508152602001600282018054611ed79061327e565b80601f0160208091040260200160405190810160405280929190818152602001828054611f039061327e565b8015611f505780601f10611f2557610100808354040283529160200191611f50565b820191906000526020600020905b815481529060010190602001808311611f3357829003601f168201915b505050505081525050815250509050611f718160800151826060015161220f565b602080830151516001600160a01b031660009081526006909152604081208054909190611f9f90849061342e565b90915550506008546040517f18f1f54d000000000000000000000000000000000000000000000000000000008152306004820152602481018490526001600160a01b03909116906318f1f54d906044016020604051808303816000875af115801561200e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120329190613454565b5060a08101516000908152600260205260408120600801805460ff19169055600a80546001929061132d90849061342e565b6120768160800151826060015161220f565b602080830151516001600160a01b0316600090815260069091526040812080549091906120a4908490613441565b90915550506008546040517f2fbbad490000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690632fbbad49906120f29084906004016131c4565b6020604051808303816000875af1158015612111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121359190613454565b5060a08101516000908152600260205260408120600801805460ff19166001908117909155600a80549192909161216d908490613441565b909155505060085460a08201516040516001600160a01b03909216917feb939e0c9964841ca5615fd16a7ee72077352eaeae62d788a647076326a41abd90600090a350565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006007600083600581111561222757612227613152565b600581111561223857612238613152565b8152602001908152602001600020548361225291906133f3565b9392505050565b600082815260026020818152604080842081516101008101835281546001600160a01b03908116825283516060810185526001840180549283168252600160a01b90920460ff1681870152958301805488979396949594870194840191906122c09061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546122ec9061327e565b80156123395780601f1061230e57610100808354040283529160200191612339565b820191906000526020600020905b81548152906001019060200180831161231c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906123919061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546123bd9061327e565b801561240a5780601f106123df5761010080835404028352916020019161240a565b820191906000526020600020905b8154815290600101906020018083116123ed57829003601f168201915b50505091909252505050815260058281015460209092019160ff169081111561243557612435613152565b600581111561244657612446613152565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060600160405290816000820160009054906101000a900460ff161515151581526020016001820180546124b49061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546124e09061327e565b801561252d5780601f106125025761010080835404028352916020019161252d565b820191906000526020600020905b81548152906001019060200180831161251057829003601f168201915b505050505081526020016002820180546125469061327e565b80601f01602080910402602001604051908101604052809291908181526020018280546125729061327e565b80156125bf5780601f10612594576101008083540402835291602001916125bf565b820191906000526020600020905b8154815290600101906020018083116125a257829003601f168201915b50505091909252505050905250602080820151516040808401515160808501516001600160a01b038416600090815260039095529184205494955091939192918291829110156126515760405162461bcd60e51b815260206004820152601460248201527f426173652042616c616e636520746f6f206c6f7700000000000000000000000060448201526064016103ec565b61ffff88161561267a5761266e866020015187608001518a612793565b925061267a83866127e7565b82866080015161268a919061342e565b915061269685836128aa565b6126a1858584612a60565b90508015612784576001600160a01b038416600090815260046020526040812080548392906126d1908490613441565b909155505060808601516001600160a01b0386166000908152600360205260408120805490919061270390849061342e565b909155505060a086015160009081526005602052604081204290556009805460019290612731908490613441565b909155505060e086015151604051901515815281908a907ff062e3202b961c4181d7be50c794a184dd3d6747ba3d5c3f1a43516410f248709060200160405180910390a360019650505050505050610c76565b60009650505050505050610c76565b600080600285602001516127a79190613471565b6127b290600a61356e565b6127c09061ffff85166133dc565b90508460200151600a6127d3919061356e565b6127dd82866133dc565b6114e791906133f3565b60085460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529082169063a9059cbb906044016020604051808303816000875af115801561283a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285e9190613454565b610c445760405162461bcd60e51b815260206004820152601360248201527f466565207472616e73666572206661696c65640000000000000000000000000060448201526064016103ec565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152839160009183169063dd62ed3e90604401602060405180830381865afa158015612934573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612958919061357d565b905082811015612a5a576040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820185905283169063095ea7b3906044016020604051808303816000875af11580156129ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0e9190613454565b612a5a5760405162461bcd60e51b815260206004820152600e60248201527f417070726f7665206661696c656400000000000000000000000000000000000060448201526064016103ec565b50505050565b60408051610100810182526001600160a01b03858116825284166020820152600854600160a01b900462ffffff1691810191909152306060820152600090819060808101612ab04261012c613441565b815260208082018690526000604080840182905260609384019190915280517f414bf38900000000000000000000000000000000000000000000000000000000815284516001600160a01b03908116600483015292850151831660248201529084015162ffffff16604482015291830151811660648301526080830151608483015260a083015160a483015260c083015160c483015260e0830151811660e48301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af1158015612ba3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e7919061357d565b505050565b60405180610100016040528060006001600160a01b03168152602001612c18604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001612c83604051806060016040528060001515815260200160608152602001606081525090565b905290565b600060208284031215612c9a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715612cda57612cda612ca1565b60405290565b604051610100810167ffffffffffffffff81118282101715612cda57612cda612ca1565b80151581146103fe57600080fd5b8035612d1d81612d04565b919050565b600067ffffffffffffffff80841115612d3d57612d3d612ca1565b604051601f8501601f19908116603f01168101908282118183101715612d6557612d65612ca1565b81604052809350858152868686011115612d7e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612da957600080fd5b61225283833560208501612d22565b600060608284031215612dca57600080fd5b612dd2612cb7565b90508135612ddf81612d04565b8152602082013567ffffffffffffffff80821115612dfc57600080fd5b612e0885838601612d98565b60208401526040840135915080821115612e2157600080fd5b50612e2e84828501612d98565b60408301525092915050565b60008060408385031215612e4d57600080fd5b82359150602083013567ffffffffffffffff811115612e6b57600080fd5b612e7785828601612db8565b9150509250929050565b80356001600160a01b0381168114612d1d57600080fd5b600060208284031215612eaa57600080fd5b61225282612e81565b600060608284031215612ec557600080fd5b612ecd612cb7565b9050612ed882612e81565b8152602082013560ff81168114612eee57600080fd5b6020820152604082013567ffffffffffffffff811115612f0d57600080fd5b8201601f81018413612f1e57600080fd5b612e2e84823560208401612d22565b803560068110612d1d57600080fd5b600080600060608486031215612f5157600080fd5b833567ffffffffffffffff80821115612f6957600080fd5b908501906101008288031215612f7e57600080fd5b612f86612ce0565b612f8f83612e81565b8152602083013582811115612fa357600080fd5b612faf89828601612eb3565b602083015250604083013582811115612fc757600080fd5b612fd389828601612eb3565b604083015250612fe560608401612f2d565b60608201526080830135608082015260a083013560a082015261300a60c08401612d12565b60c082015260e08301358281111561302157600080fd5b61302d89828601612db8565b60e083015250945050506020840135915061304a60408501612d12565b90509250925092565b60006020828403121561306557600080fd5b61225282612f2d565b6000806040838503121561308157600080fd5b82359150602083013561ffff8116811461309a57600080fd5b809150509250929050565b600080604083850312156130b857600080fd5b6130c183612e81565b946020939093013593505050565b6000815180845260005b818110156130f5576020818501810151868301820152016130d9565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff6020820151166020830152600060408201516060604085015261314a60608501826130cf565b949350505050565b634e487b7160e01b600052602160045260246000fd5b6006811061318657634e487b7160e01b600052602160045260246000fd5b9052565b80511515825260006020820151606060208501526131ab60608501826130cf565b9050604083015184820360408601526114e782826130cf565b602081526131de6020820183516001600160a01b03169052565b600060208301516101008060408501526131fc610120850183613115565b91506040850151601f198086850301606087015261321a8483613115565b9350606087015191506132306080870183613168565b608087015160a087015260a087015160c087015260c0870151915061325960e087018315159052565b60e0870151915080868503018387015250613274838261318a565b9695505050505050565b600181811c9082168061329257607f821691505b6020821081036132b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115612bc757600081815260208120601f850160051c810160208610156132df5750805b601f850160051c820191505b818110156132fe578281556001016132eb565b505050505050565b815167ffffffffffffffff81111561332057613320612ca1565b6133348161332e845461327e565b846132b8565b602080601f83116001811461336957600084156133515750858301515b600019600386901b1c1916600185901b1785556132fe565b600085815260208120601f198616915b8281101561339857888601518255948401946001909101908401613379565b50858210156133b65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610c7657610c766133c6565b60008261341057634e487b7160e01b600052601260045260246000fd5b500490565b600060018201613427576134276133c6565b5060010190565b81810381811115610c7657610c766133c6565b80820180821115610c7657610c766133c6565b60006020828403121561346657600080fd5b815161225281612d04565b60ff8281168282160390811115610c7657610c766133c6565b600181815b808511156134c55781600019048211156134ab576134ab6133c6565b808516156134b857918102915b93841c939080029061348f565b509250929050565b6000826134dc57506001610c76565b816134e957506000610c76565b81600181146134ff576002811461350957613525565b6001915050610c76565b60ff84111561351a5761351a6133c6565b50506001821b610c76565b5060208310610133831016604e8410600b8410161715613548575081810a610c76565b613552838361348a565b8060001904821115613566576135666133c6565b029392505050565b600061225260ff8416836134cd565b60006020828403121561358f57600080fd5b505191905056fea26469706673582212209d63c28755692c63dff352e3d4803a82a425d0f8b787adbc80d83d314a8e9ba664736f6c63430008140033";

type DCAAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAAccount__factory extends ContractFactory {
  constructor(...args: DCAAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      executorAddress_,
      swapRouter_,
      owner_,
      overrides || {}
    );
  }
  override deploy(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      executorAddress_,
      swapRouter_,
      owner_,
      overrides || {}
    ) as Promise<
      DCAAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAAccount__factory {
    return super.connect(runner) as DCAAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAAccountInterface {
    return new Interface(_abi) as DCAAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAAccount {
    return new Contract(address, _abi, runner) as unknown as DCAAccount;
  }
}
