/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAAccount,
  DCAAccountInterface,
} from "../../contracts/DCAAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "DCAExecutorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor_",
        type: "address",
      },
    ],
    name: "StrategySubscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "StrategyUnsubscribed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutorDeactivateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetBaseBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenCostPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenRemainingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "GetStrategyData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetTargetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "",
        type: "uint8",
      },
    ],
    name: "IntervalTimings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "newStrategy_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "seedFunds_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "subscribeToExecutor_",
        type: "bool",
      },
    ],
    name: "SetupStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "SubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "TestSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "UnFundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "UnsubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "WithdrawSavings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newExecutorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526008805462ffffff60a01b191661027160a41b1790553480156200002757600080fd5b5060405162002c0738038062002c078339810160408190526200004a91620002ac565b8133806200007357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007e8162000180565b50600180546001600160a01b0319166001600160a01b0392909216919091179055620000aa82620001d0565b6001600160a01b031660805250600760205260147f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df556116807fb39221ace053465ec3453ce2b36430bd138b997ecea25c1043da0c366812b82855612d007fb7c774451310d1be4108bc180d1b52823cb0ee0274a6c0081bcaf94f115fb96d55619d807f3be6fd20d5acfde5b873b48692cd31f4d3c7e8ee8a813af4696af8859e5ca6c65560046000526202a3007fb805995a7ec585a251200611a61d179cfd7fb105e1ab17dc415a7336783786f755620002e4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6008546001600160a01b038083169116036200022f5760405162461bcd60e51b815260206004820152601f60248201527f416c7265616479207573696e67207468697320444341206578656375746f720060448201526064016200006a565b600880546001600160a01b03199081166001600160a01b038416908117909255600180549091168217905560408051918252517f5143bfc9ce9795735e71faebae63e6679d7d1cbc32cd175adf3801580709a2999181900360200190a150565b80516001600160a01b0381168114620002a757600080fd5b919050565b60008060408385031215620002c057600080fd5b620002cb836200028f565b9150620002db602084016200028f565b90509250929050565b6080516128f26200031560003960008181610ab9015281816118df015281816119780152611b1501526128f26000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063bff7f69e116100ad578063dbadd4cb11610071578063dbadd4cb1461029b578063df79f1e0146102ae578063e5cb5793146102d7578063ea26752e146102ea578063f2fde38b146102fd57600080fd5b8063bff7f69e1461020c578063c8f62ee414610235578063ca4c8b3114610255578063cc821a6b14610268578063d94871441461027b57600080fd5b80638da5cb5b116100f45780638da5cb5b1461018f5780639665b658146101aa578063a30b1997146101bd578063aa02fa8f146101d0578063b87462fe146101e357600080fd5b80630853ac1c146101315780630a2f52a61461013b5780636f2d41cb1461014e5780636fbac7b514610161578063715018a614610187575b600080fd5b610139610310565b005b610139610149366004612097565b61032a565b61013961015c366004612097565b6103c1565b61017461016f3660046120cc565b6106a0565b6040519081526020015b60405180910390f35b6101396106d4565b6000546040516001600160a01b03909116815260200161017e565b6101396101b83660046120cc565b6106e8565b6101396101cb366004612097565b610712565b6101746101de3660046120e7565b610aa9565b6101746101f13660046120cc565b6001600160a01b031660009081526003602052604090205490565b61017461021a3660046120cc565b6001600160a01b031660009081526004602052604090205490565b610174610243366004612132565b60076020526000908152604090205481565b61013961026336600461214d565b610aff565b610139610276366004612184565b610b84565b61028e610289366004612097565b610c91565b60405161017e9190612256565b6101396102a936600461248d565b610eef565b6101746102bc3660046120cc565b6001600160a01b031660009081526006602052604090205490565b6101396102e5366004612184565b611101565b6101396102f8366004612184565b6111a9565b61013961030b3660046120cc565b6112ad565b6103186112e8565b600180546001600160a01b0319169055565b6103326112e8565b60028181548110610345576103456125a7565b906000526020600020906009020160080160019054906101000a900460ff166103b55760405162461bcd60e51b815260206004820181905260248201527f537472617465677920697320616c726561647920556e7375627363726962656460448201526064015b60405180910390fd5b6103be81611315565b50565b6103c96112e8565b600281815481106103dc576103dc6125a7565b906000526020600020906009020160080160019054906101000a900460ff16156104485760405162461bcd60e51b815260206004820152601e60248201527f537472617465677920697320616c72656164792053756273637269626564000060448201526064016103ac565b6103be6002828154811061045e5761045e6125a7565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916104cb906125bd565b80601f01602080910402602001604051908101604052809291908181526020018280546104f7906125bd565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061059c906125bd565b80601f01602080910402602001604051908101604052809291908181526020018280546105c8906125bd565b80156106155780601f106105ea57610100808354040283529160200191610615565b820191906000526020600020905b8154815290600101906020018083116105f857829003601f168201915b505050919092525050508152600582015460209091019060ff1660048111156106405761064061221e565b60048111156106515761065161221e565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a090910152611648565b6001600160a01b03811660009081526006602090815260408083205460039092528220546106ce919061260d565b92915050565b6106dc6112e8565b6106e660006117a7565b565b6106f06112e8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461076c5760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f72000000000060448201526064016103ac565b600060028281548110610781576107816125a7565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916107ee906125bd565b80601f016020809104026020016040519081016040528092919081815260200182805461081a906125bd565b80156108675780601f1061083c57610100808354040283529160200191610867565b820191906000526020600020905b81548152906001019060200180831161084a57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906108bf906125bd565b80601f01602080910402602001604051908101604052809291908181526020018280546108eb906125bd565b80156109385780601f1061090d57610100808354040283529160200191610938565b820191906000526020600020905b81548152906001019060200180831161091b57829003601f168201915b505050919092525050508152600582015460209091019060ff1660048111156109635761096361221e565b60048111156109745761097461221e565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a090930192909252820151908201519192506109df916117f7565b602080830151516001600160a01b031660009081526006909152604081208054909190610a0d90849061262f565b92505081905550600060028260a0015181548110610a2d57610a2d6125a7565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600a6000828254610a68919061262f565b909155505060a08101516040519081527fb7f1dfe2f6ac6dcd488a08b928272e146948d54526bda95825333be1739e84309060200160405180910390a15050565b6000610ab36112e8565b610ade847f000000000000000000000000000000000000000000000000000000000000000084611841565b610aec57610aec84836118c2565b610af7848484611a37565b949350505050565b60028281548110610b1257610b126125a7565b906000526020600020906009020160080160019054906101000a900460ff16610b765760405162461bcd60e51b81526020600482015260166024820152755374726174656779206973206e6f742061637469766560501b60448201526064016103ac565b610b808282611b8e565b5050565b610b8c6112e8565b6001600160a01b038216600090815260036020526040902054811015610bee5760405162461bcd60e51b815260206004820152601760248201527642616c616e6365206f6620746f6b656e20746f206c6f7760481b60448201526064016103ac565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190612642565b506001600160a01b03821660009081526003602052604081208054839290610c8890849061262f565b90915550505050565b610c99611ff9565b60028281548110610cac57610cac6125a7565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610d19906125bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610d45906125bd565b8015610d925780601f10610d6757610100808354040283529160200191610d92565b820191906000526020600020905b815481529060010190602001808311610d7557829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610dea906125bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e16906125bd565b8015610e635780601f10610e3857610100808354040283529160200191610e63565b820191906000526020600020905b815481529060010190602001808311610e4657829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610e8e57610e8e61221e565b6004811115610e9f57610e9f61221e565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a09091015292915050565b610ef76112e8565b6002805460a08501819052308552600060e0860181905260018201835591909152835160099091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace810180546001600160a01b039384166001600160a01b031990911617815560208087015180517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf850180549383015160ff16600160a01b026001600160a81b031990941691909616179190911784556040810151879492939192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00190610fe890826126ad565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117815591810151909190600484019061103e90826126ad565b505050606082015160058201805460ff191660018360048111156110645761106461221e565b02179055506080820151600682015560a0820151600782015560c08201516008909101805460e08401516101009485015161ffff1990921693151561ff001916939093179215159093029190911762010000600160b01b031916620100006001600160a01b039093169290920291909117905581156110ed576020830151516110ed9083611101565b80156110fc576110fc83611648565b505050565b6111096112e8565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af115801561115c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111809190612642565b506001600160a01b03821660009081526003602052604081208054839290610c8890849061276d565b6111b16112e8565b6001600160a01b0382166000908152600460205260409020548110156112135760405162461bcd60e51b815260206004820152601760248201527642616c616e6365206f6620746f6b656e20746f206c6f7760481b60448201526064016103ac565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015611260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112849190612642565b506001600160a01b03821660009081526004602052604081208054839290610c8890849061262f565b6112b56112e8565b6001600160a01b0381166112df57604051631e4fbdf760e01b8152600060048201526024016103ac565b6103be816117a7565b6000546001600160a01b031633146106e65760405163118cdaa760e01b81523360048201526024016103ac565b60006002828154811061132a5761132a6125a7565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191611397906125bd565b80601f01602080910402602001604051908101604052809291908181526020018280546113c3906125bd565b80156114105780601f106113e557610100808354040283529160200191611410565b820191906000526020600020905b8154815290600101906020018083116113f357829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190611468906125bd565b80601f0160208091040260200160405190810160405280929190818152602001828054611494906125bd565b80156114e15780601f106114b6576101008083540402835291602001916114e1565b820191906000526020600020905b8154815290600101906020018083116114c457829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561150c5761150c61221e565b600481111561151d5761151d61221e565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a09093019290925282015190820151919250611588916117f7565b602080830151516001600160a01b0316600090815260069091526040812080549091906115b690849061262f565b90915550506008546040516357b6e05b60e01b81526001600160a01b03909116906357b6e05b906115eb908490600401612256565b6020604051808303816000875af115801561160a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162e9190612642565b50600060028260a0015181548110610a2d57610a2d6125a7565b61165a816080015182606001516117f7565b602080830151516001600160a01b03166000908152600690915260408120805490919061168890849061276d565b909155505060085460405163fd4549dd60e01b81526001600160a01b039091169063fd4549dd906116bd908490600401612256565b6020604051808303816000875af11580156116dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117009190612642565b50600160028260a001518154811061171a5761171a6125a7565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600a6000828254611755919061276d565b909155505060a0810151600854604080519283526001600160a01b0390911660208301527feb939e0c9964841ca5615fd16a7ee72077352eaeae62d788a647076326a41abd910160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006007600083600481111561180f5761180f61221e565b60048111156118205761182061221e565b8152602001908152602001600020548361183a919061260d565b9392505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091829186169063dd62ed3e90604401602060405180830381865afa158015611892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b69190612780565b90921115949350505050565b604051636eb1769f60e11b81523060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152839160009183169063dd62ed3e90604401602060405180830381865afa158015611933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119579190612780565b905082811015611a315760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820185905283169063095ea7b3906044016020604051808303816000875af11580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f49190612642565b611a315760405162461bcd60e51b815260206004820152600e60248201526d105c1c1c9bdd994819985a5b195960921b60448201526064016103ac565b50505050565b60408051610100810182526001600160a01b03858116825284166020820152600854600160a01b900462ffffff1691810191909152306060820152600090819060808101611a874261012c61276d565b8152602080820186905260006040808401829052606093840191909152805163414bf38960e01b815284516001600160a01b03908116600483015292850151831660248201529084015162ffffff16604482015291830151811660648301526080830151608483015260a083015160a483015260c083015160c483015260e0830151811660e48301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af1158015611b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b859190612780565b95945050505050565b600060028381548110611ba357611ba36125a7565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191611c10906125bd565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3c906125bd565b8015611c895780601f10611c5e57610100808354040283529160200191611c89565b820191906000526020600020905b815481529060010190602001808311611c6c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190611ce1906125bd565b80601f0160208091040260200160405190810160405280929190818152602001828054611d0d906125bd565b8015611d5a5780601f10611d2f57610100808354040283529160200191611d5a565b820191906000526020600020905b815481529060010190602001808311611d3d57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115611d8557611d8561221e565b6004811115611d9657611d9661221e565b81526006820154602080830191909152600783015460408084019190915260089093015460ff8082161515606085015261010082041615156080808501919091526001600160a01b0362010000909204821660a09094019390935284820151518585015151938601519181166000908152600390935293822054949550929391929091829182911015611e625760405162461bcd60e51b8152602060048201526014602482015273426173652042616c616e636520746f6f206c6f7760601b60448201526064016103ac565b61ffff871615611e8b57611e7f8660200151876080015189611eec565b9250611e8b8386611f40565b828660800151611e9b919061262f565b9150611ea785836118c2565b611eb2858584611a37565b905080887fe4a7d2b149c52fdbb0a7ac58b4eac23900957e07caa30b4b1d0192223a1f740f60405160405180910390a35050505050505050565b60008060028560200151611f009190612799565b611f0b90600a612896565b611f199061ffff85166128a5565b90508460200151600a611f2c9190612896565b611f3682866128a5565b611b85919061260d565b60085460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529082169063a9059cbb906044016020604051808303816000875af1158015611f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb79190612642565b610b805760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b60448201526064016103ac565b60405180610120016040528060006001600160a01b03168152602001612045604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b6000602082840312156120a957600080fd5b5035919050565b80356001600160a01b03811681146120c757600080fd5b919050565b6000602082840312156120de57600080fd5b61183a826120b0565b6000806000606084860312156120fc57600080fd5b612105846120b0565b9250612113602085016120b0565b9150604084013590509250925092565b8035600581106120c757600080fd5b60006020828403121561214457600080fd5b61183a82612123565b6000806040838503121561216057600080fd5b82359150602083013561ffff8116811461217957600080fd5b809150509250929050565b6000806040838503121561219757600080fd5b6121a0836120b0565b946020939093013593505050565b60018060a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b818110156121fc578281018401518782016080015283016121e0565b506000608082880101526080601f19601f830116870101935050505092915050565b634e487b7160e01b600052602160045260246000fd5b6005811061225257634e487b7160e01b600052602160045260246000fd5b9052565b602081526122706020820183516001600160a01b03169052565b6000602083015161012080604085015261228e6101408501836121ae565b91506040850151601f198584030160608601526122ab83826121ae565b92505060608501516122c06080860182612234565b50608085015160a085015260a085015160c085015260c08501516122e860e086018215159052565b5060e08501516101006122fe8187018315159052565b909501516001600160a01b031693019290925250919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561235057612350612317565b60405290565b604051610120810167ffffffffffffffff8111828210171561235057612350612317565b604051601f8201601f1916810167ffffffffffffffff811182821017156123a3576123a3612317565b604052919050565b6000606082840312156123bd57600080fd5b6123c561232d565b90506123d0826120b0565b815260208083013560ff811681146123e757600080fd5b82820152604083013567ffffffffffffffff8082111561240657600080fd5b818501915085601f83011261241a57600080fd5b81358181111561242c5761242c612317565b61243e601f8201601f1916850161237a565b9150808252868482850101111561245457600080fd5b808484018584013760008482840101525080604085015250505092915050565b80151581146103be57600080fd5b80356120c781612474565b6000806000606084860312156124a257600080fd5b833567ffffffffffffffff808211156124ba57600080fd5b9085019061012082880312156124cf57600080fd5b6124d7612356565b6124e0836120b0565b81526020830135828111156124f457600080fd5b612500898286016123ab565b60208301525060408301358281111561251857600080fd5b612524898286016123ab565b60408301525061253660608401612123565b60608201526080830135608082015260a083013560a082015261255b60c08401612482565b60c082015261256c60e08401612482565b60e082015261010091506125818284016120b0565b828201528095505050506020840135915061259e60408501612482565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806125d157607f821691505b6020821081036125f157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261262a57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106ce576106ce6125f7565b60006020828403121561265457600080fd5b815161183a81612474565b601f8211156110fc57600081815260208120601f850160051c810160208610156126865750805b601f850160051c820191505b818110156126a557828155600101612692565b505050505050565b815167ffffffffffffffff8111156126c7576126c7612317565b6126db816126d584546125bd565b8461265f565b602080601f83116001811461271057600084156126f85750858301515b600019600386901b1c1916600185901b1785556126a5565b600085815260208120601f198616915b8281101561273f57888601518255948401946001909101908401612720565b508582101561275d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156106ce576106ce6125f7565b60006020828403121561279257600080fd5b5051919050565b60ff82811682821603908111156106ce576106ce6125f7565b600181815b808511156127ed5781600019048211156127d3576127d36125f7565b808516156127e057918102915b93841c93908002906127b7565b509250929050565b600082612804575060016106ce565b81612811575060006106ce565b816001811461282757600281146128315761284d565b60019150506106ce565b60ff841115612842576128426125f7565b50506001821b6106ce565b5060208310610133831016604e8410600b8410161715612870575081810a6106ce565b61287a83836127b2565b806000190482111561288e5761288e6125f7565b029392505050565b600061183a60ff8416836127f5565b80820281158282048414176106ce576106ce6125f756fea2646970667358221220434511f6506613ce0dc57859618f9ab4c06bb599a3908185d4359e2ef4ee005a64736f6c63430008140033";

type DCAAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAAccount__factory extends ContractFactory {
  constructor(...args: DCAAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      executorAddress_,
      swapRouter_,
      overrides || {}
    );
  }
  override deploy(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      executorAddress_,
      swapRouter_,
      overrides || {}
    ) as Promise<
      DCAAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAAccount__factory {
    return super.connect(runner) as DCAAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAAccountInterface {
    return new Interface(_abi) as DCAAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAAccount {
    return new Contract(address, _abi, runner) as unknown as DCAAccount;
  }
}
