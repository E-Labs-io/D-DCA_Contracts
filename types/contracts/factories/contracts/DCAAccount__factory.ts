/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAAccount,
  DCAAccountInterface,
} from "../../contracts/DCAAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "DCAExecutorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountIn_",
        type: "uint256",
      },
    ],
    name: "StrategyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor_",
        type: "address",
      },
    ],
    name: "StrategySubscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "StrategyUnsubscribed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "feeAmount_",
        type: "uint16",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutorDeactivateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetBaseBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenCostPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenRemainingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "GetStrategyData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetTargetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "",
        type: "uint8",
      },
    ],
    name: "IntervalTimings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "newStrategy_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "seedFunds_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "subscribeToExecutor_",
        type: "bool",
      },
    ],
    name: "SetupStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "SubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "TestSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "UnFundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "UnsubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "WithdrawSavings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newExecutorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526008805462ffffff60a01b191661027160a41b1790553480156200002757600080fd5b5060405162002a8838038062002a888339810160408190526200004a91620002ac565b8133806200007357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007e8162000180565b50600180546001600160a01b0319166001600160a01b0392909216919091179055620000aa82620001d0565b6001600160a01b031660805250600760205260147f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df556116807fb39221ace053465ec3453ce2b36430bd138b997ecea25c1043da0c366812b82855612d007fb7c774451310d1be4108bc180d1b52823cb0ee0274a6c0081bcaf94f115fb96d55619d807f3be6fd20d5acfde5b873b48692cd31f4d3c7e8ee8a813af4696af8859e5ca6c65560046000526202a3007fb805995a7ec585a251200611a61d179cfd7fb105e1ab17dc415a7336783786f755620002e4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6008546001600160a01b038083169116036200022f5760405162461bcd60e51b815260206004820152601f60248201527f416c7265616479207573696e67207468697320444341206578656375746f720060448201526064016200006a565b600880546001600160a01b03199081166001600160a01b038416908117909255600180549091168217905560408051918252517f5143bfc9ce9795735e71faebae63e6679d7d1cbc32cd175adf3801580709a2999181900360200190a150565b80516001600160a01b0381168114620002a757600080fd5b919050565b60008060408385031215620002c057600080fd5b620002cb836200028f565b9150620002db602084016200028f565b90509250929050565b60805161277a6200030e60003960008181610ab9015281816118d90152611a34015261277a6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063bff7f69e116100ad578063dbadd4cb11610071578063dbadd4cb1461029b578063df79f1e0146102ae578063e5cb5793146102d7578063ea26752e146102ea578063f2fde38b146102fd57600080fd5b8063bff7f69e1461020c578063c8f62ee414610235578063ca4c8b3114610255578063cc821a6b14610268578063d94871441461027b57600080fd5b80638da5cb5b116100f45780638da5cb5b1461018f5780639665b658146101aa578063a30b1997146101bd578063aa02fa8f146101d0578063b87462fe146101e357600080fd5b80630853ac1c146101315780630a2f52a61461013b5780636f2d41cb1461014e5780636fbac7b514610161578063715018a614610187575b600080fd5b610139610310565b005b610139610149366004611f1f565b61032a565b61013961015c366004611f1f565b6103c1565b61017461016f366004611f54565b6106a0565b6040519081526020015b60405180910390f35b6101396106d4565b6000546040516001600160a01b03909116815260200161017e565b6101396101b8366004611f54565b6106e8565b6101396101cb366004611f1f565b610712565b6101746101de366004611f6f565b610aa9565b6101746101f1366004611f54565b6001600160a01b031660009081526003602052604090205490565b61017461021a366004611f54565b6001600160a01b031660009081526004602052604090205490565b610174610243366004611fba565b60076020526000908152604090205481565b610139610263366004611fd5565b610aff565b61013961027636600461200c565b610b84565b61028e610289366004611f1f565b610c91565b60405161017e91906120de565b6101396102a9366004612315565b610eef565b6101746102bc366004611f54565b6001600160a01b031660009081526006602052604090205490565b6101396102e536600461200c565b611101565b6101396102f836600461200c565b6111a9565b61013961030b366004611f54565b6112ad565b6103186112e8565b600180546001600160a01b0319169055565b6103326112e8565b600281815481106103455761034561242f565b906000526020600020906009020160080160019054906101000a900460ff166103b55760405162461bcd60e51b815260206004820181905260248201527f537472617465677920697320616c726561647920556e7375627363726962656460448201526064015b60405180910390fd5b6103be81611315565b50565b6103c96112e8565b600281815481106103dc576103dc61242f565b906000526020600020906009020160080160019054906101000a900460ff16156104485760405162461bcd60e51b815260206004820152601e60248201527f537472617465677920697320616c72656164792053756273637269626564000060448201526064016103ac565b6103be6002828154811061045e5761045e61242f565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916104cb90612445565b80601f01602080910402602001604051908101604052809291908181526020018280546104f790612445565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061059c90612445565b80601f01602080910402602001604051908101604052809291908181526020018280546105c890612445565b80156106155780601f106105ea57610100808354040283529160200191610615565b820191906000526020600020905b8154815290600101906020018083116105f857829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610640576106406120a6565b6004811115610651576106516120a6565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a090910152611648565b6001600160a01b03811660009081526006602090815260408083205460039092528220546106ce9190612495565b92915050565b6106dc6112e8565b6106e660006117a7565b565b6106f06112e8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461076c5760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f72000000000060448201526064016103ac565b6000600282815481106107815761078161242f565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916107ee90612445565b80601f016020809104026020016040519081016040528092919081815260200182805461081a90612445565b80156108675780601f1061083c57610100808354040283529160200191610867565b820191906000526020600020905b81548152906001019060200180831161084a57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906108bf90612445565b80601f01602080910402602001604051908101604052809291908181526020018280546108eb90612445565b80156109385780601f1061090d57610100808354040283529160200191610938565b820191906000526020600020905b81548152906001019060200180831161091b57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610963576109636120a6565b6004811115610974576109746120a6565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a090930192909252820151908201519192506109df916117f7565b602080830151516001600160a01b031660009081526006909152604081208054909190610a0d9084906124b7565b92505081905550600060028260a0015181548110610a2d57610a2d61242f565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600a6000828254610a6891906124b7565b909155505060a08101516040519081527fb7f1dfe2f6ac6dcd488a08b928272e146948d54526bda95825333be1739e84309060200160405180910390a15050565b6000610ab36112e8565b610ade847f000000000000000000000000000000000000000000000000000000000000000084611841565b610aec57610aec84836118c2565b610af7848484611956565b949350505050565b60028281548110610b1257610b1261242f565b906000526020600020906009020160080160019054906101000a900460ff16610b765760405162461bcd60e51b81526020600482015260166024820152755374726174656779206973206e6f742061637469766560501b60448201526064016103ac565b610b808282611aad565b5050565b610b8c6112e8565b6001600160a01b038216600090815260036020526040902054811015610bee5760405162461bcd60e51b815260206004820152601760248201527642616c616e6365206f6620746f6b656e20746f206c6f7760481b60448201526064016103ac565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f91906124ca565b506001600160a01b03821660009081526003602052604081208054839290610c889084906124b7565b90915550505050565b610c99611e81565b60028281548110610cac57610cac61242f565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610d1990612445565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4590612445565b8015610d925780601f10610d6757610100808354040283529160200191610d92565b820191906000526020600020905b815481529060010190602001808311610d7557829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610dea90612445565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1690612445565b8015610e635780601f10610e3857610100808354040283529160200191610e63565b820191906000526020600020905b815481529060010190602001808311610e4657829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610e8e57610e8e6120a6565b6004811115610e9f57610e9f6120a6565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a09091015292915050565b610ef76112e8565b6002805460a08501819052308552600060e0860181905260018201835591909152835160099091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace810180546001600160a01b039384166001600160a01b031990911617815560208087015180517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf850180549383015160ff16600160a01b026001600160a81b031990941691909616179190911784556040810151879492939192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00190610fe89082612535565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117815591810151909190600484019061103e9082612535565b505050606082015160058201805460ff19166001836004811115611064576110646120a6565b02179055506080820151600682015560a0820151600782015560c08201516008909101805460e08401516101009485015161ffff1990921693151561ff001916939093179215159093029190911762010000600160b01b031916620100006001600160a01b039093169290920291909117905581156110ed576020830151516110ed9083611101565b80156110fc576110fc83611648565b505050565b6111096112e8565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af115801561115c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118091906124ca565b506001600160a01b03821660009081526003602052604081208054839290610c889084906125f5565b6111b16112e8565b6001600160a01b0382166000908152600460205260409020548110156112135760405162461bcd60e51b815260206004820152601760248201527642616c616e6365206f6620746f6b656e20746f206c6f7760481b60448201526064016103ac565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015611260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128491906124ca565b506001600160a01b03821660009081526004602052604081208054839290610c889084906124b7565b6112b56112e8565b6001600160a01b0381166112df57604051631e4fbdf760e01b8152600060048201526024016103ac565b6103be816117a7565b6000546001600160a01b031633146106e65760405163118cdaa760e01b81523360048201526024016103ac565b60006002828154811061132a5761132a61242f565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff1681870152600283018054959693959387019491939184019161139790612445565b80601f01602080910402602001604051908101604052809291908181526020018280546113c390612445565b80156114105780601f106113e557610100808354040283529160200191611410565b820191906000526020600020905b8154815290600101906020018083116113f357829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061146890612445565b80601f016020809104026020016040519081016040528092919081815260200182805461149490612445565b80156114e15780601f106114b6576101008083540402835291602001916114e1565b820191906000526020600020905b8154815290600101906020018083116114c457829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561150c5761150c6120a6565b600481111561151d5761151d6120a6565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a09093019290925282015190820151919250611588916117f7565b602080830151516001600160a01b0316600090815260069091526040812080549091906115b69084906124b7565b90915550506008546040516357b6e05b60e01b81526001600160a01b03909116906357b6e05b906115eb9084906004016120de565b6020604051808303816000875af115801561160a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162e91906124ca565b50600060028260a0015181548110610a2d57610a2d61242f565b61165a816080015182606001516117f7565b602080830151516001600160a01b0316600090815260069091526040812080549091906116889084906125f5565b909155505060085460405163fd4549dd60e01b81526001600160a01b039091169063fd4549dd906116bd9084906004016120de565b6020604051808303816000875af11580156116dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170091906124ca565b50600160028260a001518154811061171a5761171a61242f565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600a600082825461175591906125f5565b909155505060a0810151600854604080519283526001600160a01b0390911660208301527feb939e0c9964841ca5615fd16a7ee72077352eaeae62d788a647076326a41abd910160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006007600083600481111561180f5761180f6120a6565b6004811115611820576118206120a6565b8152602001908152602001600020548361183a9190612495565b9392505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091829186169063dd62ed3e90604401602060405180830381865afa158015611892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b69190612608565b90921115949350505050565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905283169063095ea7b3906044015b6020604051808303816000875af1158015611932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fc91906124ca565b60408051610100810182526001600160a01b03858116825284166020820152600854600160a01b900462ffffff16918101919091523060608201526000908190608081016119a64261012c6125f5565b8152602080820186905260006040808401829052606093840191909152805163414bf38960e01b815284516001600160a01b03908116600483015292850151831660248201529084015162ffffff16604482015291830151811660648301526080830151608483015260a083015160a483015260c083015160c483015260e0830151811660e48301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af1158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa49190612608565b95945050505050565b600060028381548110611ac257611ac261242f565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191611b2f90612445565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5b90612445565b8015611ba85780601f10611b7d57610100808354040283529160200191611ba8565b820191906000526020600020905b815481529060010190602001808311611b8b57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190611c0090612445565b80601f0160208091040260200160405190810160405280929190818152602001828054611c2c90612445565b8015611c795780601f10611c4e57610100808354040283529160200191611c79565b820191906000526020600020905b815481529060010190602001808311611c5c57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115611ca457611ca46120a6565b6004811115611cb557611cb56120a6565b81526006820154602080830191909152600783015460408084019190915260089093015460ff8082161515606085015261010082041615156080808501919091526001600160a01b0362010000909204821660a09094019390935284820151518585015151938601519181166000908152600390935293822054949550929391929091829182911015611d815760405162461bcd60e51b8152602060048201526014602482015273426173652042616c616e636520746f6f206c6f7760601b60448201526064016103ac565b61ffff871615611daa57611d9e8660200151876080015189611df4565b9250611daa8386611e48565b828660800151611dba91906124b7565b915080887fe4a7d2b149c52fdbb0a7ac58b4eac23900957e07caa30b4b1d0192223a1f740f60405160405180910390a35050505050505050565b60008060028560200151611e089190612621565b611e1390600a61271e565b611e219061ffff851661272d565b90508460200151600a611e34919061271e565b611e3e828661272d565b611aa49190612495565b60085460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529082169063a9059cbb90604401611913565b60405180610120016040528060006001600160a01b03168152602001611ecd604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b600060208284031215611f3157600080fd5b5035919050565b80356001600160a01b0381168114611f4f57600080fd5b919050565b600060208284031215611f6657600080fd5b61183a82611f38565b600080600060608486031215611f8457600080fd5b611f8d84611f38565b9250611f9b60208501611f38565b9150604084013590509250925092565b803560058110611f4f57600080fd5b600060208284031215611fcc57600080fd5b61183a82611fab565b60008060408385031215611fe857600080fd5b82359150602083013561ffff8116811461200157600080fd5b809150509250929050565b6000806040838503121561201f57600080fd5b61202883611f38565b946020939093013593505050565b60018060a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b8181101561208457828101840151878201608001528301612068565b506000608082880101526080601f19601f830116870101935050505092915050565b634e487b7160e01b600052602160045260246000fd5b600581106120da57634e487b7160e01b600052602160045260246000fd5b9052565b602081526120f86020820183516001600160a01b03169052565b60006020830151610120806040850152612116610140850183612036565b91506040850151601f198584030160608601526121338382612036565b925050606085015161214860808601826120bc565b50608085015160a085015260a085015160c085015260c085015161217060e086018215159052565b5060e08501516101006121868187018315159052565b909501516001600160a01b031693019290925250919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156121d8576121d861219f565b60405290565b604051610120810167ffffffffffffffff811182821017156121d8576121d861219f565b604051601f8201601f1916810167ffffffffffffffff8111828210171561222b5761222b61219f565b604052919050565b60006060828403121561224557600080fd5b61224d6121b5565b905061225882611f38565b815260208083013560ff8116811461226f57600080fd5b82820152604083013567ffffffffffffffff8082111561228e57600080fd5b818501915085601f8301126122a257600080fd5b8135818111156122b4576122b461219f565b6122c6601f8201601f19168501612202565b915080825286848285010111156122dc57600080fd5b808484018584013760008482840101525080604085015250505092915050565b80151581146103be57600080fd5b8035611f4f816122fc565b60008060006060848603121561232a57600080fd5b833567ffffffffffffffff8082111561234257600080fd5b90850190610120828803121561235757600080fd5b61235f6121de565b61236883611f38565b815260208301358281111561237c57600080fd5b61238889828601612233565b6020830152506040830135828111156123a057600080fd5b6123ac89828601612233565b6040830152506123be60608401611fab565b60608201526080830135608082015260a083013560a08201526123e360c0840161230a565b60c08201526123f460e0840161230a565b60e08201526101009150612409828401611f38565b82820152809550505050602084013591506124266040850161230a565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061245957607f821691505b60208210810361247957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000826124b257634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106ce576106ce61247f565b6000602082840312156124dc57600080fd5b815161183a816122fc565b601f8211156110fc57600081815260208120601f850160051c8101602086101561250e5750805b601f850160051c820191505b8181101561252d5782815560010161251a565b505050505050565b815167ffffffffffffffff81111561254f5761254f61219f565b6125638161255d8454612445565b846124e7565b602080601f83116001811461259857600084156125805750858301515b600019600386901b1c1916600185901b17855561252d565b600085815260208120601f198616915b828110156125c7578886015182559484019460019091019084016125a8565b50858210156125e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156106ce576106ce61247f565b60006020828403121561261a57600080fd5b5051919050565b60ff82811682821603908111156106ce576106ce61247f565b600181815b8085111561267557816000190482111561265b5761265b61247f565b8085161561266857918102915b93841c939080029061263f565b509250929050565b60008261268c575060016106ce565b81612699575060006106ce565b81600181146126af57600281146126b9576126d5565b60019150506106ce565b60ff8411156126ca576126ca61247f565b50506001821b6106ce565b5060208310610133831016604e8410600b84101617156126f8575081810a6106ce565b612702838361263a565b80600019048211156127165761271661247f565b029392505050565b600061183a60ff84168361267d565b80820281158282048414176106ce576106ce61247f56fea2646970667358221220727a5a97317bcfae81e0684d9a1a9604db39610661cf071c1ec63f00ee0168eb64736f6c63430008140033";

type DCAAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAAccount__factory extends ContractFactory {
  constructor(...args: DCAAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      executorAddress_,
      swapRouter_,
      overrides || {}
    );
  }
  override deploy(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      executorAddress_,
      swapRouter_,
      overrides || {}
    ) as Promise<
      DCAAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAAccount__factory {
    return super.connect(runner) as DCAAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAAccountInterface {
    return new Interface(_abi) as DCAAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAAccount {
    return new Contract(address, _abi, runner) as unknown as DCAAccount;
  }
}
