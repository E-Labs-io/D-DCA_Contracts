/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAAccount,
  DCAAccountInterface,
} from "../../contracts/DCAAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "DCAExecutorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor_",
        type: "address",
      },
    ],
    name: "StrategySubscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "StrategyUnsubscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "StratogyExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeAmount_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutorDeactivateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetBaseBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenCostPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenRemainingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "GetStrategyData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    name: "GetTargetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "",
        type: "uint8",
      },
    ],
    name: "IntervalTimings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "newStrategy_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "seedFunds_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "subscribeToExecutor_",
        type: "bool",
      },
    ],
    name: "SetupStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "SubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "UnFundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "UnsubscribeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "WithdrawSavings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newExecutorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526009805462ffffff60a01b191661017760a31b1790553480156200002757600080fd5b50604051620028ec380380620028ec8339810160408190526200004a91620002ac565b8133806200007357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007e8162000180565b50600180546001600160a01b0319166001600160a01b0392909216919091179055620000aa82620001d0565b6001600160a01b031660805250600860205260147f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7556116807fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac55f55612d007f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904155619d807f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264555560046000526202a3007f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624b855620002e4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6009546001600160a01b038083169116036200022f5760405162461bcd60e51b815260206004820152601f60248201527f416c7265616479207573696e67207468697320444341206578656375746f720060448201526064016200006a565b600980546001600160a01b03199081166001600160a01b038416908117909255600180549091168217905560408051918252517f5143bfc9ce9795735e71faebae63e6679d7d1cbc32cd175adf3801580709a2999181900360200190a150565b80516001600160a01b0381168114620002a757600080fd5b919050565b60008060408385031215620002c057600080fd5b620002cb836200028f565b9150620002db602084016200028f565b90509250929050565b6080516125e562000307600039600081816116d30152611d9b01526125e56000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063b87462fe116100ad578063dbadd4cb11610071578063dbadd4cb1461027d578063df79f1e014610290578063e5cb5793146102b9578063ea26752e146102cc578063f2fde38b146102df57600080fd5b8063b87462fe146101d8578063bff7f69e14610201578063c8f62ee41461022a578063cc821a6b1461024a578063d94871441461025d57600080fd5b80636fbac7b5116100f45780636fbac7b514610169578063715018a61461018f5780638da5cb5b146101975780639665b658146101b2578063a30b1997146101c557600080fd5b80630752ad06146101265780630853ac1c1461013b5780630a2f52a6146101435780636f2d41cb14610156575b600080fd5b610139610134366004611eef565b6102f2565b005b6101396103d6565b610139610151366004611f11565b6103f0565b610139610164366004611f11565b610482565b61017c610177366004611f3f565b610761565b6040519081526020015b60405180910390f35b610139610795565b6000546040516001600160a01b039091168152602001610186565b6101396101c0366004611f3f565b6107a9565b6101396101d3366004611f11565b6107d3565b61017c6101e6366004611f3f565b6001600160a01b031660009081526004602052604090205490565b61017c61020f366004611f3f565b6001600160a01b031660009081526005602052604090205490565b61017c610238366004611f7b565b60086020526000908152604090205481565b610139610258366004611f96565b610b6a565b61027061026b366004611f11565b610c77565b604051610186919061206a565b61013961028b3660046122a3565b610ed5565b61017c61029e366004611f3f565b6001600160a01b031660009081526007602052604090205490565b6101396102c7366004611f96565b6110e7565b6101396102da366004611f96565b61118f565b6101396102ed366004611f3f565b611293565b6001546001600160a01b031633146103515760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f72000000000060448201526064015b60405180910390fd5b60028281548110610364576103646123bd565b906000526020600020906009020160080160019054906101000a900460ff166103c85760405162461bcd60e51b81526020600482015260166024820152755374726174656779206973206e6f742061637469766560501b6044820152606401610348565b6103d282826112ce565b5050565b6103de611817565b600180546001600160a01b0319169055565b6103f8611817565b6002818154811061040b5761040b6123bd565b906000526020600020906009020160080160019054906101000a900460ff166104765760405162461bcd60e51b815260206004820181905260248201527f537472617465677920697320616c726561647920556e737562736372696265646044820152606401610348565b61047f81611844565b50565b61048a611817565b6002818154811061049d5761049d6123bd565b906000526020600020906009020160080160019054906101000a900460ff16156105095760405162461bcd60e51b815260206004820152601e60248201527f537472617465677920697320616c7265616479205375627363726962656400006044820152606401610348565b61047f6002828154811061051f5761051f6123bd565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff1681870152600283018054959693959387019491939184019161058c906123d3565b80601f01602080910402602001604051908101604052809291908181526020018280546105b8906123d3565b80156106055780601f106105da57610100808354040283529160200191610605565b820191906000526020600020905b8154815290600101906020018083116105e857829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061065d906123d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610689906123d3565b80156106d65780601f106106ab576101008083540402835291602001916106d6565b820191906000526020600020905b8154815290600101906020018083116106b957829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561070157610701612032565b600481111561071257610712612032565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a090910152611b77565b6001600160a01b038116600090815260076020908152604080832054600490925282205461078f9190612423565b92915050565b61079d611817565b6107a76000611cd6565b565b6107b1611817565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461082d5760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f7200000000006044820152606401610348565b600060028281548110610842576108426123bd565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916108af906123d3565b80601f01602080910402602001604051908101604052809291908181526020018280546108db906123d3565b80156109285780601f106108fd57610100808354040283529160200191610928565b820191906000526020600020905b81548152906001019060200180831161090b57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610980906123d3565b80601f01602080910402602001604051908101604052809291908181526020018280546109ac906123d3565b80156109f95780601f106109ce576101008083540402835291602001916109f9565b820191906000526020600020905b8154815290600101906020018083116109dc57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610a2457610a24612032565b6004811115610a3557610a35612032565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a09093019290925282015190820151919250610aa091611d26565b602080830151516001600160a01b031660009081526007909152604081208054909190610ace908490612445565b92505081905550600060028260a0015181548110610aee57610aee6123bd565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600b6000828254610b299190612445565b909155505060a08101516040519081527fb7f1dfe2f6ac6dcd488a08b928272e146948d54526bda95825333be1739e84309060200160405180910390a15050565b610b72611817565b6001600160a01b038216600090815260046020526040902054811015610bd45760405162461bcd60e51b815260206004820152601760248201527642616c616e6365206f6620746f6b656e20746f206c6f7760481b6044820152606401610348565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190612458565b506001600160a01b03821660009081526004602052604081208054839290610c6e908490612445565b90915550505050565b610c7f611e51565b60028281548110610c9257610c926123bd565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610cff906123d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2b906123d3565b8015610d785780601f10610d4d57610100808354040283529160200191610d78565b820191906000526020600020905b815481529060010190602001808311610d5b57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610dd0906123d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfc906123d3565b8015610e495780601f10610e1e57610100808354040283529160200191610e49565b820191906000526020600020905b815481529060010190602001808311610e2c57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610e7457610e74612032565b6004811115610e8557610e85612032565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a09091015292915050565b610edd611817565b6002805460a08501819052308552600060e0860181905260018201835591909152835160099091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace810180546001600160a01b039384166001600160a01b031990911617815560208087015180517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf850180549383015160ff16600160a01b026001600160a81b031990941691909616179190911784556040810151879492939192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00190610fce90826124c3565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117815591810151909190600484019061102490826124c3565b505050606082015160058201805460ff1916600183600481111561104a5761104a612032565b02179055506080820151600682015560a0820151600782015560c08201516008909101805460e08401516101009485015161ffff1990921693151561ff001916939093179215159093029190911762010000600160b01b031916620100006001600160a01b039093169290920291909117905581156110d3576020830151516110d390836110e7565b80156110e2576110e283611b77565b505050565b6110ef611817565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015611142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111669190612458565b506001600160a01b03821660009081526004602052604081208054839290610c6e908490612583565b611197611817565b6001600160a01b0382166000908152600560205260409020548110156111f95760405162461bcd60e51b815260206004820152601760248201527642616c616e6365206f6620746f6b656e20746f206c6f7760481b6044820152606401610348565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015611246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126a9190612458565b506001600160a01b03821660009081526005602052604081208054839290610c6e908490612445565b61129b611817565b6001600160a01b0381166112c557604051631e4fbdf760e01b815260006004820152602401610348565b61047f81611cd6565b6000600283815481106112e3576112e36123bd565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191611350906123d3565b80601f016020809104026020016040519081016040528092919081815260200182805461137c906123d3565b80156113c95780601f1061139e576101008083540402835291602001916113c9565b820191906000526020600020905b8154815290600101906020018083116113ac57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190611421906123d3565b80601f016020809104026020016040519081016040528092919081815260200182805461144d906123d3565b801561149a5780601f1061146f5761010080835404028352916020019161149a565b820191906000526020600020905b81548152906001019060200180831161147d57829003601f168201915b505050919092525050508152600582015460209091019060ff1660048111156114c5576114c5612032565b60048111156114d6576114d6612032565b81526006820154602080830191909152600783015460408084019190915260089093015460ff8082161515606085015261010082041615156080808501919091526001600160a01b0362010000909204821660a090940193909352918401518482015151909216600090815260049091529190912054919250111561155a57505050565b600061156f8260200151836080015185611d70565b905060008183608001516115839190612445565b905061159783602001516000015182611d84565b6115a982846020015160000151611e18565b60208301515160408401515160009161165b91846040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091525060408051610100810182526001600160a01b039485168152929093166020830152600954600160a01b900462ffffff169282019290925230606082015242608082015260a0810191909152600060c0820181905260e082015290565b6040805163414bf38960e01b815282516001600160a01b0390811660048301526020840151811660248301529183015162ffffff1660448201526060830151821660648201526080830151608482015260a083015160a482015260c083015160c482015260e0830151821660e48201529192506000917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af115801561171f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117439190612596565b602080870151516001600160a01b0316600090815260059091526040812080549293508392909190611776908490612583565b90915550506080850151604080870151516001600160a01b03166000908152600460205290812080549091906117ad908490612445565b909155505060a08501516000908152600660205260408120429055600a8054600192906117db908490612583565b909155505060a08501516040517fa94088f1fc8fe9c50cd36d44598d4fd52dcc87f6e0cb2bf2a248e57d63375f3390600090a250505050505050565b6000546001600160a01b031633146107a75760405163118cdaa760e01b8152336004820152602401610348565b600060028281548110611859576118596123bd565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916118c6906123d3565b80601f01602080910402602001604051908101604052809291908181526020018280546118f2906123d3565b801561193f5780601f106119145761010080835404028352916020019161193f565b820191906000526020600020905b81548152906001019060200180831161192257829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190611997906123d3565b80601f01602080910402602001604051908101604052809291908181526020018280546119c3906123d3565b8015611a105780601f106119e557610100808354040283529160200191611a10565b820191906000526020600020905b8154815290600101906020018083116119f357829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115611a3b57611a3b612032565b6004811115611a4c57611a4c612032565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a09093019290925282015190820151919250611ab791611d26565b602080830151516001600160a01b031660009081526007909152604081208054909190611ae5908490612445565b90915550506009546040516357b6e05b60e01b81526001600160a01b03909116906357b6e05b90611b1a90849060040161206a565b6020604051808303816000875af1158015611b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5d9190612458565b50600060028260a0015181548110610aee57610aee6123bd565b611b8981608001518260600151611d26565b602080830151516001600160a01b031660009081526007909152604081208054909190611bb7908490612583565b909155505060095460405163fd4549dd60e01b81526001600160a01b039091169063fd4549dd90611bec90849060040161206a565b6020604051808303816000875af1158015611c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2f9190612458565b50600160028260a0015181548110611c4957611c496123bd565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600b6000828254611c849190612583565b909155505060a0810151600954604080519283526001600160a01b0390911660208301527feb939e0c9964841ca5615fd16a7ee72077352eaeae62d788a647076326a41abd910160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060086000836004811115611d3e57611d3e612032565b6004811115611d4f57611d4f612032565b81526020019081526020016000205483611d699190612423565b9392505050565b6000611d7c8284612423565b949350505050565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905283169063095ea7b3906044015b6020604051808303816000875af1158015611df4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e29190612458565b60095460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529082169063a9059cbb90604401611dd5565b60405180610120016040528060006001600160a01b03168152602001611e9d604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b60008060408385031215611f0257600080fd5b50508035926020909101359150565b600060208284031215611f2357600080fd5b5035919050565b6001600160a01b038116811461047f57600080fd5b600060208284031215611f5157600080fd5b8135611d6981611f2a565b8035611f6781611f2a565b919050565b803560058110611f6757600080fd5b600060208284031215611f8d57600080fd5b611d6982611f6c565b60008060408385031215611fa957600080fd5b8235611fb481611f2a565b946020939093013593505050565b60018060a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b8181101561201057828101840151878201608001528301611ff4565b506000608082880101526080601f19601f830116870101935050505092915050565b634e487b7160e01b600052602160045260246000fd5b6005811061206657634e487b7160e01b600052602160045260246000fd5b9052565b602081526120846020820183516001600160a01b03169052565b600060208301516101208060408501526120a2610140850183611fc2565b91506040850151601f198584030160608601526120bf8382611fc2565b92505060608501516120d46080860182612048565b50608085015160a085015260a085015160c085015260c08501516120fc60e086018215159052565b5060e08501516101006121128187018315159052565b909501516001600160a01b031693019290925250919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156121645761216461212b565b60405290565b604051610120810167ffffffffffffffff811182821017156121645761216461212b565b604051601f8201601f1916810167ffffffffffffffff811182821017156121b7576121b761212b565b604052919050565b6000606082840312156121d157600080fd5b6121d9612141565b905081356121e681611f2a565b815260208281013560ff811681146121fd57600080fd5b82820152604083013567ffffffffffffffff8082111561221c57600080fd5b818501915085601f83011261223057600080fd5b8135818111156122425761224261212b565b612254601f8201601f1916850161218e565b9150808252868482850101111561226a57600080fd5b808484018584013760008482840101525080604085015250505092915050565b801515811461047f57600080fd5b8035611f678161228a565b6000806000606084860312156122b857600080fd5b833567ffffffffffffffff808211156122d057600080fd5b9085019061012082880312156122e557600080fd5b6122ed61216a565b6122f683611f5c565b815260208301358281111561230a57600080fd5b612316898286016121bf565b60208301525060408301358281111561232e57600080fd5b61233a898286016121bf565b60408301525061234c60608401611f6c565b60608201526080830135608082015260a083013560a082015261237160c08401612298565b60c082015261238260e08401612298565b60e08201526101009150612397828401611f5c565b82820152809550505050602084013591506123b460408501612298565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806123e757607f821691505b60208210810361240757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261244057634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561078f5761078f61240d565b60006020828403121561246a57600080fd5b8151611d698161228a565b601f8211156110e257600081815260208120601f850160051c8101602086101561249c5750805b601f850160051c820191505b818110156124bb578281556001016124a8565b505050505050565b815167ffffffffffffffff8111156124dd576124dd61212b565b6124f1816124eb84546123d3565b84612475565b602080601f831160018114612526576000841561250e5750858301515b600019600386901b1c1916600185901b1785556124bb565b600085815260208120601f198616915b8281101561255557888601518255948401946001909101908401612536565b50858210156125735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561078f5761078f61240d565b6000602082840312156125a857600080fd5b505191905056fea264697066735822122026e00b1bee5cf822e31a1ac785c3ca564eaace9765d1b79447bab9aeacf6043664736f6c63430008140033";

type DCAAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAAccount__factory extends ContractFactory {
  constructor(...args: DCAAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      executorAddress_,
      swapRouter_,
      overrides || {}
    );
  }
  override deploy(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      executorAddress_,
      swapRouter_,
      overrides || {}
    ) as Promise<
      DCAAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAAccount__factory {
    return super.connect(runner) as DCAAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAAccountInterface {
    return new Interface(_abi) as DCAAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAAccount {
    return new Contract(address, _abi, runner) as unknown as DCAAccount;
  }
}
