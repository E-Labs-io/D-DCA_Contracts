/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAAccount,
  DCAAccountInterface,
} from "../../contracts/DCAAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "DCAExecutorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor_",
        type: "address",
      },
    ],
    name: "StrategySubscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "StrategyUnsubscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "StratogyExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeAmount_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutorDeactivateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FundAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenCostPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "baseToken_",
        type: "address",
      },
    ],
    name: "GetBaseTokenRemainingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "",
        type: "uint8",
      },
    ],
    name: "IntervalTimings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "newStrategy_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "seedFunds_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "subscribeToExecutor_",
        type: "bool",
      },
    ],
    name: "SetupStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "SubscribeStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "UnsubscribeStrategy",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526009805462ffffff60a01b191661017760a31b1790553480156200002757600080fd5b50604051620022ae380380620022ae8339810160408190526200004a91620002ac565b8133806200007357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007e8162000180565b50600180546001600160a01b0319166001600160a01b0392909216919091179055620000aa82620001d0565b6001600160a01b031660805250600860205260147f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7556116807fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac55f55612d007f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904155619d807f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264555560046000526202a3007f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624b855620002e4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6009546001600160a01b038083169116036200022f5760405162461bcd60e51b815260206004820152601f60248201527f416c7265616479207573696e67207468697320444341206578656375746f720060448201526064016200006a565b600980546001600160a01b03199081166001600160a01b038416908117909255600180549091168217905560408051918252517f5143bfc9ce9795735e71faebae63e6679d7d1cbc32cd175adf3801580709a2999181900360200190a150565b80516001600160a01b0381168114620002a757600080fd5b919050565b60008060408385031215620002c057600080fd5b620002cb836200028f565b9150620002db602084016200028f565b90509250929050565b608051611fa7620003076000396000818161116101526118000152611fa76000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063dbadd4cb11610066578063dbadd4cb146101a3578063df79f1e0146101b6578063e5cb5793146101df578063f2fde38b146101f257600080fd5b80638da5cb5b14610155578063a30b199714610170578063c8f62ee41461018357600080fd5b80630752ad06146100d45780630853ac1c146100e95780630a2f52a6146100f15780636f2d41cb146101195780636fbac7b51461012c578063715018a61461014d575b600080fd5b6100e76100e23660046118b6565b610205565b005b6100e76102ea565b6101046100ff3660046118d8565b610304565b60405190151581526020015b60405180910390f35b6101046101273660046118d8565b61039a565b61013f61013a366004611906565b61067b565b604051908152602001610110565b6100e76106af565b6000546040516001600160a01b039091168152602001610110565b6100e761017e3660046118d8565b6106c3565b61013f610191366004611932565b60086020526000908152604090205481565b6100e76101b1366004611ad0565b610a5a565b61013f6101c4366004611906565b6001600160a01b031660009081526007602052604090205490565b6100e76101ed366004611bea565b610c67565b6100e7610200366004611906565b610d18565b6001546001600160a01b031633146102645760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f72000000000060448201526064015b60405180910390fd5b6002828154811061027757610277611c16565b906000526020600020906009020160080160019054906101000a900460ff166102db5760405162461bcd60e51b81526020600482015260166024820152755374726174656779206973206e6f742061637469766560501b604482015260640161025b565b6102e58282610d56565b505050565b6102f261127c565b600180546001600160a01b0319169055565b600061030e61127c565b6002828154811061032157610321611c16565b906000526020600020906009020160080160019054906101000a900460ff1661038c5760405162461bcd60e51b815260206004820181905260248201527f537472617465677920697320616c726561647920556e73756273637269626564604482015260640161025b565b610395826112a9565b919050565b60006103a461127c565b600282815481106103b7576103b7611c16565b906000526020600020906009020160080160019054906101000a900460ff16156104235760405162461bcd60e51b815260206004820152601e60248201527f537472617465677920697320616c726561647920537562736372696265640000604482015260640161025b565b6103956002838154811061043957610439611c16565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916104a690611c2c565b80601f01602080910402602001604051908101604052809291908181526020018280546104d290611c2c565b801561051f5780601f106104f45761010080835404028352916020019161051f565b820191906000526020600020905b81548152906001019060200180831161050257829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061057790611c2c565b80601f01602080910402602001604051908101604052809291908181526020018280546105a390611c2c565b80156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561061b5761061b611c66565b600481111561062c5761062c611c66565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a0909101526115dc565b6001600160a01b03811660009081526007602090815260408083205460049092528220546106a99190611c92565b92915050565b6106b761127c565b6106c1600061173b565b565b6001546001600160a01b0316331461071d5760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f720000000000604482015260640161025b565b60006002828154811061073257610732611c16565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff1681870152600283018054959693959387019491939184019161079f90611c2c565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611c2c565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061087090611c2c565b80601f016020809104026020016040519081016040528092919081815260200182805461089c90611c2c565b80156108e95780601f106108be576101008083540402835291602001916108e9565b820191906000526020600020905b8154815290600101906020018083116108cc57829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561091457610914611c66565b600481111561092557610925611c66565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a090930192909252820151908201519192506109909161178b565b602080830151516001600160a01b0316600090815260079091526040812080549091906109be908490611cb4565b92505081905550600060028260a00151815481106109de576109de611c16565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600b6000828254610a199190611cb4565b909155505060a08101516040519081527fb7f1dfe2f6ac6dcd488a08b928272e146948d54526bda95825333be1739e84309060200160405180910390a15050565b610a6261127c565b6002805460a08501819052308552600060e0860181905260018201835591909152835160099091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace810180546001600160a01b039384166001600160a01b031990911617815560208087015180517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf850180549383015160ff16600160a01b026001600160a81b031990941691909616179190911784556040810151879492939192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad00190610b539082611d15565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b0390931692909217919091178155918101519091906004840190610ba99082611d15565b505050606082015160058201805460ff19166001836004811115610bcf57610bcf611c66565b02179055506080820151600682015560a0820151600782015560c08201516008909101805460e08401516101009485015161ffff1990921693151561ff001916939093179215159093029190911762010000600160b01b031916620100006001600160a01b03909316929092029190911790558115610c5857602083015151610c589083610c67565b80156102e5576102e5836115dc565b610c6f61127c565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce69190611dd5565b506001600160a01b03821660009081526004602052604081208054839290610d0f908490611df2565b90915550505050565b610d2061127c565b6001600160a01b038116610d4a57604051631e4fbdf760e01b81526000600482015260240161025b565b610d538161173b565b50565b60008060028481548110610d6c57610d6c611c16565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610dd990611c2c565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0590611c2c565b8015610e525780601f10610e2757610100808354040283529160200191610e52565b820191906000526020600020905b815481529060010190602001808311610e3557829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610eaa90611c2c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed690611c2c565b8015610f235780601f10610ef857610100808354040283529160200191610f23565b820191906000526020600020905b815481529060010190602001808311610f0657829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610f4e57610f4e611c66565b6004811115610f5f57610f5f611c66565b81526006820154602080830191909152600783015460408084019190915260089093015460ff8082161515606085015261010082041615156080808501919091526001600160a01b0362010000909204821660a0909401939093529184015184820151519092166000908152600490915291909120549192501115610fe85760009150506106a9565b6000610ffd82602001518360800151866117d5565b905060008183608001516110119190611cb4565b9050611025836020015160000151826117e9565b6110378284602001516000015161187d565b6020830151516040840151516000916110e991846040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091525060408051610100810182526001600160a01b039485168152929093166020830152600954600160a01b900462ffffff169282019290925230606082015242608082015260a0810191909152600060c0820181905260e082015290565b6040805163414bf38960e01b815282516001600160a01b0390811660048301526020840151811660248301529183015162ffffff1660448201526060830151821660648201526080830151608482015260a083015160a482015260c083015160c482015260e0830151821660e48201529192506000917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf38990610104016020604051808303816000875af11580156111ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d19190611e05565b602080870151516001600160a01b0316600090815260059091526040812080549293508392909190611204908490611df2565b90915550506080850151604080870151516001600160a01b031660009081526004602052908120805490919061123b908490611cb4565b909155505060a08501516000908152600660205260408120429055600a805460019290611269908490611df2565b9091555060019998505050505050505050565b6000546001600160a01b031633146106c15760405163118cdaa760e01b815233600482015260240161025b565b6000600282815481106112be576112be611c16565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff1681870152600283018054959693959387019491939184019161132b90611c2c565b80601f016020809104026020016040519081016040528092919081815260200182805461135790611c2c565b80156113a45780601f10611379576101008083540402835291602001916113a4565b820191906000526020600020905b81548152906001019060200180831161138757829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906113fc90611c2c565b80601f016020809104026020016040519081016040528092919081815260200182805461142890611c2c565b80156114755780601f1061144a57610100808354040283529160200191611475565b820191906000526020600020905b81548152906001019060200180831161145857829003601f168201915b505050919092525050508152600582015460209091019060ff1660048111156114a0576114a0611c66565b60048111156114b1576114b1611c66565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a0909301929092528201519082015191925061151c9161178b565b602080830151516001600160a01b03166000908152600790915260408120805490919061154a908490611cb4565b90915550506009546040516357b6e05b60e01b81526001600160a01b03909116906357b6e05b9061157f908490600401611eb0565b6020604051808303816000875af115801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c29190611dd5565b50600060028260a00151815481106109de576109de611c16565b6115ee8160800151826060015161178b565b602080830151516001600160a01b03166000908152600790915260408120805490919061161c908490611df2565b909155505060095460405163fd4549dd60e01b81526001600160a01b039091169063fd4549dd90611651908490600401611eb0565b6020604051808303816000875af1158015611670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116949190611dd5565b50600160028260a00151815481106116ae576116ae611c16565b906000526020600020906009020160080160016101000a81548160ff0219169083151502179055506001600b60008282546116e99190611df2565b909155505060a0810151600954604080519283526001600160a01b0390911660208301527feb939e0c9964841ca5615fd16a7ee72077352eaeae62d788a647076326a41abd910160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600860008360048111156117a3576117a3611c66565b60048111156117b4576117b4611c66565b815260200190815260200160002054836117ce9190611c92565b9392505050565b60006117e18284611c92565b949350505050565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905283169063095ea7b3906044015b6020604051808303816000875af1158015611859573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190611dd5565b60095460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529082169063a9059cbb9060440161183a565b600080604083850312156118c957600080fd5b50508035926020909101359150565b6000602082840312156118ea57600080fd5b5035919050565b6001600160a01b0381168114610d5357600080fd5b60006020828403121561191857600080fd5b81356117ce816118f1565b80356005811061039557600080fd5b60006020828403121561194457600080fd5b6117ce82611923565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156119865761198661194d565b60405290565b604051610120810167ffffffffffffffff811182821017156119865761198661194d565b604051601f8201601f1916810167ffffffffffffffff811182821017156119d9576119d961194d565b604052919050565b8035610395816118f1565b6000606082840312156119fe57600080fd5b611a06611963565b90508135611a13816118f1565b815260208281013560ff81168114611a2a57600080fd5b82820152604083013567ffffffffffffffff80821115611a4957600080fd5b818501915085601f830112611a5d57600080fd5b813581811115611a6f57611a6f61194d565b611a81601f8201601f191685016119b0565b91508082528684828501011115611a9757600080fd5b808484018584013760008482840101525080604085015250505092915050565b8015158114610d5357600080fd5b803561039581611ab7565b600080600060608486031215611ae557600080fd5b833567ffffffffffffffff80821115611afd57600080fd5b908501906101208288031215611b1257600080fd5b611b1a61198c565b611b23836119e1565b8152602083013582811115611b3757600080fd5b611b43898286016119ec565b602083015250604083013582811115611b5b57600080fd5b611b67898286016119ec565b604083015250611b7960608401611923565b60608201526080830135608082015260a083013560a0820152611b9e60c08401611ac5565b60c0820152611baf60e08401611ac5565b60e08201526101009150611bc48284016119e1565b8282015280955050505060208401359150611be160408501611ac5565b90509250925092565b60008060408385031215611bfd57600080fd5b8235611c08816118f1565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611c4057607f821691505b602082108103611c6057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082611caf57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156106a9576106a9611c7c565b601f8211156102e557600081815260208120601f850160051c81016020861015611cee5750805b601f850160051c820191505b81811015611d0d57828155600101611cfa565b505050505050565b815167ffffffffffffffff811115611d2f57611d2f61194d565b611d4381611d3d8454611c2c565b84611cc7565b602080601f831160018114611d785760008415611d605750858301515b600019600386901b1c1916600185901b178555611d0d565b600085815260208120601f198616915b82811015611da757888601518255948401946001909101908401611d88565b5085821015611dc55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611de757600080fd5b81516117ce81611ab7565b808201808211156106a9576106a9611c7c565b600060208284031215611e1757600080fd5b5051919050565b60018060a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b81811015611e6c57828101840151878201608001528301611e50565b506000608082880101526080601f19601f830116870101935050505092915050565b60058110611eac57634e487b7160e01b600052602160045260246000fd5b9052565b60208152611eca6020820183516001600160a01b03169052565b60006020830151610120806040850152611ee8610140850183611e1e565b91506040850151601f19858403016060860152611f058382611e1e565b9250506060850151611f1a6080860182611e8e565b50608085015160a085015260a085015160c085015260c0850151611f4260e086018215159052565b5060e0850151610100611f588187018315159052565b909501516001600160a01b03169301929092525091905056fea26469706673582212206f3b5ecb66f060d36a82ad774434274780b8e504d40ccccf59debb3cfce692f264736f6c63430008140033";

type DCAAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAAccount__factory extends ContractFactory {
  constructor(...args: DCAAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      executorAddress_,
      swapRouter_,
      overrides || {}
    );
  }
  override deploy(
    executorAddress_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      executorAddress_,
      swapRouter_,
      overrides || {}
    ) as Promise<
      DCAAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAAccount__factory {
    return super.connect(runner) as DCAAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAAccountInterface {
    return new Interface(_abi) as DCAAccountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAAccount {
    return new Contract(address, _abi, runner) as unknown as DCAAccount;
  }
}
