/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DSAExecutor,
  DSAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/DSAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "Active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ForceFeeFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "",
        type: "uint8",
      },
    ],
    name: "IntervalTimings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type DSAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DSAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DSAExecutor__factory extends ContractFactory {
  constructor(...args: DSAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DSAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DSAExecutor__factory {
    return super.connect(runner) as DSAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DSAExecutorInterface {
    return new Interface(_abi) as DSAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DSAExecutor {
    return new Contract(address, _abi, runner) as unknown as DSAExecutor;
  }
}
