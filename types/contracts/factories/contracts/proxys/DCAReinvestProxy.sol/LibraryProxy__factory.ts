/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LibraryProxy,
  LibraryProxyInterface,
} from "../../../../contracts/proxys/DCAReinvestProxy.sol/LibraryProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialImplementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101d93803806101d983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610146806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630900f010146100695780635c60da1b146100b1575b600080546001600160a01b03169036908037600080366000845af43d6000803e808015610062573d6000f35b3d6000fd5b005b6100676100773660046100e0565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546100c4906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000602082840312156100f257600080fd5b81356001600160a01b038116811461010957600080fd5b939250505056fea26469706673582212201b9a9a366a0257afef1476371da75d46d45f36ae3643a7122c4851c409806fd564736f6c63430008140033";

type LibraryProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibraryProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibraryProxy__factory extends ContractFactory {
  constructor(...args: LibraryProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialImplementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_initialImplementation, overrides || {});
  }
  override deploy(
    _initialImplementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_initialImplementation, overrides || {}) as Promise<
      LibraryProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LibraryProxy__factory {
    return super.connect(runner) as LibraryProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibraryProxyInterface {
    return new Interface(_abi) as LibraryProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LibraryProxy {
    return new Contract(address, _abi, runner) as unknown as LibraryProxy;
  }
}
