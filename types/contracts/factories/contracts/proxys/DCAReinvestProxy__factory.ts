/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvestProxy,
  DCAReinvestProxyInterface,
} from "../../../contracts/proxys/DCAReinvestProxy";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "activate_",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "oldReinvestData_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "newReinvestData_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "withdrawFunds_",
        type: "bool",
      },
    ],
    name: "migrateReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b18806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063d53a822f1161005b578063d53a822f146101e4578063f2fde38b146101f7578063f58a59361461020a57600080fd5b80638da5cb5b1461018f578063bcb9236e146101c9578063c9f6d48f146101dc57600080fd5b8063715018a6116100b2578063715018a614610142578063738800b71461014a5780637c4bb0b11461017257600080fd5b80630ca75044146100d957806340438aea14610110578063454f002a1461011a575b600080fd5b604080518082019091526009815268544553542056302e3360b81b60208201525b6040516101079190610758565b60405180910390f35b610118610223565b005b61012d610128366004610925565b61023f565b60408051928352901515602083015201610107565b610118610258565b6100fa60405180604001604052806009815260200168544553542056302e3360b81b81525081565b60005461017f9060ff1681565b6040519015158152602001610107565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610107565b61012d6101d7366004610925565b61026c565b6100fa610279565b6101186101f236600461096a565b6102a6565b610118610205366004610987565b6103f1565b61012d6102183660046109a4565b600080935093915050565b61022b61044d565b6000805460ff19811660ff90911615179055565b60008061024c84846104c1565b915091505b9250929050565b61026061044d565b61026a6000610506565b565b60008061024c848461058f565b60408051602080820183526001825291516102949201610a1c565b60405160208183030381529060405281565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156102f15750825b905060008267ffffffffffffffff16600114801561030e5750303b155b90508115801561031c575080155b15610353576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561038757845468ff00000000000000001916680100000000000000001785555b6000805460ff191687151517905561039e336105ac565b83156103e957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6103f961044d565b6001600160a01b038116610441576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b61044a81610506565b50565b3361047f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461026a576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610438565b6040820151600090819060ff81166104d95750610251565b60001960ff8216016104fe576104f4818587600001516105bd565b9250925050610251565b509250929050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff000000000000000000000000000000000000000081166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080601160ff16846040015160ff161115610251579250929050565b6105b461066e565b61044a816106d5565b60008060006105cb846106dd565b604081810151602083015191517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015260248101899052929350169063a9059cbb906044016020604051808303816000875af115801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190610a53565b949694955050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661026a576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f961066e565b6040805160608101825260008082526020808301829052928201528251909161070c9184018101908401610a70565b92915050565b6000815180845260005b818110156107385760208185018101518683018201520161071c565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061076b6020830184610712565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156107c4576107c4610772565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156107f3576107f3610772565b604052919050565b801515811461044a57600080fd5b8035610814816107fb565b919050565b60ff8116811461044a57600080fd5b803561081481610819565b6001600160a01b038116811461044a57600080fd5b803561081481610833565b60006080828403121561086557600080fd5b61086d6107a1565b9050813567ffffffffffffffff8082111561088757600080fd5b818401915084601f83011261089b57600080fd5b81356020828211156108af576108af610772565b6108c1601f8301601f191682016107ca565b925081835286818386010111156108d757600080fd5b818185018285013760008183850101528285526108f5818701610809565b818601525050505061090960408301610828565b604082015261091a60608301610848565b606082015292915050565b6000806040838503121561093857600080fd5b823567ffffffffffffffff81111561094f57600080fd5b61095b85828601610853565b95602094909401359450505050565b60006020828403121561097c57600080fd5b813561076b816107fb565b60006020828403121561099957600080fd5b813561076b81610833565b6000806000606084860312156109b957600080fd5b833567ffffffffffffffff808211156109d157600080fd5b6109dd87838801610853565b945060208601359150808211156109f357600080fd5b50610a0086828701610853565b9250506040840135610a11816107fb565b809150509250925092565b60008183825b6001811015610a4457815160ff16835260209283019290910190600101610a22565b50505060208201905092915050565b600060208284031215610a6557600080fd5b815161076b816107fb565b600060608284031215610a8257600080fd5b6040516060810181811067ffffffffffffffff82111715610aa557610aa5610772565b6040528251610ab381610819565b81526020830151610ac381610833565b60208201526040830151610ad681610833565b6040820152939250505056fea26469706673582212201ce6c338500a8d68ceaece9f9b5b687ec2b3338414724fb6916ca27572469e7964736f6c63430008140033";

type DCAReinvestProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvestProxy__factory extends ContractFactory {
  constructor(...args: DCAReinvestProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DCAReinvestProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvestProxy__factory {
    return super.connect(runner) as DCAReinvestProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestProxyInterface {
    return new Interface(_abi) as DCAReinvestProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DCAReinvestProxy {
    return new Contract(address, _abi, runner) as unknown as DCAReinvestProxy;
  }
}
