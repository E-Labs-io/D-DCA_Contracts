/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvestProxy,
  DCAReinvestProxyInterface,
} from "../../../contracts/proxys/DCAReinvestProxy";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TestCall",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_CHAIN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "activate_",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "oldReinvestData_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "newReinvestData_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "withdrawFunds_",
        type: "bool",
      },
    ],
    name: "migrateReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611178806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b7f058361161008c578063d53a822f11610066578063d53a822f14610296578063f2fde38b146102a9578063f58a5936146102bc578063fe58a112146102d557600080fd5b8063b7f0583614610214578063bcb9236e1461021c578063c9f6d48f1461022f57600080fd5b8063715018a6116100c8578063715018a61461016c578063738800b7146101745780637c4bb0b1146101b05780638da5cb5b146101cd57600080fd5b80630ca75044146100ef57806340438aea1461013a578063454f002a14610144575b600080fd5b60408051808201909152600981527f544553542056302e34000000000000000000000000000000000000000000000060208201525b6040516101319190610d31565b60405180910390f35b6101426102ec565b005b610157610152366004610f47565b610326565b60408051928352901515602083015201610131565b61014261033f565b6101246040518060400160405280600981526020017f544553542056302e34000000000000000000000000000000000000000000000081525081565b6000546101bd9060ff1681565b6040519015158152602001610131565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610131565b610157610353565b61015761022a366004610f47565b610390565b6101246040517f010000000000000000000000000000000000000000000000000000000000000060208201527f1200000000000000000000000000000000000000000000000000000000000000602182015260220160405160208183030381529060405281565b6101426102a4366004610f8c565b61039d565b6101426102b7366004610fa9565b610549565b6101576102ca366004610fc6565b600080935093915050565b6102de6101a481565b604051908152602001610131565b6102f46105b2565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b6000806103338484610640565b915091505b9250929050565b6103476105b2565b61035160006106df565b565b60405160009081906101a4906001907f7628a2add1c8ac905e8699a1bf09feba86d0d90c0a354ee84653d24909f74a64908490a190939092509050565b6000806103338484610775565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156103e85750825b905060008267ffffffffffffffff1660011480156104055750303b155b905081158015610413575080155b1561044a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000016600117855583156104ab5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168715151790556104e0336107b4565b83156105415784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6105516105b2565b73ffffffffffffffffffffffffffffffffffffffff81166105a6576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6105af816106df565b50565b336105f17f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610351576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161059d565b6040820151600090819061065760ff8216836107c5565b156106625750610338565b61067060ff821660016107c5565b1561068d576106838486600001516107d5565b9250925050610338565b61069b60ff821660116107c5565b6106d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee60ff8216016106d757610683848660000151610891565b509250929050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080601160ff16846040015160ff16111561033857601260ff16846040015160ff1603610338576107ab838560000151610b5a565b91509150610338565b6107bc610c2f565b6105af81610c96565b60ff828116908216145b92915050565b60008060006107e384610c9e565b604081810151602083015191517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316600482015260248101899052929350169063a9059cbb906044016020604051808303816000875af1158015610864573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610888919061103e565b94959350505050565b600080600061089f84610c9e565b60408082015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610939919061105b565b60208301516040517f095ea7b30000000000000000000000000000000000000000000000000000000081527387870bca3f3fd6335c3f4ce8392d69350b4fa4e260048201526024810189905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063095ea7b3906044016020604051808303816000875af11580156109cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f0919061103e565b90508015610b505760208301516040517f617ba03700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101889052306044820152600060648201527387870bca3f3fd6335c3f4ce8392d69350b4fa4e29063617ba03790608401600060405180830381600087803b158015610a8d57600080fd5b505af1158015610aa1573d6000803e3d6000fd5b5050505060408381015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a919061105b565b9050610b468382611074565b9550600086119450505b5050509250929050565b6000806000610b6884610c9e565b60208101516040517f69328dec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018790523060448201529091507387870bca3f3fd6335c3f4ce8392d69350b4fa4e2906369328dec906064016020604051808303816000875af1158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c22919061105b565b9586151595509350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610351576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610551610c2f565b604080516060810182526000808252602080830182905292820152825190916107cf9184018101908401611126565b6000815180845260005b81811015610cf357602081850181015186830182015201610cd7565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610d446020830184610ccd565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610d9d57610d9d610d4b565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610dea57610dea610d4b565b604052919050565b80151581146105af57600080fd5b8035610e0b81610df2565b919050565b60ff811681146105af57600080fd5b8035610e0b81610e10565b73ffffffffffffffffffffffffffffffffffffffff811681146105af57600080fd5b8035610e0b81610e2a565b600060808284031215610e6957600080fd5b610e71610d7a565b9050813567ffffffffffffffff80821115610e8b57600080fd5b818401915084601f830112610e9f57600080fd5b8135602082821115610eb357610eb3610d4b565b610ee3817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610da3565b92508183528681838601011115610ef957600080fd5b81818501828501376000818385010152828552610f17818701610e00565b8186015250505050610f2b60408301610e1f565b6040820152610f3c60608301610e4c565b606082015292915050565b60008060408385031215610f5a57600080fd5b823567ffffffffffffffff811115610f7157600080fd5b610f7d85828601610e57565b95602094909401359450505050565b600060208284031215610f9e57600080fd5b8135610d4481610df2565b600060208284031215610fbb57600080fd5b8135610d4481610e2a565b600080600060608486031215610fdb57600080fd5b833567ffffffffffffffff80821115610ff357600080fd5b610fff87838801610e57565b9450602086013591508082111561101557600080fd5b5061102286828701610e57565b925050604084013561103381610df2565b809150509250925092565b60006020828403121561105057600080fd5b8151610d4481610df2565b60006020828403121561106d57600080fd5b5051919050565b818103818111156107cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000606082840312156110c057600080fd5b6040516060810181811067ffffffffffffffff821117156110e3576110e3610d4b565b806040525080915082516110f681610e10565b8152602083015161110681610e2a565b6020820152604083015161111981610e2a565b6040919091015292915050565b60006060828403121561113857600080fd5b610d4483836110ae56fea26469706673582212202786e23484e91d2bd15381bfd1e3198dfa6359ad4c846d7cb41f7b3b3d762fb664736f6c63430008140033";

type DCAReinvestProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvestProxy__factory extends ContractFactory {
  constructor(...args: DCAReinvestProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DCAReinvestProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvestProxy__factory {
    return super.connect(runner) as DCAReinvestProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestProxyInterface {
    return new Interface(_abi) as DCAReinvestProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DCAReinvestProxy {
    return new Contract(address, _abi, runner) as unknown as DCAReinvestProxy;
  }
}
