/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvestProxy,
  DCAReinvestProxyInterface,
} from "../../../contracts/proxys/DCAReinvestProxy";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "activate_",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "oldReinvestData_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "newReinvestData_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "withdrawFunds_",
        type: "bool",
      },
    ],
    name: "migrateReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a98806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80637c4bb0b111610081578063d53a822f1161005b578063d53a822f146101f9578063f2fde38b1461020c578063f58a59361461021f57600080fd5b80637c4bb0b11461018f5780638da5cb5b146101ac578063bcb9236e146101e657600080fd5b8063454f002a116100b2578063454f002a14610123578063715018a61461014b578063738800b71461015357600080fd5b80630ca75044146100ce57806340438aea14610119575b600080fd5b60408051808201909152601081527f4554485f5345504f4c49412056302e320000000000000000000000000000000060208201525b60405161011091906106f0565b60405180910390f35b610121610238565b005b6101366101313660046108e8565b610254565b60408051928352901515602083015201610110565b61012161026d565b6101036040518060400160405280601081526020017f4554485f5345504f4c49412056302e320000000000000000000000000000000081525081565b60005461019c9060ff1681565b6040519015158152602001610110565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610110565b6101366101f43660046108e8565b610281565b61012161020736600461092d565b61028e565b61012161021a366004610951565b6103d9565b61013661022d36600461096e565b600080935093915050565b610240610435565b6000805460ff19811660ff90911615179055565b60008061026184846104a9565b915091505b9250929050565b610275610435565b61027f60006104ee565b565b6000806102618484610577565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156102d95750825b905060008267ffffffffffffffff1660011480156102f65750303b155b905081158015610304575080155b1561033b576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561036f57845468ff00000000000000001916680100000000000000001785555b6000805460ff191687151517905561038633610594565b83156103d157845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6103e1610435565b6001600160a01b038116610429576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b610432816104ee565b50565b336104677f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461027f576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610420565b6040820151600090819060ff81166104c15750610266565b60001960ff8216016104e6576104dc818587600001516105a5565b9250925050610266565b509250929050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff000000000000000000000000000000000000000081166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080601160ff16846040015160ff161115610266579250929050565b61059c610653565b610432816106ba565b60008060006105b3846106c2565b602081015181516040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015260248101899052929350169063a9059cbb906044016020604051808303816000875af1158015610624573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064891906109e6565b949694955050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff1661027f576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e1610653565b6040805180820190915260008082526020820152818060200190518101906106ea9190610a03565b92915050565b600060208083528351808285015260005b8181101561071d57858101830151858201604001528201610701565b506000604082860101526040601f19601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156107905761079061073e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156107bf576107bf61073e565b604052919050565b801515811461043257600080fd5b80356107e0816107c7565b919050565b803560ff811681146107e057600080fd5b6001600160a01b038116811461043257600080fd5b80356107e0816107f6565b60006080828403121561082857600080fd5b61083061076d565b9050813567ffffffffffffffff8082111561084a57600080fd5b818401915084601f83011261085e57600080fd5b81356020828211156108725761087261073e565b610884601f8301601f19168201610796565b9250818352868183860101111561089a57600080fd5b818185018285013760008183850101528285526108b88187016107d5565b81860152505050506108cc604083016107e5565b60408201526108dd6060830161080b565b606082015292915050565b600080604083850312156108fb57600080fd5b823567ffffffffffffffff81111561091257600080fd5b61091e85828601610816565b95602094909401359450505050565b60006020828403121561093f57600080fd5b813561094a816107c7565b9392505050565b60006020828403121561096357600080fd5b813561094a816107f6565b60008060006060848603121561098357600080fd5b833567ffffffffffffffff8082111561099b57600080fd5b6109a787838801610816565b945060208601359150808211156109bd57600080fd5b506109ca86828701610816565b92505060408401356109db816107c7565b809150509250925092565b6000602082840312156109f857600080fd5b815161094a816107c7565b600060408284031215610a1557600080fd5b6040516040810181811067ffffffffffffffff82111715610a3857610a3861073e565b6040528251610a46816107f6565b81526020830151610a56816107f6565b6020820152939250505056fea2646970667358221220dc6065f17f4ca352ee6b0a85f59f2052623e8b0bfd86a1b2984bf16cd455064164736f6c63430008140033";

type DCAReinvestProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvestProxy__factory extends ContractFactory {
  constructor(...args: DCAReinvestProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DCAReinvestProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvestProxy__factory {
    return super.connect(runner) as DCAReinvestProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestProxyInterface {
    return new Interface(_abi) as DCAReinvestProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DCAReinvestProxy {
    return new Contract(address, _abi, runner) as unknown as DCAReinvestProxy;
  }
}
