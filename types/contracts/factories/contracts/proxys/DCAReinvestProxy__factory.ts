/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvestProxy,
  DCAReinvestProxyInterface,
} from "../../../contracts/proxys/DCAReinvestProxy";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "activate_",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "oldReinvestData_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "newReinvestData_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "withdrawFunds_",
        type: "bool",
      },
    ],
    name: "migrateReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b40806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063d53a822f1161005b578063d53a822f1461020c578063f2fde38b1461021f578063f58a59361461023257600080fd5b80638da5cb5b146101b7578063bcb9236e146101f1578063c9f6d48f1461020457600080fd5b8063715018a6116100b2578063715018a614610156578063738800b71461015e5780637c4bb0b11461019a57600080fd5b80630ca75044146100d957806340438aea14610124578063454f002a1461012e575b600080fd5b60408051808201909152601081527f4554485f5345504f4c49412056302e320000000000000000000000000000000060208201525b60405161011b9190610780565b60405180910390f35b61012c61024b565b005b61014161013c36600461094d565b610267565b6040805192835290151560208301520161011b565b61012c610280565b61010e6040518060400160405280601081526020017f4554485f5345504f4c49412056302e320000000000000000000000000000000081525081565b6000546101a79060ff1681565b604051901515815260200161011b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161011b565b6101416101ff36600461094d565b610294565b61010e6102a1565b61012c61021a366004610992565b6102ce565b61012c61022d3660046109af565b610419565b6101416102403660046109cc565b600080935093915050565b610253610475565b6000805460ff19811660ff90911615179055565b60008061027484846104e9565b915091505b9250929050565b610288610475565b610292600061052e565b565b60008061027484846105b7565b60408051602080820183526001825291516102bc9201610a44565b60405160208183030381529060405281565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156103195750825b905060008267ffffffffffffffff1660011480156103365750303b155b905081158015610344575080155b1561037b576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156103af57845468ff00000000000000001916680100000000000000001785555b6000805460ff19168715151790556103c6336105d4565b831561041157845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b610421610475565b6001600160a01b038116610469576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6104728161052e565b50565b336104a77f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610292576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610460565b6040820151600090819060ff81166105015750610279565b60001960ff8216016105265761051c818587600001516105e5565b9250925050610279565b509250929050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff000000000000000000000000000000000000000081166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080601160ff16846040015160ff161115610279579250929050565b6105dc610696565b610472816106fd565b60008060006105f384610705565b604081810151602083015191517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015260248101899052929350169063a9059cbb906044016020604051808303816000875af1158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190610a7b565b949694955050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610292576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610421610696565b604080516060810182526000808252602080830182905292820152825190916107349184018101908401610a98565b92915050565b6000815180845260005b8181101561076057602081850181015186830182015201610744565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610793602083018461073a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156107ec576107ec61079a565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561081b5761081b61079a565b604052919050565b801515811461047257600080fd5b803561083c81610823565b919050565b60ff8116811461047257600080fd5b803561083c81610841565b6001600160a01b038116811461047257600080fd5b803561083c8161085b565b60006080828403121561088d57600080fd5b6108956107c9565b9050813567ffffffffffffffff808211156108af57600080fd5b818401915084601f8301126108c357600080fd5b81356020828211156108d7576108d761079a565b6108e9601f8301601f191682016107f2565b925081835286818386010111156108ff57600080fd5b8181850182850137600081838501015282855261091d818701610831565b818601525050505061093160408301610850565b604082015261094260608301610870565b606082015292915050565b6000806040838503121561096057600080fd5b823567ffffffffffffffff81111561097757600080fd5b6109838582860161087b565b95602094909401359450505050565b6000602082840312156109a457600080fd5b813561079381610823565b6000602082840312156109c157600080fd5b81356107938161085b565b6000806000606084860312156109e157600080fd5b833567ffffffffffffffff808211156109f957600080fd5b610a058783880161087b565b94506020860135915080821115610a1b57600080fd5b50610a288682870161087b565b9250506040840135610a3981610823565b809150509250925092565b60008183825b6001811015610a6c57815160ff16835260209283019290910190600101610a4a565b50505060208201905092915050565b600060208284031215610a8d57600080fd5b815161079381610823565b600060608284031215610aaa57600080fd5b6040516060810181811067ffffffffffffffff82111715610acd57610acd61079a565b6040528251610adb81610841565b81526020830151610aeb8161085b565b60208201526040830151610afe8161085b565b6040820152939250505056fea2646970667358221220afb208fb51e93c11fce9915fd9b7b1a0c6b5fd83feb2e1d4788722a2ee80368a64736f6c63430008140033";

type DCAReinvestProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvestProxy__factory extends ContractFactory {
  constructor(...args: DCAReinvestProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DCAReinvestProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvestProxy__factory {
    return super.connect(runner) as DCAReinvestProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestProxyInterface {
    return new Interface(_abi) as DCAReinvestProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DCAReinvestProxy {
    return new Contract(address, _abi, runner) as unknown as DCAReinvestProxy;
  }
}
