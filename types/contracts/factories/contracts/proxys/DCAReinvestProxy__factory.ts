/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvestProxy,
  DCAReinvestProxyInterface,
} from "../../../contracts/proxys/DCAReinvestProxy";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TestCall",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "activate_",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "oldReinvestData_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "newReinvestData_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "withdrawFunds_",
        type: "bool",
      },
    ],
    name: "migrateReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvestLogic.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f17806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638da5cb5b1161008c578063c9f6d48f11610066578063c9f6d48f146101ef578063d53a822f14610256578063f2fde38b14610269578063f58a59361461027c57600080fd5b80638da5cb5b1461019a578063b7f05836146101d4578063bcb9236e146101dc57600080fd5b8063715018a6116100bd578063715018a61461014d578063738800b7146101555780637c4bb0b11461017d57600080fd5b80630ca75044146100e457806340438aea1461011b578063454f002a14610125575b600080fd5b604080518082019091526009815268151154d508158c0b8d60ba1b60208201525b6040516101129190610b4b565b60405180910390f35b610123610295565b005b610138610133366004610cff565b6102b1565b60408051928352901515602083015201610112565b6101236102ca565b61010560405180604001604052806009815260200168151154d508158c0b8d60ba1b81525081565b60005461018a9060ff1681565b6040519015158152602001610112565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610112565b6101386102de565b6101386101ea366004610cff565b61031b565b6101056040517f010000000000000000000000000000000000000000000000000000000000000060208201527f1200000000000000000000000000000000000000000000000000000000000000602182015260220160405160208183030381529060405281565b610123610264366004610d44565b610328565b610123610277366004610d61565b610473565b61013861028a366004610d7e565b600080935093915050565b61029d6104cf565b6000805460ff19811660ff90911615179055565b6000806102be8484610543565b915091505b9250929050565b6102d26104cf565b6102dc60006105ae565b565b60405160009081906101a4906001907f7628a2add1c8ac905e8699a1bf09feba86d0d90c0a354ee84653d24909f74a64908490a190939092509050565b6000806102be8484610637565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156103735750825b905060008267ffffffffffffffff1660011480156103905750303b155b90508115801561039e575080155b156103d5576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561040957845468ff00000000000000001916680100000000000000001785555b6000805460ff191687151517905561042033610676565b831561046b57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b61047b6104cf565b6001600160a01b0381166104c3576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6104cc816105ae565b50565b336105017f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102dc576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016104ba565b6040820151600090819060ff811661055b57506102c3565b60001960ff82160161057f57610575848660000151610687565b92509250506102c3565b60101960ff821601156105a65760111960ff8216016105a657610575848660000151610736565b509250929050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff000000000000000000000000000000000000000081166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600080601160ff16846040015160ff1611156102c357601260ff16846040015160ff16036102c35761066d838560000151610999565b915091506102c3565b61067e610a61565b6104cc81610ac8565b600080600061069584610ad0565b604081810151602083015191517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015260248101899052929350169063a9059cbb906044016020604051808303816000875af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190610df6565b94959350505050565b600080600061074484610ad0565b60408082015190516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190610e13565b60208301516040517f095ea7b30000000000000000000000000000000000000000000000000000000081527387870bca3f3fd6335c3f4ce8392d69350b4fa4e26004820152602481018990529192506000916001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561083e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108629190610df6565b9050801561098f5760208301516040517f617ba0370000000000000000000000000000000000000000000000000000000081526001600160a01b03909116600482015260248101889052306044820152600060648201527387870bca3f3fd6335c3f4ce8392d69350b4fa4e29063617ba03790608401600060405180830381600087803b1580156108f257600080fd5b505af1158015610906573d6000803e3d6000fd5b5050505060408381015190516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610e13565b90506109858382610e2c565b9550600086119450505b5050509250929050565b60008060006109a784610ad0565b60208101516040517f69328dec0000000000000000000000000000000000000000000000000000000081526001600160a01b039091166004820152602481018790523060448201529091507387870bca3f3fd6335c3f4ce8392d69350b4fa4e2906369328dec906064016020604051808303816000875af1158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a549190610e13565b9586151595509350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff166102dc576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047b610a61565b60408051606081018252600080825260208083018290529282015282519091610aff9184018101908401610ec5565b92915050565b6000815180845260005b81811015610b2b57602081850181015186830182015201610b0f565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610b5e6020830184610b05565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610b9e57610b9e610b65565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bcd57610bcd610b65565b604052919050565b80151581146104cc57600080fd5b8035610bee81610bd5565b919050565b60ff811681146104cc57600080fd5b8035610bee81610bf3565b6001600160a01b03811681146104cc57600080fd5b8035610bee81610c0d565b600060808284031215610c3f57600080fd5b610c47610b7b565b9050813567ffffffffffffffff80821115610c6157600080fd5b818401915084601f830112610c7557600080fd5b8135602082821115610c8957610c89610b65565b610c9b601f8301601f19168201610ba4565b92508183528681838601011115610cb157600080fd5b81818501828501376000818385010152828552610ccf818701610be3565b8186015250505050610ce360408301610c02565b6040820152610cf460608301610c22565b606082015292915050565b60008060408385031215610d1257600080fd5b823567ffffffffffffffff811115610d2957600080fd5b610d3585828601610c2d565b95602094909401359450505050565b600060208284031215610d5657600080fd5b8135610b5e81610bd5565b600060208284031215610d7357600080fd5b8135610b5e81610c0d565b600080600060608486031215610d9357600080fd5b833567ffffffffffffffff80821115610dab57600080fd5b610db787838801610c2d565b94506020860135915080821115610dcd57600080fd5b50610dda86828701610c2d565b9250506040840135610deb81610bd5565b809150509250925092565b600060208284031215610e0857600080fd5b8151610b5e81610bd5565b600060208284031215610e2557600080fd5b5051919050565b81810381811115610aff57634e487b7160e01b600052601160045260246000fd5b600060608284031215610e5f57600080fd5b6040516060810181811067ffffffffffffffff82111715610e8257610e82610b65565b80604052508091508251610e9581610bf3565b81526020830151610ea581610c0d565b60208201526040830151610eb881610c0d565b6040919091015292915050565b600060608284031215610ed757600080fd5b610b5e8383610e4d56fea26469706673582212209bf153189b202ea38fe9ea9a1bd6bd6a877ba088ab205f1d9a8e94a906c88ff364736f6c63430008140033";

type DCAReinvestProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvestProxy__factory extends ContractFactory {
  constructor(...args: DCAReinvestProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DCAReinvestProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvestProxy__factory {
    return super.connect(runner) as DCAReinvestProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestProxyInterface {
    return new Interface(_abi) as DCAReinvestProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DCAReinvestProxy {
    return new Contract(address, _abi, runner) as unknown as DCAReinvestProxy;
  }
}
