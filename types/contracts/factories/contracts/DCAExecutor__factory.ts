/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IDCADataStructures.Strategy",
        name: "interval_",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccontSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ForceFeeFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "GetIntervalsStrategys",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "GetSpesificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GetTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526009805460ff191660011790553480156200001e57600080fd5b50604051620027483803806200274883398101604081905262000041916200036c565b33806200006957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000074816200028b565b503360009081526001602052604090205460ff16806200009e57506000546001600160a01b031633145b620000ec5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640162000060565b81516006805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600780549183166001600160a01b031992831617905560c084015160088054919093169116179055620001ba81620002db565b62000283600560205260147f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc556116807f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b55612d007f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55619d807fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc05560046000526202a3007f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d555565b50506200045e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60098054610100600160a81b0319166101006001600160a01b03841690810291909117909155604080519182523360208301527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b2299910160405180910390a150565b805161ffff811681146200034f57600080fd5b919050565b80516001600160a01b03811681146200034f57600080fd5b6000808284036101008112156200038257600080fd5b60e08112156200039157600080fd5b5060405160e081016001600160401b0381118282101715620003c357634e487b7160e01b600052604160045260246000fd5b604052620003d1846200033c565b8152620003e1602085016200033c565b6020820152620003f4604085016200033c565b604082015262000407606085016200033c565b60608201526200041a6080850162000354565b60808201526200042d60a0850162000354565b60a08201526200044060c0850162000354565b60c082015291506200045560e0840162000354565b90509250929050565b6122da806200046e6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063715018a61161008c578063c958e43711610066578063c958e437146101af578063f2fde38b146101cf578063f94d12be146101e2578063fd4549dd1461020257600080fd5b8063715018a6146101605780638da5cb5b14610168578063a44e13e01461018357600080fd5b806357b6e05b116100bd57806357b6e05b146101225780635851344214610145578063704802751461014d57600080fd5b80631785f53c146100e45780634162a883146100f957806343771d6d1461010c575b600080fd5b6100f76100f2366004611a16565b610215565b005b6100f7610107366004611a40565b61023e565b600a546040519081526020015b60405180910390f35b610135610130366004611a5b565b610416565b6040519015158152602001610119565b6100f7610442565b6100f761015b366004611a16565b6104b8565b6100f76104e7565b6000546040516001600160a01b039091168152602001610119565b610135610191366004611a16565b6001600160a01b031660009081526001602052604090205460ff1690565b6101c26101bd366004611a97565b6104f9565b6040516101199190611c2e565b6100f76101dd366004611a16565b6107af565b6101f56101f0366004611a40565b610806565b6040516101199190611c41565b610135610210366004611a5b565b610abf565b61021d610b47565b6001600160a01b03166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff168061026657506000546001600160a01b031633145b6102b75760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064015b60405180910390fd5b60095460ff166103095760405162461bcd60e51b815260206004820152600f60248201527f444341206973206f6e207061757365000000000000000000000000000000000060448201526064016102ae565b80426005600083600481111561032157610321611b44565b600481111561033257610332611b44565b8152602001908152602001600020546004600084600481111561035757610357611b44565b600481111561036857610368611b44565b8152602001908152602001600020546103819190611cb9565b106103ce5760405162461bcd60e51b815260206004820152601460248201527f44434120496e74657276616c206e6f74206d657400000000000000000000000060448201526064016102ae565b6103d782610b8d565b8160048111156103e9576103e9611b44565b6040517f722c785bc9118de1273269e2df382c3d675c0a0de27d86796a424652d817e47190600090a25050565b60006001600a600082825461042b9190611cd2565b9091555061043a905082610f1d565b506001919050565b3360009081526001602052604090205460ff168061046a57506000546001600160a01b031633145b6104b65760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102ae565b565b6104c0610b47565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6104ef610b47565b6104b66000610f6b565b610501611913565b6002600084600481111561051757610517611b44565b600481111561052857610528611b44565b8152602080820192909252604090810160009081206001600160a01b03881682526003845282822086835290935220548154811061056857610568611ce5565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916105d590611cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461060190611cfb565b801561064e5780601f106106235761010080835404028352916020019161064e565b820191906000526020600020905b81548152906001019060200180831161063157829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906106a690611cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546106d290611cfb565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561074a5761074a611b44565b600481111561075b5761075b611b44565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a09091015290505b9392505050565b6107b7610b47565b6001600160a01b0381166107fa576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102ae565b61080381610f6b565b50565b60606002600083600481111561081e5761081e611b44565b600481111561082f5761082f611b44565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ab457600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916108d090611cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546108fc90611cfb565b80156109495780601f1061091e57610100808354040283529160200191610949565b820191906000526020600020905b81548152906001019060200180831161092c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906109a190611cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546109cd90611cfb565b8015610a1a5780601f106109ef57610100808354040283529160200191610a1a565b820191906000526020600020905b8154815290600101906020018083116109fd57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610a4557610a45611b44565b6004811115610a5657610a56611b44565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a090910152908252600192909201910161085d565b505050509050919050565b60095460009060ff16610b145760405162461bcd60e51b815260206004820152600f60248201527f444341206973206f6e207061757365000000000000000000000000000000000060448201526064016102ae565b610b25610b2083611eab565b610fc8565b6001600a6000828254610b389190611cb9565b9091555060019150505b919050565b6000546001600160a01b031633146104b6576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102ae565b600060026000836004811115610ba557610ba5611b44565b6004811115610bb657610bb6611b44565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610e3b57600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610c5790611cfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8390611cfb565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610d2890611cfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5490611cfb565b8015610da15780601f10610d7657610100808354040283529160200191610da1565b820191906000526020600020905b815481529060010190602001808311610d8457829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610dcc57610dcc611b44565b6004811115610ddd57610ddd611b44565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a0909101529082526001929092019101610be4565b50505050905060005b8151811015610ec657818181518110610e5f57610e5f611ce5565b602002602001015160e0015115610eb457610eb4828281518110610e8557610e85611ce5565b602002602001015160000151838381518110610ea357610ea3611ce5565b602002602001015160a00151611237565b80610ebe81611f83565b915050610e44565b504260046000846004811115610ede57610ede611b44565b6004811115610eef57610eef611b44565b8152602001908152602001600020819055506001600b6000828254610f149190611cb9565b90915550505050565b610f2e610f2982611eab565b6112c5565b7f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e01816001604051610f6092919061205c565b60405180910390a150565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006002600083606001516004811115610fe457610fe4611b44565b6004811115610ff557610ff5611b44565b81526020810191909152604001600090812054600160e0850152606084015190925060029190600481111561102c5761102c611b44565b600481111561103d5761103d611b44565b81526020808201929092526040908101600090812080546001818101835591835291849020865160099093020180546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff1990911617815586850151805192820180549682015160ff16600160a01b026001600160a81b0319909716939094169290921794909417825591820151859392919060028401906110dd90826121aa565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117815591810151909190600484019061113390826121aa565b505050606082015160058201805460ff1916600183600481111561115957611159611b44565b02179055506080820151600682015560a080830151600783015560c08301516008909201805460e08501516101009586015161ffff1990921694151561ff001916949094179315159094029290921775ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b03948516021790915583519091166000908152600360209081526040808320938601518352929052819020829055517f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e019061122b90849060019061226a565b60405180910390a15050565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff1660248201526001600160a01b0383169063ca4c8b3190604401600060405180830381600087803b1580156112a957600080fd5b505af11580156112bd573d6000803e3d6000fd5b505050505050565b80516001600160a01b0316600090815260036020908152604080832060a0850151845290915281205460608301519091906002908290600481111561130c5761130c611b44565b600481111561131d5761131d611b44565b81526020019081526020016000206001600260008660600151600481111561134757611347611b44565b600481111561135857611358611b44565b81526020810191909152604001600020546113739190611cd2565b8154811061138357611383611ce5565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916113f090611cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461141c90611cfb565b80156114695780601f1061143e57610100808354040283529160200191611469565b820191906000526020600020905b81548152906001019060200180831161144c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906114c190611cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546114ed90611cfb565b801561153a5780601f1061150f5761010080835404028352916020019161153a565b820191906000526020600020905b81548152906001019060200180831161151d57829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561156557611565611b44565b600481111561157657611576611b44565b8152600682015460208201526007820154604082015260089091015460ff8082161515606080850191909152610100830490911615156080840152620100009091046001600160a01b031660a090920191909152840151909150829060019060029060009060048111156115ec576115ec611b44565b60048111156115fd576115fd611b44565b81526020810191909152604001600020546116189190611cd2565b146118085780600260008560600151600481111561163857611638611b44565b600481111561164957611649611b44565b8152602001908152602001600020838154811061166857611668611ce5565b6000918252602091829020835160099092020180546001600160a01b0392831673ffffffffffffffffffffffffffffffffffffffff199091161781558383015180516001830180549583015160ff16600160a01b026001600160a81b0319909616919094161793909317825560408301519092919060028401906116ec90826121aa565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117815591810151909190600484019061174290826121aa565b505050606082015160058201805460ff1916600183600481111561176857611768611b44565b02179055506080820151600682015560a080830151600783015560c08301516008909201805460e08501516101009586015161ffff1990921694151561ff001916949094179315159094029290921775ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b03948516021790915582519091166000908152600360209081526040808320938501518352929052208290555b600260008460600151600481111561182257611822611b44565b600481111561183357611833611b44565b81526020019081526020016000208054806118505761185061228e565b600082815260208120600960001990930192830201805473ffffffffffffffffffffffffffffffffffffffff191681556001810180546001600160a81b0319168155909190816118a360028501826119b1565b50506003820180546001600160a81b031916815560006118c660048501826119b1565b50505060058101805460ff19169055600060068201819055600782015560080180547fffffffffffffffffffff000000000000000000000000000000000000000000001690559055505050565b60405180610120016040528060006001600160a01b0316815260200161195f604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b5080546119bd90611cfb565b6000825580601f106119cd575050565b601f01602090049060005260206000209081019061080391905b808211156119fb57600081556001016119e7565b5090565b80356001600160a01b0381168114610b4257600080fd5b600060208284031215611a2857600080fd5b6107a8826119ff565b803560058110610b4257600080fd5b600060208284031215611a5257600080fd5b6107a882611a31565b600060208284031215611a6d57600080fd5b813567ffffffffffffffff811115611a8457600080fd5b820161012081850312156107a857600080fd5b600080600060608486031215611aac57600080fd5b611ab5846119ff565b9250611ac360208501611a31565b9150604084013590509250925092565b6001600160a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b81811015611b2257828101840151878201608001528301611b06565b506000608082880101526080601f19601f830116870101935050505092915050565b634e487b7160e01b600052602160045260246000fd5b60058110611b7857634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260006101206020830151816020860152611ba582860182611ad3565b91505060408301518482036040860152611bbf8282611ad3565b9150506060830151611bd46060860182611b5a565b506080830151608085015260a083015160a085015260c0830151611bfc60c086018215159052565b5060e0830151611c1060e086018215159052565b50610100928301516001600160a01b03169390920192909252919050565b6020815260006107a86020830184611b7c565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611c9657603f19888603018452611c84858351611b7c565b94509285019290850190600101611c68565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611ccc57611ccc611ca3565b92915050565b81810381811115611ccc57611ccc611ca3565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611d0f57607f821691505b602082108103611d2f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611d6e57611d6e611d35565b60405290565b604051610120810167ffffffffffffffff81118282101715611d6e57611d6e611d35565b604051601f8201601f1916810167ffffffffffffffff81118282101715611dc157611dc1611d35565b604052919050565b803560ff81168114610b4257600080fd5b600060608284031215611dec57600080fd5b611df4611d4b565b9050611dff826119ff565b81526020611e0e818401611dc9565b81830152604083013567ffffffffffffffff80821115611e2d57600080fd5b818501915085601f830112611e4157600080fd5b813581811115611e5357611e53611d35565b611e65601f8201601f19168501611d98565b91508082528684828501011115611e7b57600080fd5b808484018584013760008482840101525080604085015250505092915050565b80358015158114610b4257600080fd5b60006101208236031215611ebe57600080fd5b611ec6611d74565b611ecf836119ff565b8152602083013567ffffffffffffffff80821115611eec57600080fd5b611ef836838701611dda565b60208401526040850135915080821115611f1157600080fd5b50611f1e36828601611dda565b604083015250611f3060608401611a31565b60608201526080830135608082015260a083013560a0820152611f5560c08401611e9b565b60c0820152611f6660e08401611e9b565b60e0820152610100611f798185016119ff565b9082015292915050565b600060018201611f9557611f95611ca3565b5060010190565b60008235605e19833603018112611fb257600080fd5b90910192915050565b6001600160a01b03611fcc826119ff565b16825260ff611fdd60208301611dc9565b16602083015260006040820135601e19833603018112611ffc57600080fd5b820160208101903567ffffffffffffffff81111561201957600080fd5b80360382131561202857600080fd5b60606040860152806060860152808260808701376000608082870101526080601f19601f8301168601019250505092915050565b6040815261207d60408201612070856119ff565b6001600160a01b03169052565b600061208c6020850185611f9c565b6101208060608501526120a3610160850183611fbb565b91506120b26040870187611f9c565b848303603f190160808601526120c88382611fbb565b9250506120d760608701611a31565b6120e460a0860182611b5a565b50608086013560c085015260a086013560e085015261210560c08701611e9b565b6101006121158187018315159052565b61212160e08901611e9b565b8015158785015291506121358189016119ff565b9250505061214f6101408501826001600160a01b03169052565b50831515602084015290506107a8565b601f8211156121a557600081815260208120601f850160051c810160208610156121865750805b601f850160051c820191505b818110156112bd57828155600101612192565b505050565b815167ffffffffffffffff8111156121c4576121c4611d35565b6121d8816121d28454611cfb565b8461215f565b602080601f83116001811461220d57600084156121f55750858301515b600019600386901b1c1916600185901b1785556112bd565b600085815260208120601f198616915b8281101561223c5788860151825594840194600190910190840161221d565b508582101561225a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061227d6040830185611b7c565b905082151560208301529392505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e73af3385a086e43f95ca0b93d45017956dde03044fa6f9bc7d9f070b368bfb764736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
