/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "GetSpesificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "reinvestCallData",
            type: "bytes",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GetTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "reinvestCallData",
            type: "bytes",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "reinvestCallData",
            type: "bytes",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526008805460ff191660011790553480156200001e57600080fd5b5060405162001fcf38038062001fcf833981016040819052620000419162000367565b33806200006957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000074816200028b565b503360009081526001602052604090205460ff16806200009e57506000546001600160a01b031633145b620000ec5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640162000060565b81516005805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600680549183166001600160a01b031992831617905560c084015160078054919093169116179055620001ba81620002db565b620002836004602081905260147f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec556116807fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0555612d007f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a755619d807f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa0556000526202a3007f1a1e6821cde7d0159c0d293177871e09677b4e42307c7db3ba94f8648a5a050f55565b505062000459565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60088054610100600160a81b0319166101006001600160a01b038416908102919091179091556040513381527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b22999060200160405180910390a250565b805161ffff811681146200034a57600080fd5b919050565b80516001600160a01b03811681146200034a57600080fd5b6000808284036101008112156200037d57600080fd5b60e08112156200038c57600080fd5b5060405160e081016001600160401b0381118282101715620003be57634e487b7160e01b600052604160045260246000fd5b604052620003cc8462000337565b8152620003dc6020850162000337565b6020820152620003ef6040850162000337565b6040820152620004026060850162000337565b606082015262000415608085016200034f565b60808201526200042860a085016200034f565b60a08201526200043b60c085016200034f565b60c082015291506200045060e084016200034f565b90509250929050565b611b6680620004696000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638da5cb5b1161008c578063a8c2ec0311610066578063a8c2ec03146101ba578063b661cfcc146101cd578063ede11d37146101e0578063f2fde38b1461020057600080fd5b80638da5cb5b146101505780639ab188781461016b578063a44e13e01461018e57600080fd5b806370480275116100bd5780637048027514610122578063715018a614610135578063892cd8f51461013d57600080fd5b80631785f53c146100e457806343771d6d146100f95780635864badb1461010f575b600080fd5b6100f76100f2366004611302565b610213565b005b6009546040519081526020015b60405180910390f35b6100f761011d366004611424565b61023c565b6100f7610130366004611302565b6105b9565b6100f76105e8565b6100f761014b3660046114e4565b6105fc565b6000546040516001600160a01b039091168152602001610106565b61017e61017936600461150e565b6107d7565b6040519015158152602001610106565b61017e61019c366004611302565b6001600160a01b031660009081526001602052604090205460ff1690565b6100f76101c8366004611302565b6107fe565b61017e6101db36600461150e565b6109a5565b6101f36101ee3660046114e4565b610a1c565b6040516101069190611605565b6100f761020e366004611302565b610cef565b61021b610d46565b6001600160a01b03166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff168061026457506000546001600160a01b031633145b6102b55760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064015b60405180910390fd5b60085460ff166102f95760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b60448201526064016102ac565b600a8251111561034b5760405162461bcd60e51b815260206004820152601d60248201527f4d6178696d756d20313020657865637574696f6e7320616c6c6f77656400000060448201526064016102ac565b80518251146103c25760405162461bcd60e51b815260206004820152602560248201527f4163636f756e7473202620537472617465677920636f756e7420646f6e27742060448201527f6d6174636800000000000000000000000000000000000000000000000000000060648201526084016102ac565b60005b82518110156105b4574260046000600260008786815181106103e9576103e96116d4565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000868681518110610425576104256116d4565b60209081029190910181015182528101919091526040016000206005015460ff166004811115610457576104576115cd565b6004811115610468576104686115cd565b8152602001908152602001600020546003600086858151811061048d5761048d6116d4565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106104c9576104c96116d4565b60200260200101518152602001908152602001600020546104ea9190611700565b10156105a257600061052e848381518110610507576105076116d4565b6020026020010151848481518110610521576105216116d4565b6020026020010151610d8c565b905080156105a057828281518110610548576105486116d4565b6020026020010151848381518110610562576105626116d4565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b505b806105ac81611713565b9150506103c5565b505050565b6105c1610d46565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6105f0610d46565b6105fa6000610e4c565b565b3360009081526001602052604090205460ff168061062457506000546001600160a01b031633145b6106705760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102ac565b60085460ff166106b45760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b60448201526064016102ac565b6001600160a01b038216600090815260026020908152604080832084845290915281206005015483918391429160049160ff16828111156106f7576106f76115cd565b6004811115610708576107086115cd565b815260208082019290925260409081016000908120546001600160a01b03871682526003845282822086835290935220546107439190611700565b106107905760405162461bcd60e51b815260206004820152601460248201527f44434120496e74657276616c206e6f74206d657400000000000000000000000060448201526064016102ac565b61079a8484610d8c565b5060405183906001600160a01b038616907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a350505050565b60098054600091826107e88361172c565b91905055506107f682610ea9565b506001919050565b3360009081526001602052604090205460ff168061082657506000546001600160a01b031633145b6108725760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102ac565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190611743565b905080156105b457600080600061090e84610f54565b6005549295509093509150610939906801000000000000000090046001600160a01b03168487610fd4565b600654610950906001600160a01b03168387610fd4565b600754610967906001600160a01b03168287610fd4565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60085460009060ff166109ec5760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b60448201526064016102ac565b6109fd6109f8836118a2565b611066565b60098054906000610a0d83611713565b9190505550600190505b919050565b610a24611249565b6001600160a01b03838116600090815260026020818152604080842087855282529283902083516101208101855281548616815284516060810186526001830180549788168252600160a01b90970460ff16818501529382018054919692959387019493840191610a9490611992565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac090611992565b8015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610b6590611992565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9190611992565b8015610bde5780601f10610bb357610100808354040283529160200191610bde565b820191906000526020600020905b815481529060010190602001808311610bc157829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610c0957610c096115cd565b6004811115610c1a57610c1a6115cd565b81526006820154602082015260078201546040820152600882015460ff80821615156060840152610100909104161515608082015260098201805460a090920191610c6490611992565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9090611992565b8015610cdd5780601f10610cb257610100808354040283529160200191610cdd565b820191906000526020600020905b815481529060010190602001808311610cc057829003601f168201915b50505050508152505090505b92915050565b610cf7610d46565b6001600160a01b038116610d3a576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102ac565b610d4381610e4c565b50565b6000546001600160a01b031633146105fa576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102ac565b6005546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff1660248201526000906001600160a01b0384169063ca4c8b3190604401600060405180830381600087803b158015610e0157600080fd5b505af1925050508015610e12575060015b610e1e57506000610ce9565b506001600160a01b038216600090815260036020908152604080832084845290915290204290556001610ce9565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600281610ebb6020850185611302565b6001600160a01b031681526020808201929092526040908101600090812060a08601358252835220600801805460ff1916921515929092179091557fad7dd7e2de9f2d3aefaff3e109661881c1bc8601af418584618b855f1741ee7b90610f2490830183611302565b604080516001600160a01b03909216825260a084013560208301526000908201526060015b60405180910390a150565b6005546000908190819061271090610f709061ffff16866119cc565b610f7a91906119e3565b60055490935061271090610f989062010000900461ffff16866119cc565b610fa291906119e3565b60055490925061271090610fc290640100000000900461ffff16866119cc565b610fcc91906119e3565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af115801561103c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110609190611a05565b50505050565b600160c0820181905281516001600160a01b03908116600090815260026020818152604080842060a088015185528252928390208651815490861673ffffffffffffffffffffffffffffffffffffffff1990911617815581870151805196820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff1990941697909616969096179190911784559184015185949293918401906111139082611a70565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b03909316929092179190911781559181015190919060048401906111779082611a70565b505050606082015160058201805460ff1916600183600481111561119d5761119d6115cd565b02179055506080820151600682015560a0820151600782015560c082015160088201805460e085015161ffff1990911692151561ff00191692909217610100921515830217905582015160098201906111f69082611a70565b5050815160a0830151604080516001600160a01b03909316835260208301919091526001908201527fad7dd7e2de9f2d3aefaff3e109661881c1bc8601af418584618b855f1741ee7b9150606001610f49565b60405180610120016040528060006001600160a01b03168152602001611295604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001600015158152602001606081525090565b80356001600160a01b0381168114610a1757600080fd5b60006020828403121561131457600080fd5b61131d826112eb565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561135e5761135e611324565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561138d5761138d611324565b604052919050565b600067ffffffffffffffff8211156113af576113af611324565b5060051b60200190565b600082601f8301126113ca57600080fd5b813560206113df6113da83611395565b611364565b82815260059290921b840181019181810190868411156113fe57600080fd5b8286015b848110156114195780358352918301918301611402565b509695505050505050565b6000806040838503121561143757600080fd5b823567ffffffffffffffff8082111561144f57600080fd5b818501915085601f83011261146357600080fd5b813560206114736113da83611395565b82815260059290921b8401810191818101908984111561149257600080fd5b948201945b838610156114b7576114a8866112eb565b82529482019490820190611497565b965050860135925050808211156114cd57600080fd5b506114da858286016113b9565b9150509250929050565b600080604083850312156114f757600080fd5b611500836112eb565b946020939093013593505050565b60006020828403121561152057600080fd5b813567ffffffffffffffff81111561153757600080fd5b8201610120818503121561131d57600080fd5b6000815180845260005b8181101561157057602081850181015186830182015201611554565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526115c5606085018261154a565b949350505050565b634e487b7160e01b600052602160045260246000fd5b6005811061160157634e487b7160e01b600052602160045260246000fd5b9052565b6020815261161f6020820183516001600160a01b03169052565b6000602083015161012080604085015261163d610140850183611590565b91506040850151601f198086850301606087015261165b8483611590565b93506060870151915061167160808701836115e3565b608087015160a087015260a087015160c087015260c0870151915061169a60e087018315159052565b60e087015191506101006116b18188018415159052565b8701518685039091018387015290506116ca838261154a565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610ce957610ce96116ea565b600060018201611725576117256116ea565b5060010190565b60008161173b5761173b6116ea565b506000190190565b60006020828403121561175557600080fd5b5051919050565b600067ffffffffffffffff83111561177657611776611324565b611789601f8401601f1916602001611364565b905082815283838301111561179d57600080fd5b828260208301376000602084830101529392505050565b6000606082840312156117c657600080fd5b6040516060810167ffffffffffffffff82821081831117156117ea576117ea611324565b816040528293506117fa856112eb565b83526020850135915060ff8216821461181257600080fd5b816020840152604085013591508082111561182c57600080fd5b508301601f8101851361183e57600080fd5b61184d8582356020840161175c565b6040830152505092915050565b803560058110610a1757600080fd5b8015158114610d4357600080fd5b8035610a1781611869565b600082601f83011261189357600080fd5b61131d8383356020850161175c565b600061012082360312156118b557600080fd5b6118bd61133a565b6118c6836112eb565b8152602083013567ffffffffffffffff808211156118e357600080fd5b6118ef368387016117b4565b6020840152604085013591508082111561190857600080fd5b611914368387016117b4565b60408401526119256060860161185a565b60608401526080850135608084015260a085013560a084015261194a60c08601611877565b60c084015261195b60e08601611877565b60e08401526101009150818501358181111561197657600080fd5b61198236828801611882565b8385015250505080915050919050565b600181811c908216806119a657607f821691505b6020821081036119c657634e487b7160e01b600052602260045260246000fd5b50919050565b8082028115828204841417610ce957610ce96116ea565b600082611a0057634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611a1757600080fd5b815161131d81611869565b601f8211156105b457600081815260208120601f850160051c81016020861015611a495750805b601f850160051c820191505b81811015611a6857828155600101611a55565b505050505050565b815167ffffffffffffffff811115611a8a57611a8a611324565b611a9e81611a988454611992565b84611a22565b602080601f831160018114611ad35760008415611abb5750858301515b600019600386901b1c1916600185901b178555611a68565b600085815260208120601f198616915b82811015611b0257888601518255948401946001909101908401611ae3565b5085821015611b205787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220389957ce5b2b23af5bbdd17e0f7c0759c9d3b52fde41157cfe22883e15b7531664736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
