/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526007805460ff191660011790553480156200001e57600080fd5b50604051620026453803806200264583398101604081905262000041916200029e565b33806200006957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007481620001c2565b503360009081526001602052604090205460ff16806200009e57506000546001600160a01b031633145b620000ec5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640162000060565b81516004805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600580549183166001600160a01b031992831617905560c084015160068054919093169116179055620001ba8162000212565b505062000390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60078054610100600160a81b0319166101006001600160a01b038416908102919091179091556040513381527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b22999060200160405180910390a250565b805161ffff811681146200028157600080fd5b919050565b80516001600160a01b03811681146200028157600080fd5b600080828403610100811215620002b457600080fd5b60e0811215620002c357600080fd5b5060405160e081016001600160401b0381118282101715620002f557634e487b7160e01b600052604160045260246000fd5b60405262000303846200026e565b815262000313602085016200026e565b602082015262000326604085016200026e565b604082015262000339606085016200026e565b60608201526200034c6080850162000286565b60808201526200035f60a0850162000286565b60a08201526200037260c0850162000286565b60c082015291506200038760e0840162000286565b90509250929050565b6122a580620003a06000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637048027511610097578063a44e13e011610066578063a44e13e0146101d3578063a8c2ec03146101ff578063f2fde38b14610212578063f3e8ff5b1461022557600080fd5b8063704802751461018a578063715018a61461019d578063892cd8f5146101a55780638da5cb5b146101b857600080fd5b80633adee794116100d35780633adee7941461014a5780633c7c46dc1461015c5780635864badb146101645780635b2fc9581461017757600080fd5b80631785f53c146100fa57806318f1f54d1461010f57806327b827b714610137575b600080fd5b61010d610108366004611832565b610245565b005b61012261011d36600461184d565b61026e565b60405190151581526020015b60405180910390f35b610122610145366004611877565b61029a565b6009545b60405190815260200161012e565b60085461014e565b61010d6101723660046119b3565b610397565b61010d61018536600461184d565b6106ff565b61010d610198366004611832565b610926565b61010d610955565b61010d6101b336600461184d565b610969565b6000546040516001600160a01b03909116815260200161012e565b6101226101e1366004611832565b6001600160a01b031660009081526001602052604090205460ff1690565b61010d61020d366004611832565b610a94565b61010d610220366004611832565b610c3b565b61023861023336600461184d565b610c92565b60405161012e9190611b8d565b61024d611030565b6001600160a01b03166000908152600160205260409020805460ff19169055565b600061027a8383611076565b6008805490600061028a83611c5d565b9190505550600190505b92915050565b60075460009060ff1661030a5760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b60648201526084015b60405180910390fd5b61031b61031683611e82565b6110e1565b6103675760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207374726174656779000000000000000000000000000000006044820152606401610301565b61037861037383611e82565b611166565b6008805490600061038883611f5c565b9190505550600190505b919050565b3360009081526001602052604090205460ff16806103bf57506000546001600160a01b031633145b61040b5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610301565b60075460ff166104735760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b6064820152608401610301565b600a825111156104c55760405162461bcd60e51b815260206004820152601d60248201527f4d6178696d756d20313020657865637574696f6e7320616c6c6f7765640000006044820152606401610301565b805182511461053c5760405162461bcd60e51b815260206004820152602560248201527f4163636f756e7473202620537472617465677920636f756e7420646f6e27742060448201527f6d617463680000000000000000000000000000000000000000000000000000006064820152608401610301565b60005b82518110156106fa57436105c46002600086858151811061056257610562611f75565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061059e5761059e611f75565b60209081029190910181015182528101919091526040016000206005015460ff166113b6565b600360008685815181106105da576105da611f75565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061061657610616611f75565b60200260200101518152602001908152602001600020546106379190611f8b565b10156106e85761067983828151811061065257610652611f75565b602002602001015183838151811061066c5761066c611f75565b60200260200101516114d1565b156106e85781818151811061069057610690611f75565b60200260200101518382815181106106aa576106aa611f75565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b806106f281611f5c565b91505061053f565b505050565b3360009081526001602052604090205460ff168061072757506000546001600160a01b031633145b6107735760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610301565b6001600160a01b038216600090815260026020908152604080832084845290915290206008015460ff1661080f5760405162461bcd60e51b815260206004820152602660248201527f4578656375746f723a204163636f756e7420616c726561647920756e7375627360448201527f63726962656400000000000000000000000000000000000000000000000000006064820152608401610301565b6001600160a01b038216600081815260026020908152604080832085845290915290819020600801805460ff19169055517fa30b19970000000000000000000000000000000000000000000000000000000081526004810183905263a30b199790602401600060405180830381600087803b15801561088d57600080fd5b505af11580156108a1573d6000803e3d6000fd5b5050600880549250905060006108b683611c5d565b90915550506001600160a01b03821660008181526002602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c19161091a9160ff1690611f9e565b60405180910390a45050565b61092e611030565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b61095d611030565b61096760006115a6565b565b3360009081526001602052604090205460ff168061099157506000546001600160a01b031633145b6109dd5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610301565b60075460ff16610a455760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b6064820152608401610301565b6000610a5183836114d1565b905080156106fa5760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b3360009081526001602052604090205460ff1680610abc57506000546001600160a01b031633145b610b085760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610301565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611fac565b905080156106fa576000806000610ba484611603565b6004549295509093509150610bcf906801000000000000000090046001600160a01b03168487611662565b600554610be6906001600160a01b03168387611662565b600654610bfd906001600160a01b03168287611662565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b610c43611030565b6001600160a01b038116610c86576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610301565b610c8f816115a6565b50565b610c9a611745565b6001600160a01b03838116600090815260026020818152604080842087855282529283902083516101008101855281548616815284516060810186526001830180549788168252600160a01b90970460ff16818501529382018054919692959387019493840191610d0a90611fc5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3690611fc5565b8015610d835780601f10610d5857610100808354040283529160200191610d83565b820191906000526020600020905b815481529060010190602001808311610d6657829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610ddb90611fc5565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790611fc5565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b50505091909252505050815260058281015460209092019160ff1690811115610e7f57610e7f611aee565b6005811115610e9057610e90611aee565b815260068201546020808301919091526007830154604080840191909152600884015460ff90811615156060850152815160a08101835260098601805480841615158352610100900490921693810193909352600a850180546080909501949192840191610efd90611fc5565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2990611fc5565b8015610f765780601f10610f4b57610100808354040283529160200191610f76565b820191906000526020600020905b815481529060010190602001808311610f5957829003601f168201915b50505050508152602001600282018054610f8f90611fc5565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbb90611fc5565b80156110085780601f10610fdd57610100808354040283529160200191611008565b820191906000526020600020905b815481529060010190602001808311610feb57829003601f168201915b5050509183525050600391909101546001600160a01b03166020909101529052509392505050565b6000546001600160a01b03163314610967576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610301565b6001600160a01b038216600081815260026020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c19161091a9160ff1690611f9e565b600080600590506000818460600151600581111561110157611101611aee565b855191101591506001600160a01b03161580159061112c57506020840151516001600160a01b031615155b801561114557506040840151516001600160a01b031615155b8015611155575060008460800151115b801561115e5750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260026020818152604080842060a088015185528252928390208651815490861673ffffffffffffffffffffffffffffffffffffffff1990911617815581870151805196820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199094169790961696909617919091178455918401518594929391840190611213908261204d565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b0390931692909217919091178155918101519091906004840190611277908261204d565b50505060608201518160050160006101000a81548160ff021916908360058111156112a4576112a4611aee565b02179055506080820151600682015560a0820151600782015560c082015160088201805491151560ff1990921691909117905560e08201518051600983018054602084015160ff166101000261ff00199315159390931661ffff19909116179190911781556040820151600a84019061131d908261204d565b5060608201516002820190611332908261204d565b50608091909101516003909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392831617905560a084015184516060860151604051600196509294509216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916113ab9190611f9e565b60405180910390a450565b6000808260058111156113cb576113cb611aee565b036113d85750603c919050565b60018260058111156113ec576113ec611aee565b036113fd57610294603c600561210d565b600282600581111561141157611411611aee565b03611420575062015180919050565b600382600581111561143457611434611aee565b0361144357506202a300919050565b600482600581111561145757611457611aee565b03611466575062093a80919050565b600582600581111561147a5761147a611aee565b0361148957506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c00006044820152606401610301565b600480546040517fca4c8b310000000000000000000000000000000000000000000000000000000081529182018390526601000000000000900461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af115801561154c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115709190612124565b9050801561159f576001600160a01b038416600090815260036020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6004546000908190819061161e90859061ffff1660126116f4565b60045490935061163b90859062010000900461ffff1660126116f4565b60045490925061165a908590640100000000900461ffff1660126116f4565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af11580156116ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ee9190612124565b50505050565b600080611702600284612141565b61170d90600a61223e565b61171b9061ffff861661210d565b905061172883600a61223e565b611732828761210d565b61173c919061224d565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611791604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260200160008152602001600081526020016000151581526020016118166040518060a00160405280600015158152602001600060ff168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b80356001600160a01b038116811461039257600080fd5b60006020828403121561184457600080fd5b61159f8261181b565b6000806040838503121561186057600080fd5b6118698361181b565b946020939093013593505050565b60006020828403121561188957600080fd5b813567ffffffffffffffff8111156118a057600080fd5b8201610100818503121561159f57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156118ed576118ed6118b3565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561191c5761191c6118b3565b604052919050565b600067ffffffffffffffff82111561193e5761193e6118b3565b5060051b60200190565b600082601f83011261195957600080fd5b8135602061196e61196983611924565b6118f3565b82815260059290921b8401810191818101908684111561198d57600080fd5b8286015b848110156119a85780358352918301918301611991565b509695505050505050565b600080604083850312156119c657600080fd5b823567ffffffffffffffff808211156119de57600080fd5b818501915085601f8301126119f257600080fd5b81356020611a0261196983611924565b82815260059290921b84018101918181019089841115611a2157600080fd5b948201945b83861015611a4657611a378661181b565b82529482019490820190611a26565b96505086013592505080821115611a5c57600080fd5b50611a6985828601611948565b9150509250929050565b6000815180845260005b81811015611a9957602081850181015186830182015201611a7d565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff6020820151166020830152600060408201516060604085015261115e6060850182611a73565b634e487b7160e01b600052602160045260246000fd5b60068110611b2257634e487b7160e01b600052602160045260246000fd5b9052565b80511515825260ff60208201511660208301526000604082015160a06040850152611b5460a0850182611a73565b905060608301518482036060860152611b6d8282611a73565b9150506001600160a01b0360808401511660808501528091505092915050565b60208152611ba76020820183516001600160a01b03169052565b60006020830151610100806040850152611bc5610120850183611ab9565b91506040850151601f1980868503016060870152611be38483611ab9565b935060608701519150611bf96080870183611b04565b608087015160a087015260a087015160c087015260c08701519150611c2260e087018315159052565b60e0870151915080868503018387015250611c3d8382611b26565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600081611c6c57611c6c611c47565b506000190190565b803560ff8116811461039257600080fd5b600067ffffffffffffffff831115611c9f57611c9f6118b3565b611cb2601f8401601f19166020016118f3565b9050828152838383011115611cc657600080fd5b828260208301376000602084830101529392505050565b600060608284031215611cef57600080fd5b6040516060810167ffffffffffffffff8282108183111715611d1357611d136118b3565b81604052829350611d238561181b565b8352611d3160208601611c74565b60208401526040850135915080821115611d4a57600080fd5b508301601f81018513611d5c57600080fd5b611d6b85823560208401611c85565b6040830152505092915050565b80356006811061039257600080fd5b8015158114610c8f57600080fd5b803561039281611d87565b600082601f830112611db157600080fd5b61159f83833560208501611c85565b600060a08284031215611dd257600080fd5b60405160a0810167ffffffffffffffff8282108183111715611df657611df66118b3565b8160405282935084359150611e0a82611d87565b818352611e1960208601611c74565b60208401526040850135915080821115611e3257600080fd5b611e3e86838701611da0565b60408401526060850135915080821115611e5757600080fd5b50611e6485828601611da0565b606083015250611e766080840161181b565b60808201525092915050565b60006101008236031215611e9557600080fd5b611e9d6118c9565b611ea68361181b565b8152602083013567ffffffffffffffff80821115611ec357600080fd5b611ecf36838701611cdd565b60208401526040850135915080821115611ee857600080fd5b611ef436838701611cdd565b6040840152611f0560608601611d78565b60608401526080850135608084015260a085013560a0840152611f2a60c08601611d95565b60c084015260e0850135915080821115611f4357600080fd5b50611f5036828601611dc0565b60e08301525092915050565b600060018201611f6e57611f6e611c47565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8082018082111561029457610294611c47565b602081016102948284611b04565b600060208284031215611fbe57600080fd5b5051919050565b600181811c90821680611fd957607f821691505b602082108103611ff957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106fa57600081815260208120601f850160051c810160208610156120265750805b601f850160051c820191505b8181101561204557828155600101612032565b505050505050565b815167ffffffffffffffff811115612067576120676118b3565b61207b816120758454611fc5565b84611fff565b602080601f8311600181146120b057600084156120985750858301515b600019600386901b1c1916600185901b178555612045565b600085815260208120601f198616915b828110156120df578886015182559484019460019091019084016120c0565b50858210156120fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761029457610294611c47565b60006020828403121561213657600080fd5b815161159f81611d87565b60ff828116828216039081111561029457610294611c47565b600181815b8085111561219557816000190482111561217b5761217b611c47565b8085161561218857918102915b93841c939080029061215f565b509250929050565b6000826121ac57506001610294565b816121b957506000610294565b81600181146121cf57600281146121d9576121f5565b6001915050610294565b60ff8411156121ea576121ea611c47565b50506001821b610294565b5060208310610133831016604e8410600b8410161715612218575081810a610294565b612222838361215a565b806000190482111561223657612236611c47565b029392505050565b600061159f60ff84168361219d565b60008261226a57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212201db56bb6c11099f5375e1cb8eaf2aa2a6223e9c2cd7c50cd773588ba62f27beb64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
