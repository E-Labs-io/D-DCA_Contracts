/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "GetSpesificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GetTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526008805460ff191660011790553480156200001e57600080fd5b50604051620023a4380380620023a483398101604081905262000041916200038b565b33806200006957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007481620002af565b503360009081526001602052604090205460ff16806200009e57506000546001600160a01b031633145b620000ec5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640162000060565b81516005805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600680549183166001600160a01b031992831617905560c084015160078054919093169116179055620001ba81620002ff565b620002a7600460208190527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5560147fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05556116807f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a755612d007f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa055619d807f1a1e6821cde7d0159c0d293177871e09677b4e42307c7db3ba94f8648a5a050f5560056000526202a3007f04cde762ef08b6b6c5ded8e8c4c0b3f4e5c9ad7342c88fcc93681b4588b73f0555565b50506200047d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60088054610100600160a81b0319166101006001600160a01b038416908102919091179091556040513381527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b22999060200160405180910390a250565b805161ffff811681146200036e57600080fd5b919050565b80516001600160a01b03811681146200036e57600080fd5b600080828403610100811215620003a157600080fd5b60e0811215620003b057600080fd5b5060405160e081016001600160401b0381118282101715620003e257634e487b7160e01b600052604160045260246000fd5b604052620003f0846200035b565b815262000400602085016200035b565b602082015262000413604085016200035b565b604082015262000426606085016200035b565b6060820152620004396080850162000373565b60808201526200044c60a0850162000373565b60a08201526200045f60c0850162000373565b60c082015291506200047460e0840162000373565b90509250929050565b611f17806200048d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a44e13e011610066578063a44e13e0146101bf578063a8c2ec03146101eb578063ede11d37146101fe578063f2fde38b1461021e57600080fd5b8063715018a614610189578063892cd8f5146101915780638da5cb5b146101a457600080fd5b806343771d6d116100c857806343771d6d1461013f5780635864badb146101505780635b2fc95814610163578063704802751461017657600080fd5b80631785f53c146100ef57806318f1f54d146101045780632fbbad491461012c575b600080fd5b6101026100fd36600461161b565b610231565b005b610117610112366004611636565b61025a565b60405190151581526020015b60405180910390f35b61011761013a366004611660565b610284565b600954604051908152602001610123565b61010261015e3660046117bf565b610300565b610102610171366004611636565b61067e565b61010261018436600461161b565b61088f565b6101026108be565b61010261019f366004611636565b6108d2565b6000546040516001600160a01b039091168152602001610123565b6101176101cd36600461161b565b6001600160a01b031660009081526001602052604090205460ff1690565b6101026101f936600461161b565b610abd565b61021161020c366004611636565b610c64565b604051610123919061197d565b61010261022c36600461161b565b610fef565b610239611046565b6001600160a01b03166000908152600160205260409020805460ff19169055565b600980546000918261026b83611a4d565b919050555061027a838361108c565b5060015b92915050565b60085460009060ff166102d05760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b60448201526064015b60405180910390fd5b6102e16102dc83611c00565b6110f7565b600980549060006102f183611cda565b9190505550600190505b919050565b3360009081526001602052604090205460ff168061032857506000546001600160a01b031633145b6103745760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102c7565b60085460ff166103b85760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b60448201526064016102c7565b600a8251111561040a5760405162461bcd60e51b815260206004820152601d60248201527f4d6178696d756d20313020657865637574696f6e7320616c6c6f77656400000060448201526064016102c7565b80518251146104815760405162461bcd60e51b815260206004820152602560248201527f4163636f756e7473202620537472617465677920636f756e7420646f6e27742060448201527f6d6174636800000000000000000000000000000000000000000000000000000060648201526084016102c7565b60005b8251811015610679574260046000600260008786815181106104a8576104a8611cf3565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008686815181106104e4576104e4611cf3565b6020026020010151815260200190815260200160002060050160009054906101000a900460ff16600581111561051c5761051c611902565b600581111561052d5761052d611902565b8152602001908152602001600020546003600086858151811061055257610552611cf3565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061058e5761058e611cf3565b60200260200101518152602001908152602001600020546105af9190611d09565b10156106675760006105f38483815181106105cc576105cc611cf3565b60200260200101518484815181106105e6576105e6611cf3565b6020026020010151611303565b905080156106655782828151811061060d5761060d611cf3565b602002602001015184838151811061062757610627611cf3565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b505b8061067181611cda565b915050610484565b505050565b3360009081526001602052604090205460ff16806106a657506000546001600160a01b031633145b6106f25760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102c7565b6001600160a01b038216600090815260026020908152604080832084845290915290206008015460ff1661078e5760405162461bcd60e51b815260206004820152602760248201527f4578656375746f72203a204163636f756e7420616c726561647920756e73756260448201527f736372696265640000000000000000000000000000000000000000000000000060648201526084016102c7565b6001600160a01b038216600081815260026020908152604080832085845290915290819020600801805460ff19169055517fa30b19970000000000000000000000000000000000000000000000000000000081526004810183905263a30b199790602401600060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505050506001600160a01b03821660008181526002602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916108839160ff1690611d1c565b60405180910390a45050565b610897611046565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6108c6611046565b6108d060006113d9565b565b3360009081526001602052604090205460ff16806108fa57506000546001600160a01b031633145b6109465760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102c7565b60085460ff1661098a5760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b60448201526064016102c7565b6001600160a01b038216600090815260026020908152604080832084845290915281206005908101548492849242926004929160ff909116908111156109d2576109d2611902565b60058111156109e3576109e3611902565b815260208082019290925260409081016000908120546001600160a01b0387168252600384528282208683529093522054610a1e9190611d09565b10610a6b5760405162461bcd60e51b815260206004820152601460248201527f44434120496e74657276616c206e6f74206d657400000000000000000000000060448201526064016102c7565b6000610a778585611303565b90508015610ab65760405184906001600160a01b038716907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a35b5050505050565b3360009081526001602052604090205460ff1680610ae557506000546001600160a01b031633145b610b315760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102c7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190611d2a565b90508015610679576000806000610bcd84611436565b6005549295509093509150610bf8906801000000000000000090046001600160a01b031684876114b6565b600654610c0f906001600160a01b031683876114b6565b600754610c26906001600160a01b031682876114b6565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b610c6c611548565b6001600160a01b03838116600090815260026020818152604080842087855282529283902083516101008101855281548616815284516060810186526001830180549788168252600160a01b90970460ff16818501529382018054919692959387019493840191610cdc90611d43565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0890611d43565b8015610d555780601f10610d2a57610100808354040283529160200191610d55565b820191906000526020600020905b815481529060010190602001808311610d3857829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610dad90611d43565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd990611d43565b8015610e265780601f10610dfb57610100808354040283529160200191610e26565b820191906000526020600020905b815481529060010190602001808311610e0957829003601f168201915b50505091909252505050815260058281015460209092019160ff1690811115610e5157610e51611902565b6005811115610e6257610e62611902565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982016040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182018054610ed090611d43565b80601f0160208091040260200160405190810160405280929190818152602001828054610efc90611d43565b8015610f495780601f10610f1e57610100808354040283529160200191610f49565b820191906000526020600020905b815481529060010190602001808311610f2c57829003601f168201915b50505050508152602001600282018054610f6290611d43565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8e90611d43565b8015610fdb5780601f10610fb057610100808354040283529160200191610fdb565b820191906000526020600020905b815481529060010190602001808311610fbe57829003601f168201915b505050919092525050509052509392505050565b610ff7611046565b6001600160a01b03811661103a576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102c7565b611043816113d9565b50565b6000546001600160a01b031633146108d0576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102c7565b6001600160a01b038216600081815260026020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916108839160ff1690611d1c565b600160c0820181905281516001600160a01b03908116600090815260026020818152604080842060a088015185528252928390208651815490861673ffffffffffffffffffffffffffffffffffffffff1990911617815581870151805196820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff1990941697909616969096179190911784559184015185949293918401906111a49082611dcb565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b03909316929092179190911781559181015190919060048401906112089082611dcb565b50505060608201518160050160006101000a81548160ff0219169083600581111561123557611235611902565b02179055506080820151600682015560a0820151600782015560c082015160088201805491151560ff1992831617905560e08301518051600984018054911515919093161782556020810151909190600a8401906112939082611dcb565b50604082015160028201906112a89082611dcb565b505050905050600115158160a0015182600001516001600160a01b03167f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c184606001516040516112f89190611d1c565b60405180910390a450565b6005546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af115801561137f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a39190611e8b565b905080156113d2576001600160a01b038416600090815260036020908152604080832086845290915290204290555b9392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60055460009081908190612710906114529061ffff1686611ea8565b61145c9190611ebf565b6005549093506127109061147a9062010000900461ffff1686611ea8565b6114849190611ebf565b600554909250612710906114a490640100000000900461ffff1686611ea8565b6114ae9190611ebf565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af115801561151e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115429190611e8b565b50505050565b60405180610100016040528060006001600160a01b03168152602001611594604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260200160008152602001600081526020016000151581526020016115ff604051806060016040528060001515815260200160608152602001606081525090565b905290565b80356001600160a01b03811681146102fb57600080fd5b60006020828403121561162d57600080fd5b6113d282611604565b6000806040838503121561164957600080fd5b61165283611604565b946020939093013593505050565b60006020828403121561167257600080fd5b813567ffffffffffffffff81111561168957600080fd5b820161010081850312156113d257600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156116d5576116d561169c565b60405290565b604051610100810167ffffffffffffffff811182821017156116d5576116d561169c565b604051601f8201601f1916810167ffffffffffffffff811182821017156117285761172861169c565b604052919050565b600067ffffffffffffffff82111561174a5761174a61169c565b5060051b60200190565b600082601f83011261176557600080fd5b8135602061177a61177583611730565b6116ff565b82815260059290921b8401810191818101908684111561179957600080fd5b8286015b848110156117b4578035835291830191830161179d565b509695505050505050565b600080604083850312156117d257600080fd5b823567ffffffffffffffff808211156117ea57600080fd5b818501915085601f8301126117fe57600080fd5b8135602061180e61177583611730565b82815260059290921b8401810191818101908984111561182d57600080fd5b948201945b838610156118525761184386611604565b82529482019490820190611832565b9650508601359250508082111561186857600080fd5b5061187585828601611754565b9150509250929050565b6000815180845260005b818110156118a557602081850181015186830182015201611889565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526118fa606085018261187f565b949350505050565b634e487b7160e01b600052602160045260246000fd5b6006811061193657634e487b7160e01b600052602160045260246000fd5b9052565b805115158252600060208201516060602085015261195b606085018261187f565b905060408301518482036040860152611974828261187f565b95945050505050565b602081526119976020820183516001600160a01b03169052565b600060208301516101008060408501526119b56101208501836118c5565b91506040850151601f19808685030160608701526119d384836118c5565b9350606087015191506119e96080870183611918565b608087015160a087015260a087015160c087015260c08701519150611a1260e087018315159052565b60e0870151915080868503018387015250611a2d838261193a565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600081611a5c57611a5c611a37565b506000190190565b600067ffffffffffffffff831115611a7e57611a7e61169c565b611a91601f8401601f19166020016116ff565b9050828152838383011115611aa557600080fd5b828260208301376000602084830101529392505050565b600060608284031215611ace57600080fd5b611ad66116b2565b9050611ae182611604565b8152602082013560ff81168114611af757600080fd5b6020820152604082013567ffffffffffffffff811115611b1657600080fd5b8201601f81018413611b2757600080fd5b611b3684823560208401611a64565b60408301525092915050565b8035600681106102fb57600080fd5b801515811461104357600080fd5b80356102fb81611b51565b600082601f830112611b7b57600080fd5b6113d283833560208501611a64565b600060608284031215611b9c57600080fd5b611ba46116b2565b90508135611bb181611b51565b8152602082013567ffffffffffffffff80821115611bce57600080fd5b611bda85838601611b6a565b60208401526040840135915080821115611bf357600080fd5b50611b3684828501611b6a565b60006101008236031215611c1357600080fd5b611c1b6116db565b611c2483611604565b8152602083013567ffffffffffffffff80821115611c4157600080fd5b611c4d36838701611abc565b60208401526040850135915080821115611c6657600080fd5b611c7236838701611abc565b6040840152611c8360608601611b42565b60608401526080850135608084015260a085013560a0840152611ca860c08601611b5f565b60c084015260e0850135915080821115611cc157600080fd5b50611cce36828601611b8a565b60e08301525092915050565b600060018201611cec57611cec611a37565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8082018082111561027e5761027e611a37565b6020810161027e8284611918565b600060208284031215611d3c57600080fd5b5051919050565b600181811c90821680611d5757607f821691505b602082108103611d7757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561067957600081815260208120601f850160051c81016020861015611da45750805b601f850160051c820191505b81811015611dc357828155600101611db0565b505050505050565b815167ffffffffffffffff811115611de557611de561169c565b611df981611df38454611d43565b84611d7d565b602080601f831160018114611e2e5760008415611e165750858301515b600019600386901b1c1916600185901b178555611dc3565b600085815260208120601f198616915b82811015611e5d57888601518255948401946001909101908401611e3e565b5085821015611e7b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611e9d57600080fd5b81516113d281611b51565b808202811582820484141761027e5761027e611a37565b600082611edc57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220877e91cf485f9ad766d73f96128c5f168010ce1f4cf0eba39d53d352176dffb164736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
