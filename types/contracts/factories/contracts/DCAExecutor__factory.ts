/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526003805460ff191660011790553480156200001e57600080fd5b5060405162002abc38038062002abc83398101604081905262000041916200021b565b338181806200006a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000758162000151565b506200008181620001a1565b5050815160068054602085015160408601516060870151608088015161ffff96871663ffffffff199095169490941762010000938716939093029290921763ffffffff60201b19166401000000009186169190910261ffff60301b1916176601000000000000949091169390930292909217600160401b600160e01b031916680100000000000000006001600160a01b039384160217905560a0830151600780546001600160a01b031990811692841692909217905560c09093015160088054909416911617909155506200030d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b805161ffff81168114620001fe57600080fd5b919050565b80516001600160a01b0381168114620001fe57600080fd5b6000808284036101008112156200023157600080fd5b60e08112156200024057600080fd5b5060405160e081016001600160401b03811182821017156200027257634e487b7160e01b600052604160045260246000fd5b6040526200028084620001eb565b81526200029060208501620001eb565b6020820152620002a360408501620001eb565b6040820152620002b660608501620001eb565b6060820152620002c96080850162000203565b6080820152620002dc60a0850162000203565b60a0820152620002ef60c0850162000203565b60c082015291506200030460e0840162000203565b90509250929050565b61279f806200031d6000396000f3fe6080604052600436106101485760003560e01c8063715018a6116100c0578063bfe22a0111610074578063f2fde38b11610059578063f2fde38b14610402578063f3e8ff5b14610422578063fd88ed0f1461044f5761019a565b8063bfe22a0114610399578063d9fa9c1a146103b95761019a565b80638da5cb5b116100a55780638da5cb5b146103275780639665b65814610359578063a8c2ec03146103795761019a565b8063715018a6146102f2578063892cd8f5146103075761019a565b80633adee794116101175780635864badb116100fc5780635864badb146102925780635b2fc958146102b257806370480275146102d25761019a565b80633adee794146102595780633c7c46dc1461027d5761019a565b80630853ac1c146101e25780631785f53c146101f957806318f1f54d1461021957806327b827b7146102395761019a565b3661019a5760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d00000000000000006044820152606401610191565b3480156101ee57600080fd5b506101f7610464565b005b34801561020557600080fd5b506101f7610214366004611d0f565b610478565b34801561022557600080fd5b506101f7610234366004611d2a565b6104a1565b34801561024557600080fd5b506101f7610254366004611d54565b610568565b34801561026557600080fd5b50600a545b6040519081526020015b60405180910390f35b34801561028957600080fd5b5060095461026a565b34801561029e57600080fd5b506101f76102ad366004611e90565b61070c565b3480156102be57600080fd5b506101f76102cd366004611d2a565b610ac9565b3480156102de57600080fd5b506101f76102ed366004611d0f565b610cfc565b3480156102fe57600080fd5b506101f7610d28565b34801561031357600080fd5b506101f7610322366004611d2a565b610d3a565b34801561033357600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610274565b34801561036557600080fd5b506101f7610374366004611d0f565b610e6e565b34801561038557600080fd5b506101f7610394366004611d0f565b610e82565b3480156103a557600080fd5b506101f76103b4366004611f69565b61104f565b3480156103c557600080fd5b506103f26103d4366004611d0f565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610274565b34801561040e57600080fd5b506101f761041d366004611d0f565b611060565b34801561042e57600080fd5b5061044261043d366004611d2a565b6110b4565b60405161027491906120a0565b34801561045b57600080fd5b50610341611458565b61046c611471565b61047660006114b7565b565b610480611471565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b038316146105455760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a401610191565b61054f828261150e565b6009805490600061055f83612170565b91905055505050565b60035460ff166105cd5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610191565b6105da6020820182611d0f565b6001600160a01b0316336001600160a01b0316146106605760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e737562736372696265006064820152608401610191565b61067161066c8261237c565b611579565b6106e35760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f64207374726174656779000000000000000000000000000000000000000000006064820152608401610191565b6106f46106ef8261237c565b6115fe565b6009805490600061070483612456565b919050555050565b6001546001600160a01b0316331461078c5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f7200000000000000006064820152608401610191565b60035460ff166107f15760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610191565b600a825111156108695760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f776564000000000000006064820152608401610191565b80518251146109065760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a401610191565b60005b8251811015610ac4574361098e6004600086858151811061092c5761092c61246f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106109685761096861246f565b60209081029190910181015182528101919091526040016000206005015460ff16611850565b600560008685815181106109a4576109a461246f565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106109e0576109e061246f565b6020026020010151815260200190815260200160002054610a019190612485565b1015610ab257610a43838281518110610a1c57610a1c61246f565b6020026020010151838381518110610a3657610a3661246f565b602002602001015161196b565b15610ab257818181518110610a5a57610a5a61246f565b6020026020010151838281518110610a7457610a7461246f565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610abc81612456565b915050610909565b505050565b6001546001600160a01b03163314610b495760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f7200000000000000006064820152608401610191565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610be55760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e73756273637269626564000000006064820152608401610191565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610c6357600080fd5b505af1158015610c77573d6000803e3d6000fd5b505060098054925090506000610c8c83612170565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610cf09160ff1690612498565b60405180910390a45050565b610d04611471565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610d30611471565b6104766000611a41565b6001546001600160a01b03163314610dba5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f7200000000000000006064820152608401610191565b60035460ff16610e1f5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b6064820152608401610191565b6000610e2b838361196b565b90508015610ac45760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b610e76611471565b610e7f816114b7565b50565b3360009081526002602052604090205460ff1680610eaa57506000546001600160a01b031633145b610f1c5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e000000000000000000000000000000006064820152608401610191565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa291906124a6565b90508015610ac4576000806000610fb884611a9e565b6006549295509093509150610fe3906801000000000000000090046001600160a01b03168487611afd565b600754610ffa906001600160a01b03168387611afd565b600854611011906001600160a01b03168287611afd565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b611057611471565b610e7f81611b8f565b611068611471565b6001600160a01b0381166110ab576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610191565b610e7f81611a41565b6110bc611c1d565b6001600160a01b03838116600090815260046020908152604080832086845282529182902082516101008101845281548516815283516060810185526001830180549687168252600160a01b90960460ff1681850152600283018054929693959487019491939291840191611130906124bf565b80601f016020809104026020016040519081016040528092919081815260200182805461115c906124bf565b80156111a95780601f1061117e576101008083540402835291602001916111a9565b820191906000526020600020905b81548152906001019060200180831161118c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190611201906124bf565b80601f016020809104026020016040519081016040528092919081815260200182805461122d906124bf565b801561127a5780601f1061124f5761010080835404028352916020019161127a565b820191906000526020600020905b81548152906001019060200180831161125d57829003601f168201915b50505091909252505050815260058281015460209092019160ff16908111156112a5576112a5612001565b60058111156112b6576112b6612001565b815260068201546020808301919091526007830154604080840191909152600884015460ff90811615156060850152815160a08101835260098601805480841615158352610100900490921693810193909352600a850180546080909501949192840191611323906124bf565b80601f016020809104026020016040519081016040528092919081815260200182805461134f906124bf565b801561139c5780601f106113715761010080835404028352916020019161139c565b820191906000526020600020905b81548152906001019060200180831161137f57829003601f168201915b505050505081526020016002820180546113b5906124bf565b80601f01602080910402602001604051908101604052809291908181526020018280546113e1906124bf565b801561142e5780601f106114035761010080835404028352916020019161142e565b820191906000526020600020905b81548152906001019060200180831161141157829003601f168201915b5050509183525050600391909101546001600160a01b031660209091015290525090505b92915050565b600061146c6001546001600160a01b031690565b905090565b6000546001600160a01b03163314610476576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610191565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b038216600081815260046020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610cf09160ff1690612498565b600080600590506000818460600151600581111561159957611599612001565b855191101591506001600160a01b0316158015906115c457506020840151516001600160a01b031615155b80156115dd57506040840151516001600160a01b031615155b80156115ed575060008460800151115b80156115f65750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a087015184528252918290208551815490851673ffffffffffffffffffffffffffffffffffffffff1990911617815581860151805195820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909416969095169590951791909117835590830151849391929060028401906116ad9082612547565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b03909316929092179190911781559181015190919060048401906117119082612547565b50505060608201518160050160006101000a81548160ff0219169083600581111561173e5761173e612001565b02179055506080820151600682015560a0820151600782015560c082015160088201805491151560ff1990921691909117905560e08201518051600983018054602084015160ff166101000261ff00199315159390931661ffff19909116179190911781556040820151600a8401906117b79082612547565b50606082015160028201906117cc9082612547565b50608091909101516003909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392831617905560a084015184516060860151604051600196509294509216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916118459190612498565b60405180910390a450565b60008082600581111561186557611865612001565b036118725750603c919050565b600182600581111561188657611886612001565b0361189757611452603c6005612607565b60028260058111156118ab576118ab612001565b036118ba575062015180919050565b60038260058111156118ce576118ce612001565b036118dd57506202a300919050565b60048260058111156118f1576118f1612001565b03611900575062093a80919050565b600582600581111561191457611914612001565b0361192357506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c00006044820152606401610191565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af11580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b919061261e565b90508015611a3a576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60065460009081908190611ab990859061ffff166012611bcc565b600654909350611ad690859062010000900461ffff166012611bcc565b600654909250611af5908590640100000000900461ffff166012611bcc565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b89919061261e565b50505050565b6003805460ff19168215159081179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600080611bda60028461263b565b611be590600a612738565b611bf39061ffff8616612607565b9050611c0083600a612738565b611c0a8287612607565b611c149190612747565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611c69604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001611cee6040518060a00160405280600015158152602001600060ff168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b80356001600160a01b0381168114611d0a57600080fd5b919050565b600060208284031215611d2157600080fd5b611a3a82611cf3565b60008060408385031215611d3d57600080fd5b611d4683611cf3565b946020939093013593505050565b600060208284031215611d6657600080fd5b813567ffffffffffffffff811115611d7d57600080fd5b82016101008185031215611a3a57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611dca57611dca611d90565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611df957611df9611d90565b604052919050565b600067ffffffffffffffff821115611e1b57611e1b611d90565b5060051b60200190565b600082601f830112611e3657600080fd5b81356020611e4b611e4683611e01565b611dd0565b82815260059290921b84018101918181019086841115611e6a57600080fd5b8286015b84811015611e855780358352918301918301611e6e565b509695505050505050565b60008060408385031215611ea357600080fd5b823567ffffffffffffffff80821115611ebb57600080fd5b818501915085601f830112611ecf57600080fd5b81356020611edf611e4683611e01565b82815260059290921b84018101918181019089841115611efe57600080fd5b948201945b83861015611f2357611f1486611cf3565b82529482019490820190611f03565b96505086013592505080821115611f3957600080fd5b50611f4685828601611e25565b9150509250929050565b8015158114610e7f57600080fd5b8035611d0a81611f50565b600060208284031215611f7b57600080fd5b8135611a3a81611f50565b6000815180845260005b81811015611fac57602081850181015186830182015201611f90565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526115f66060850182611f86565b634e487b7160e01b600052602160045260246000fd5b6006811061203557634e487b7160e01b600052602160045260246000fd5b9052565b80511515825260ff60208201511660208301526000604082015160a0604085015261206760a0850182611f86565b9050606083015184820360608601526120808282611f86565b9150506001600160a01b0360808401511660808501528091505092915050565b602081526120ba6020820183516001600160a01b03169052565b600060208301516101008060408501526120d8610120850183611fcc565b91506040850151601f19808685030160608701526120f68483611fcc565b93506060870151915061210c6080870183612017565b608087015160a087015260a087015160c087015260c0870151915061213560e087018315159052565b60e08701519150808685030183870152506121508382612039565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008161217f5761217f61215a565b506000190190565b803560ff81168114611d0a57600080fd5b600067ffffffffffffffff8311156121b2576121b2611d90565b6121c5601f8401601f1916602001611dd0565b90508281528383830111156121d957600080fd5b828260208301376000602084830101529392505050565b60006060828403121561220257600080fd5b6040516060810167ffffffffffffffff828210818311171561222657612226611d90565b8160405282935061223685611cf3565b835261224460208601612187565b6020840152604085013591508082111561225d57600080fd5b508301601f8101851361226f57600080fd5b61227e85823560208401612198565b6040830152505092915050565b803560068110611d0a57600080fd5b600082601f8301126122ab57600080fd5b611a3a83833560208501612198565b600060a082840312156122cc57600080fd5b60405160a0810167ffffffffffffffff82821081831117156122f0576122f0611d90565b816040528293508435915061230482611f50565b81835261231360208601612187565b6020840152604085013591508082111561232c57600080fd5b6123388683870161229a565b6040840152606085013591508082111561235157600080fd5b5061235e8582860161229a565b60608301525061237060808401611cf3565b60808201525092915050565b6000610100823603121561238f57600080fd5b612397611da6565b6123a083611cf3565b8152602083013567ffffffffffffffff808211156123bd57600080fd5b6123c9368387016121f0565b602084015260408501359150808211156123e257600080fd5b6123ee368387016121f0565b60408401526123ff6060860161228b565b60608401526080850135608084015260a085013560a084015261242460c08601611f5e565b60c084015260e085013591508082111561243d57600080fd5b5061244a368286016122ba565b60e08301525092915050565b6000600182016124685761246861215a565b5060010190565b634e487b7160e01b600052603260045260246000fd5b808201808211156114525761145261215a565b602081016114528284612017565b6000602082840312156124b857600080fd5b5051919050565b600181811c908216806124d357607f821691505b6020821081036124f357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610ac457600081815260208120601f850160051c810160208610156125205750805b601f850160051c820191505b8181101561253f5782815560010161252c565b505050505050565b815167ffffffffffffffff81111561256157612561611d90565b6125758161256f84546124bf565b846124f9565b602080601f8311600181146125aa57600084156125925750858301515b600019600386901b1c1916600185901b17855561253f565b600085815260208120601f198616915b828110156125d9578886015182559484019460019091019084016125ba565b50858210156125f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820281158282048414176114525761145261215a565b60006020828403121561263057600080fd5b8151611a3a81611f50565b60ff82811682821603908111156114525761145261215a565b600181815b8085111561268f5781600019048211156126755761267561215a565b8085161561268257918102915b93841c9390800290612659565b509250929050565b6000826126a657506001611452565b816126b357506000611452565b81600181146126c957600281146126d3576126ef565b6001915050611452565b60ff8411156126e4576126e461215a565b50506001821b611452565b5060208310610133831016604e8410600b8410161715612712575081810a611452565b61271c8383612654565b80600019048211156127305761273061215a565b029392505050565b6000611a3a60ff841683612697565b60008261276457634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209bfd16855dd24d91fcbb9dd85ea0bcd23f394169f65ea5ea7b91859d750612b464736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
