/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526003805460ff191660011790553480156200001e57600080fd5b5060405162002c1038038062002c1083398101604081905262000041916200021b565b338181806200006a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000758162000151565b506200008181620001a1565b5050815160068054602085015160408601516060870151608088015161ffff96871663ffffffff199095169490941762010000938716939093029290921763ffffffff60201b19166401000000009186169190910261ffff60301b1916176601000000000000949091169390930292909217600160401b600160e01b031916680100000000000000006001600160a01b039384160217905560a0830151600780546001600160a01b031990811692841692909217905560c09093015160088054909416911617909155506200030d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b805161ffff81168114620001fe57600080fd5b919050565b80516001600160a01b0381168114620001fe57600080fd5b6000808284036101008112156200023157600080fd5b60e08112156200024057600080fd5b5060405160e081016001600160401b03811182821017156200027257634e487b7160e01b600052604160045260246000fd5b6040526200028084620001eb565b81526200029060208501620001eb565b6020820152620002a360408501620001eb565b6040820152620002b660608501620001eb565b6060820152620002c96080850162000203565b6080820152620002dc60a0850162000203565b60a0820152620002ef60c0850162000203565b60c082015291506200030460e0840162000203565b90509250929050565b6128f3806200031d6000396000f3fe6080604052600436106101635760003560e01c8063715018a6116100c0578063bfe22a0111610074578063f2fde38b11610059578063f2fde38b14610556578063f3e8ff5b14610576578063fd88ed0f146105a3576101b5565b8063bfe22a01146104ed578063d9fa9c1a1461050d576101b5565b80638da5cb5b116100a55780638da5cb5b1461047b5780639665b658146104ad578063a8c2ec03146104cd576101b5565b8063715018a614610446578063892cd8f51461045b576101b5565b80633adee794116101175780635864badb116100fc5780635864badb146103e65780635b2fc958146104065780637048027514610426576101b5565b80633adee794146103b25780633c7c46dc146103d1576101b5565b806318f1f54d1161014857806318f1f54d14610234578063256a49351461025457806327b827b714610392576101b5565b80630853ac1c146101fd5780631785f53c14610214576101b5565b366101b55760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101ac565b34801561020957600080fd5b506102126105b8565b005b34801561022057600080fd5b5061021261022f366004611e63565b6105cc565b34801561024057600080fd5b5061021261024f366004611e7e565b6105f5565b34801561026057600080fd5b506103166040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516103899190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b60405180910390f35b34801561039e57600080fd5b506102126103ad366004611ea8565b6106bc565b3480156103be57600080fd5b50600a545b604051908152602001610389565b3480156103dd57600080fd5b506009546103c3565b3480156103f257600080fd5b50610212610401366004611fe4565b610860565b34801561041257600080fd5b50610212610421366004611e7e565b610c1d565b34801561043257600080fd5b50610212610441366004611e63565b610e50565b34801561045257600080fd5b50610212610e7c565b34801561046757600080fd5b50610212610476366004611e7e565b610e8e565b34801561048757600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610389565b3480156104b957600080fd5b506102126104c8366004611e63565b610fc2565b3480156104d957600080fd5b506102126104e8366004611e63565b610fd6565b3480156104f957600080fd5b506102126105083660046120bd565b6111a3565b34801561051957600080fd5b50610546610528366004611e63565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610389565b34801561056257600080fd5b50610212610571366004611e63565b6111b4565b34801561058257600080fd5b50610596610591366004611e7e565b611208565b60405161038991906121f4565b3480156105af57600080fd5b506104956115ac565b6105c06115c5565b6105ca600061160b565b565b6105d46115c5565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b038316146106995760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101ac565b6106a38282611662565b600980549060006106b3836122c4565b91905055505050565b60035460ff166107215760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ac565b61072e6020820182611e63565b6001600160a01b0316336001600160a01b0316146107b45760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101ac565b6107c56107c0826124d0565b6116cd565b6108375760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101ac565b610848610843826124d0565b611752565b60098054906000610858836125aa565b919050555050565b6001546001600160a01b031633146108e05760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ac565b60035460ff166109455760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ac565b600a825111156109bd5760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f7765640000000000000060648201526084016101ac565b8051825114610a5a5760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a4016101ac565b60005b8251811015610c185743610ae260046000868581518110610a8057610a806125c3565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858581518110610abc57610abc6125c3565b60209081029190910181015182528101919091526040016000206005015460ff166119a4565b60056000868581518110610af857610af86125c3565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858581518110610b3457610b346125c3565b6020026020010151815260200190815260200160002054610b5591906125d9565b1015610c0657610b97838281518110610b7057610b706125c3565b6020026020010151838381518110610b8a57610b8a6125c3565b6020026020010151611abf565b15610c0657818181518110610bae57610bae6125c3565b6020026020010151838281518110610bc857610bc86125c3565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610c10816125aa565b915050610a5d565b505050565b6001546001600160a01b03163314610c9d5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ac565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610d395760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101ac565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610db757600080fd5b505af1158015610dcb573d6000803e3d6000fd5b505060098054925090506000610de0836122c4565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610e449160ff16906125ec565b60405180910390a45050565b610e586115c5565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610e846115c5565b6105ca6000611b95565b6001546001600160a01b03163314610f0e5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ac565b60035460ff16610f735760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ac565b6000610f7f8383611abf565b90508015610c185760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b610fca6115c5565b610fd38161160b565b50565b3360009081526002602052604090205460ff1680610ffe57506000546001600160a01b031633145b6110705760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ac565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156110d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f691906125fa565b90508015610c1857600080600061110c84611bf2565b6006549295509093509150611137906801000000000000000090046001600160a01b03168487611c51565b60075461114e906001600160a01b03168387611c51565b600854611165906001600160a01b03168287611c51565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b6111ab6115c5565b610fd381611ce3565b6111bc6115c5565b6001600160a01b0381166111ff576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101ac565b610fd381611b95565b611210611d71565b6001600160a01b03838116600090815260046020908152604080832086845282529182902082516101008101845281548516815283516060810185526001830180549687168252600160a01b90960460ff168185015260028301805492969395948701949193929184019161128490612613565b80601f01602080910402602001604051908101604052809291908181526020018280546112b090612613565b80156112fd5780601f106112d2576101008083540402835291602001916112fd565b820191906000526020600020905b8154815290600101906020018083116112e057829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061135590612613565b80601f016020809104026020016040519081016040528092919081815260200182805461138190612613565b80156113ce5780601f106113a3576101008083540402835291602001916113ce565b820191906000526020600020905b8154815290600101906020018083116113b157829003601f168201915b50505091909252505050815260058281015460209092019160ff16908111156113f9576113f9612155565b600581111561140a5761140a612155565b815260068201546020808301919091526007830154604080840191909152600884015460ff90811615156060850152815160a08101835260098601805480841615158352610100900490921693810193909352600a85018054608090950194919284019161147790612613565b80601f01602080910402602001604051908101604052809291908181526020018280546114a390612613565b80156114f05780601f106114c5576101008083540402835291602001916114f0565b820191906000526020600020905b8154815290600101906020018083116114d357829003601f168201915b5050505050815260200160028201805461150990612613565b80601f016020809104026020016040519081016040528092919081815260200182805461153590612613565b80156115825780601f1061155757610100808354040283529160200191611582565b820191906000526020600020905b81548152906001019060200180831161156557829003601f168201915b5050509183525050600391909101546001600160a01b031660209091015290525090505b92915050565b60006115c06001546001600160a01b031690565b905090565b6000546001600160a01b031633146105ca576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101ac565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b038216600081815260046020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610e449160ff16906125ec565b60008060059050600081846060015160058111156116ed576116ed612155565b855191101591506001600160a01b03161580159061171857506020840151516001600160a01b031615155b801561173157506040840151516001600160a01b031615155b8015611741575060008460800151115b801561174a5750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a087015184528252918290208551815490851673ffffffffffffffffffffffffffffffffffffffff1990911617815581860151805195820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff1990941696909516959095179190911783559083015184939192906002840190611801908261269b565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b0390931692909217919091178155918101519091906004840190611865908261269b565b50505060608201518160050160006101000a81548160ff0219169083600581111561189257611892612155565b02179055506080820151600682015560a0820151600782015560c082015160088201805491151560ff1990921691909117905560e08201518051600983018054602084015160ff166101000261ff00199315159390931661ffff19909116179190911781556040820151600a84019061190b908261269b565b5060608201516002820190611920908261269b565b50608091909101516003909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392831617905560a084015184516060860151604051600196509294509216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c19161199991906125ec565b60405180910390a450565b6000808260058111156119b9576119b9612155565b036119c65750603c919050565b60018260058111156119da576119da612155565b036119eb576115a6603c600561275b565b60028260058111156119ff576119ff612155565b03611a0e575062015180919050565b6003826005811115611a2257611a22612155565b03611a3157506202a300919050565b6004826005811115611a4557611a45612155565b03611a54575062093a80919050565b6005826005811115611a6857611a68612155565b03611a7757506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101ac565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5f9190612772565b90508015611b8e576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60065460009081908190611c0d90859061ffff166012611d20565b600654909350611c2a90859062010000900461ffff166012611d20565b600654909250611c49908590640100000000900461ffff166012611d20565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdd9190612772565b50505050565b6003805460ff19168215159081179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600080611d2e60028461278f565b611d3990600a61288c565b611d479061ffff861661275b565b9050611d5483600a61288c565b611d5e828761275b565b611d68919061289b565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611dbd604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001611e426040518060a00160405280600015158152602001600060ff168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b80356001600160a01b0381168114611e5e57600080fd5b919050565b600060208284031215611e7557600080fd5b611b8e82611e47565b60008060408385031215611e9157600080fd5b611e9a83611e47565b946020939093013593505050565b600060208284031215611eba57600080fd5b813567ffffffffffffffff811115611ed157600080fd5b82016101008185031215611b8e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611f1e57611f1e611ee4565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611f4d57611f4d611ee4565b604052919050565b600067ffffffffffffffff821115611f6f57611f6f611ee4565b5060051b60200190565b600082601f830112611f8a57600080fd5b81356020611f9f611f9a83611f55565b611f24565b82815260059290921b84018101918181019086841115611fbe57600080fd5b8286015b84811015611fd95780358352918301918301611fc2565b509695505050505050565b60008060408385031215611ff757600080fd5b823567ffffffffffffffff8082111561200f57600080fd5b818501915085601f83011261202357600080fd5b81356020612033611f9a83611f55565b82815260059290921b8401810191818101908984111561205257600080fd5b948201945b838610156120775761206886611e47565b82529482019490820190612057565b9650508601359250508082111561208d57600080fd5b5061209a85828601611f79565b9150509250929050565b8015158114610fd357600080fd5b8035611e5e816120a4565b6000602082840312156120cf57600080fd5b8135611b8e816120a4565b6000815180845260005b81811015612100576020818501810151868301820152016120e4565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff6020820151166020830152600060408201516060604085015261174a60608501826120da565b634e487b7160e01b600052602160045260246000fd5b6006811061218957634e487b7160e01b600052602160045260246000fd5b9052565b80511515825260ff60208201511660208301526000604082015160a060408501526121bb60a08501826120da565b9050606083015184820360608601526121d482826120da565b9150506001600160a01b0360808401511660808501528091505092915050565b6020815261220e6020820183516001600160a01b03169052565b6000602083015161010080604085015261222c610120850183612120565b91506040850151601f198086850301606087015261224a8483612120565b935060608701519150612260608087018361216b565b608087015160a087015260a087015160c087015260c0870151915061228960e087018315159052565b60e08701519150808685030183870152506122a4838261218d565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816122d3576122d36122ae565b506000190190565b803560ff81168114611e5e57600080fd5b600067ffffffffffffffff83111561230657612306611ee4565b612319601f8401601f1916602001611f24565b905082815283838301111561232d57600080fd5b828260208301376000602084830101529392505050565b60006060828403121561235657600080fd5b6040516060810167ffffffffffffffff828210818311171561237a5761237a611ee4565b8160405282935061238a85611e47565b8352612398602086016122db565b602084015260408501359150808211156123b157600080fd5b508301601f810185136123c357600080fd5b6123d2858235602084016122ec565b6040830152505092915050565b803560068110611e5e57600080fd5b600082601f8301126123ff57600080fd5b611b8e838335602085016122ec565b600060a0828403121561242057600080fd5b60405160a0810167ffffffffffffffff828210818311171561244457612444611ee4565b8160405282935084359150612458826120a4565b818352612467602086016122db565b6020840152604085013591508082111561248057600080fd5b61248c868387016123ee565b604084015260608501359150808211156124a557600080fd5b506124b2858286016123ee565b6060830152506124c460808401611e47565b60808201525092915050565b600061010082360312156124e357600080fd5b6124eb611efa565b6124f483611e47565b8152602083013567ffffffffffffffff8082111561251157600080fd5b61251d36838701612344565b6020840152604085013591508082111561253657600080fd5b61254236838701612344565b6040840152612553606086016123df565b60608401526080850135608084015260a085013560a084015261257860c086016120b2565b60c084015260e085013591508082111561259157600080fd5b5061259e3682860161240e565b60e08301525092915050565b6000600182016125bc576125bc6122ae565b5060010190565b634e487b7160e01b600052603260045260246000fd5b808201808211156115a6576115a66122ae565b602081016115a6828461216b565b60006020828403121561260c57600080fd5b5051919050565b600181811c9082168061262757607f821691505b60208210810361264757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c1857600081815260208120601f850160051c810160208610156126745750805b601f850160051c820191505b8181101561269357828155600101612680565b505050505050565b815167ffffffffffffffff8111156126b5576126b5611ee4565b6126c9816126c38454612613565b8461264d565b602080601f8311600181146126fe57600084156126e65750858301515b600019600386901b1c1916600185901b178555612693565b600085815260208120601f198616915b8281101561272d5788860151825594840194600190910190840161270e565b508582101561274b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820281158282048414176115a6576115a66122ae565b60006020828403121561278457600080fd5b8151611b8e816120a4565b60ff82811682821603908111156115a6576115a66122ae565b600181815b808511156127e35781600019048211156127c9576127c96122ae565b808516156127d657918102915b93841c93908002906127ad565b509250929050565b6000826127fa575060016115a6565b81612807575060006115a6565b816001811461281d576002811461282757612843565b60019150506115a6565b60ff841115612838576128386122ae565b50506001821b6115a6565b5060208310610133831016604e8410600b8410161715612866575081810a6115a6565b61287083836127a8565b8060001904821115612884576128846122ae565b029392505050565b6000611b8e60ff8416836127eb565b6000826128b857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203d0dd4e87a3f5f4b6f81b86895f522f010f8f686cd0b71bfae081f06a4ae641d64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
