/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newExecutorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526008805460ff191660011790553480156200001e57600080fd5b5060405162002852380380620028528339810160408190526200004191620001e6565b3381818181806200006c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000778162000166565b50600180546001600160a01b0319166001600160a01b038316179055505083516005805460208701516040880151606089015160808a015161ffff96871663ffffffff199095169490941762010000938716939093029290921763ffffffff60201b19166401000000009186169190910261ffff60301b1916176601000000000000949091169390930292909217600160401b600160e01b031916680100000000000000006001600160a01b039384160217905560a0850151600680546001600160a01b031990811692841692909217905560c0909501516007805490961691161790935550620002d8915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805161ffff81168114620001c957600080fd5b919050565b80516001600160a01b0381168114620001c957600080fd5b600080828403610100811215620001fc57600080fd5b60e08112156200020b57600080fd5b5060405160e081016001600160401b03811182821017156200023d57634e487b7160e01b600052604160045260246000fd5b6040526200024b84620001b6565b81526200025b60208501620001b6565b60208201526200026e60408501620001b6565b60408201526200028160608501620001b6565b60608201526200029460808501620001ce565b6080820152620002a760a08501620001ce565b60a0820152620002ba60c08501620001ce565b60c08201529150620002cf60e08401620001ce565b90509250929050565b61256a80620002e86000396000f3fe60806040526004361061012d5760003560e01c806370480275116100a55780639665b65811610074578063d9fa9c1a11610059578063d9fa9c1a1461039c578063f2fde38b146103e5578063f3e8ff5b146104055761017f565b80639665b6581461035c578063a8c2ec031461037c5761017f565b806370480275146102e9578063715018a614610309578063892cd8f51461031e5780638da5cb5b1461033e5761017f565b8063350157a8116100fc5780633c7c46dc116100e15780633c7c46dc146102945780635864badb146102a95780635b2fc958146102c95761017f565b8063350157a81461023e5780633adee794146102755761017f565b80630853ac1c146101c75780631785f53c146101de57806318f1f54d146101fe57806327b827b71461021e5761017f565b3661017f5760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d00000000000000006044820152606401610176565b3480156101d357600080fd5b506101dc610432565b005b3480156101ea57600080fd5b506101dc6101f9366004611af7565b61044c565b34801561020a57600080fd5b506101dc610219366004611b12565b610475565b34801561022a57600080fd5b506101dc610239366004611b3c565b61053c565b34801561024a57600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561028157600080fd5b50600a545b60405190815260200161026c565b3480156102a057600080fd5b50600954610286565b3480156102b557600080fd5b506101dc6102c4366004611c78565b610650565b3480156102d557600080fd5b506101dc6102e4366004611b12565b6109ea565b3480156102f557600080fd5b506101dc610304366004611af7565b610bf7565b34801561031557600080fd5b506101dc610c23565b34801561032a57600080fd5b506101dc610339366004611b12565b610c37565b34801561034a57600080fd5b506000546001600160a01b0316610258565b34801561036857600080fd5b506101dc610377366004611af7565b610d48565b34801561038857600080fd5b506101dc610397366004611af7565b610d72565b3480156103a857600080fd5b506103d56103b7366004611af7565b6001600160a01b031660009081526002602052604090205460ff1690565b604051901515815260200161026c565b3480156103f157600080fd5b506101dc610400366004611af7565b610f19565b34801561041157600080fd5b50610425610420366004611b12565b610f70565b60405161026c9190611e52565b61043a611314565b600180546001600160a01b0319169055565b610454611314565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b038316146105195760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a401610176565b610523828261135a565b6009805490600061053383611f22565b91905055505050565b60085460ff166105a45760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b6064820152608401610176565b6105b56105b082612147565b6113c5565b6106275760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f64207374726174656779000000000000000000000000000000000000000000006064820152608401610176565b61063861063382612147565b61144a565b6009805490600061064883612221565b919050555050565b6001546001600160a01b031633146106aa5760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f7200000000006044820152606401610176565b60085460ff166107125760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b6064820152608401610176565b600a8251111561078a5760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f776564000000000000006064820152608401610176565b80518251146108275760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a401610176565b60005b82518110156109e557436108af6003600086858151811061084d5761084d61223a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106108895761088961223a565b60209081029190910181015182528101919091526040016000206005015460ff16611682565b600460008685815181106108c5576108c561223a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106109015761090161223a565b60200260200101518152602001908152602001600020546109229190612250565b10156109d35761096483828151811061093d5761093d61223a565b60200260200101518383815181106109575761095761223a565b602002602001015161179d565b156109d35781818151811061097b5761097b61223a565b60200260200101518382815181106109955761099561223a565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b806109dd81612221565b91505061082a565b505050565b6001546001600160a01b03163314610a445760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f7200000000006044820152606401610176565b6001600160a01b038216600090815260036020908152604080832084845290915290206008015460ff16610ae05760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e73756273637269626564000000006064820152608401610176565b6001600160a01b038216600081815260036020908152604080832085845290915290819020600801805460ff19169055517fa30b19970000000000000000000000000000000000000000000000000000000081526004810183905263a30b199790602401600060405180830381600087803b158015610b5e57600080fd5b505af1158015610b72573d6000803e3d6000fd5b505060098054925090506000610b8783611f22565b90915550506001600160a01b03821660008181526003602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610beb9160ff1690612263565b60405180910390a45050565b610bff611314565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610c2b611314565b610c356000611873565b565b6001546001600160a01b03163314610c915760405162461bcd60e51b815260206004820152601b60248201527f41646472657373206973206e6f7420746865206578656375746f7200000000006044820152606401610176565b60085460ff16610cf95760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b6064820152608401610176565b6000610d05838361179d565b905080156109e55760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b610d50611314565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526002602052604090205460ff1680610d9a57506000546001600160a01b031633145b610de65760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610176565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6c9190612271565b905080156109e5576000806000610e82846118c3565b6005549295509093509150610ead906801000000000000000090046001600160a01b03168487611922565b600654610ec4906001600160a01b03168387611922565b600754610edb906001600160a01b03168287611922565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b610f21611314565b6001600160a01b038116610f64576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610176565b610f6d81611873565b50565b610f78611a05565b6001600160a01b03838116600090815260036020908152604080832086845282529182902082516101008101845281548516815283516060810185526001830180549687168252600160a01b90960460ff1681850152600283018054929693959487019491939291840191610fec9061228a565b80601f01602080910402602001604051908101604052809291908181526020018280546110189061228a565b80156110655780601f1061103a57610100808354040283529160200191611065565b820191906000526020600020905b81548152906001019060200180831161104857829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906110bd9061228a565b80601f01602080910402602001604051908101604052809291908181526020018280546110e99061228a565b80156111365780601f1061110b57610100808354040283529160200191611136565b820191906000526020600020905b81548152906001019060200180831161111957829003601f168201915b50505091909252505050815260058281015460209092019160ff169081111561116157611161611db3565b600581111561117257611172611db3565b815260068201546020808301919091526007830154604080840191909152600884015460ff90811615156060850152815160a08101835260098601805480841615158352610100900490921693810193909352600a8501805460809095019491928401916111df9061228a565b80601f016020809104026020016040519081016040528092919081815260200182805461120b9061228a565b80156112585780601f1061122d57610100808354040283529160200191611258565b820191906000526020600020905b81548152906001019060200180831161123b57829003601f168201915b505050505081526020016002820180546112719061228a565b80601f016020809104026020016040519081016040528092919081815260200182805461129d9061228a565b80156112ea5780601f106112bf576101008083540402835291602001916112ea565b820191906000526020600020905b8154815290600101906020018083116112cd57829003601f168201915b5050509183525050600391909101546001600160a01b031660209091015290525090505b92915050565b6000546001600160a01b03163314610c35576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610176565b6001600160a01b038216600081815260036020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610beb9160ff1690612263565b60008060059050600081846060015160058111156113e5576113e5611db3565b855191101591506001600160a01b03161580159061141057506020840151516001600160a01b031615155b801561142957506040840151516001600160a01b031615155b8015611439575060008460800151115b80156114425750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260036020908152604080832060a08701518452825291829020855181549085166001600160a01b031990911617815581860151805195820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909416969095169590951791909117835590830151849391929060028401906114ec9082612312565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b03909316929092179190911781559181015190919060048401906115509082612312565b50505060608201518160050160006101000a81548160ff0219169083600581111561157d5761157d611db3565b02179055506080820151600682015560a0820151600782015560c082015160088201805491151560ff1990921691909117905560e08201518051600983018054602084015160ff166101000261ff00199315159390931661ffff19909116179190911781556040820151600a8401906115f69082612312565b506060820151600282019061160b9082612312565b5060809190910151600390910180546001600160a01b0319166001600160a01b0392831617905560a084015184516060860151604051600196509294509216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916116779190612263565b60405180910390a450565b60008082600581111561169757611697611db3565b036116a45750603c919050565b60018260058111156116b8576116b8611db3565b036116c95761130e603c60056123d2565b60028260058111156116dd576116dd611db3565b036116ec575062015180919050565b600382600581111561170057611700611db3565b0361170f57506202a300919050565b600482600581111561172357611723611db3565b03611732575062093a80919050565b600582600581111561174657611746611db3565b0361175557506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c00006044820152606401610176565b6005546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183d91906123e9565b9050801561186c576001600160a01b038416600090815260046020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600554600090819081906118de90859061ffff1660126119b4565b6005549093506118fb90859062010000900461ffff1660126119b4565b60055490925061191a908590640100000000900461ffff1660126119b4565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af115801561198a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ae91906123e9565b50505050565b6000806119c2600284612406565b6119cd90600a612503565b6119db9061ffff86166123d2565b90506119e883600a612503565b6119f282876123d2565b6119fc9190612512565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611a51604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001611ad66040518060a00160405280600015158152602001600060ff168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b80356001600160a01b0381168114611af257600080fd5b919050565b600060208284031215611b0957600080fd5b61186c82611adb565b60008060408385031215611b2557600080fd5b611b2e83611adb565b946020939093013593505050565b600060208284031215611b4e57600080fd5b813567ffffffffffffffff811115611b6557600080fd5b8201610100818503121561186c57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611bb257611bb2611b78565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611be157611be1611b78565b604052919050565b600067ffffffffffffffff821115611c0357611c03611b78565b5060051b60200190565b600082601f830112611c1e57600080fd5b81356020611c33611c2e83611be9565b611bb8565b82815260059290921b84018101918181019086841115611c5257600080fd5b8286015b84811015611c6d5780358352918301918301611c56565b509695505050505050565b60008060408385031215611c8b57600080fd5b823567ffffffffffffffff80821115611ca357600080fd5b818501915085601f830112611cb757600080fd5b81356020611cc7611c2e83611be9565b82815260059290921b84018101918181019089841115611ce657600080fd5b948201945b83861015611d0b57611cfc86611adb565b82529482019490820190611ceb565b96505086013592505080821115611d2157600080fd5b50611d2e85828601611c0d565b9150509250929050565b6000815180845260005b81811015611d5e57602081850181015186830182015201611d42565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526114426060850182611d38565b634e487b7160e01b600052602160045260246000fd5b60068110611de757634e487b7160e01b600052602160045260246000fd5b9052565b80511515825260ff60208201511660208301526000604082015160a06040850152611e1960a0850182611d38565b905060608301518482036060860152611e328282611d38565b9150506001600160a01b0360808401511660808501528091505092915050565b60208152611e6c6020820183516001600160a01b03169052565b60006020830151610100806040850152611e8a610120850183611d7e565b91506040850151601f1980868503016060870152611ea88483611d7e565b935060608701519150611ebe6080870183611dc9565b608087015160a087015260a087015160c087015260c08701519150611ee760e087018315159052565b60e0870151915080868503018387015250611f028382611deb565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600081611f3157611f31611f0c565b506000190190565b803560ff81168114611af257600080fd5b600067ffffffffffffffff831115611f6457611f64611b78565b611f77601f8401601f1916602001611bb8565b9050828152838383011115611f8b57600080fd5b828260208301376000602084830101529392505050565b600060608284031215611fb457600080fd5b6040516060810167ffffffffffffffff8282108183111715611fd857611fd8611b78565b81604052829350611fe885611adb565b8352611ff660208601611f39565b6020840152604085013591508082111561200f57600080fd5b508301601f8101851361202157600080fd5b61203085823560208401611f4a565b6040830152505092915050565b803560068110611af257600080fd5b8015158114610f6d57600080fd5b8035611af28161204c565b600082601f83011261207657600080fd5b61186c83833560208501611f4a565b600060a0828403121561209757600080fd5b60405160a0810167ffffffffffffffff82821081831117156120bb576120bb611b78565b81604052829350843591506120cf8261204c565b8183526120de60208601611f39565b602084015260408501359150808211156120f757600080fd5b61210386838701612065565b6040840152606085013591508082111561211c57600080fd5b5061212985828601612065565b60608301525061213b60808401611adb565b60808201525092915050565b6000610100823603121561215a57600080fd5b612162611b8e565b61216b83611adb565b8152602083013567ffffffffffffffff8082111561218857600080fd5b61219436838701611fa2565b602084015260408501359150808211156121ad57600080fd5b6121b936838701611fa2565b60408401526121ca6060860161203d565b60608401526080850135608084015260a085013560a08401526121ef60c0860161205a565b60c084015260e085013591508082111561220857600080fd5b5061221536828601612085565b60e08301525092915050565b60006001820161223357612233611f0c565b5060010190565b634e487b7160e01b600052603260045260246000fd5b8082018082111561130e5761130e611f0c565b6020810161130e8284611dc9565b60006020828403121561228357600080fd5b5051919050565b600181811c9082168061229e57607f821691505b6020821081036122be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109e557600081815260208120601f850160051c810160208610156122eb5750805b601f850160051c820191505b8181101561230a578281556001016122f7565b505050505050565b815167ffffffffffffffff81111561232c5761232c611b78565b6123408161233a845461228a565b846122c4565b602080601f831160018114612375576000841561235d5750858301515b600019600386901b1c1916600185901b17855561230a565b600085815260208120601f198616915b828110156123a457888601518255948401946001909101908401612385565b50858210156123c25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761130e5761130e611f0c565b6000602082840312156123fb57600080fd5b815161186c8161204c565b60ff828116828216039081111561130e5761130e611f0c565b600181815b8085111561245a57816000190482111561244057612440611f0c565b8085161561244d57918102915b93841c9390800290612424565b509250929050565b6000826124715750600161130e565b8161247e5750600061130e565b8160018114612494576002811461249e576124ba565b600191505061130e565b60ff8411156124af576124af611f0c565b50506001821b61130e565b5060208310610133831016604e8410600b84101617156124dd575081810a61130e565b6124e7838361241f565b80600019048211156124fb576124fb611f0c565b029392505050565b600061186c60ff841683612462565b60008261252f57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220517bcab2ed9b49981ed6d242eb5b04566a3b2e6040cb748bf8f7b2653ee4449d64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
