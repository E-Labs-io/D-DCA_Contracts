/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newState_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526003805460ff191660011790553480156200001e57600080fd5b5060405162002b2338038062002b2383398101604081905262000041916200021b565b338181806200006a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000758162000151565b506200008181620001a1565b5050815160068054602085015160408601516060870151608088015161ffff96871663ffffffff199095169490941762010000938716939093029290921763ffffffff60201b19166401000000009186169190910261ffff60301b1916176601000000000000949091169390930292909217600160401b600160e01b031916680100000000000000006001600160a01b039384160217905560a0830151600780546001600160a01b031990811692841692909217905560c09093015160088054909416911617909155506200030d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b805161ffff81168114620001fe57600080fd5b919050565b80516001600160a01b0381168114620001fe57600080fd5b6000808284036101008112156200023157600080fd5b60e08112156200024057600080fd5b5060405160e081016001600160401b03811182821017156200027257634e487b7160e01b600052604160045260246000fd5b6040526200028084620001eb565b81526200029060208501620001eb565b6020820152620002a360408501620001eb565b6040820152620002b660608501620001eb565b6060820152620002c96080850162000203565b6080820152620002dc60a0850162000203565b60a0820152620002ef60c0850162000203565b60c082015291506200030460e0840162000203565b90509250929050565b612806806200031d6000396000f3fe6080604052600436106101635760003560e01c8063892cd8f5116100c0578063bfe22a0111610074578063f2fde38b11610059578063f2fde38b14610556578063f3e8ff5b14610576578063fd88ed0f146105a3576101b5565b8063bfe22a01146104ed578063d9fa9c1a1461050d576101b5565b80639665b658116100a55780639665b6581461048d578063a8c2ec03146104ad578063ab6319b5146104cd576101b5565b8063892cd8f51461043b5780638da5cb5b1461045b576101b5565b80633c7c46dc116101175780635b2fc958116100fc5780635b2fc958146103e65780637048027514610406578063715018a614610426576101b5565b80633c7c46dc146103b15780635864badb146103c6576101b5565b806318f1f54d1161014857806318f1f54d14610234578063256a4935146102545780633adee79414610392576101b5565b80630853ac1c146101fd5780631785f53c14610214576101b5565b366101b55760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101ac565b34801561020957600080fd5b506102126105b8565b005b34801561022057600080fd5b5061021261022f366004611dc4565b6105cc565b34801561024057600080fd5b5061021261024f366004611ddf565b6105f5565b34801561026057600080fd5b506103166040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516103899190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b60405180910390f35b34801561039e57600080fd5b50600a545b604051908152602001610389565b3480156103bd57600080fd5b506009546103a3565b3480156103d257600080fd5b506102126103e1366004611f09565b6106bc565b3480156103f257600080fd5b50610212610401366004611ddf565b610a79565b34801561041257600080fd5b50610212610421366004611dc4565b610cac565b34801561043257600080fd5b50610212610cd8565b34801561044757600080fd5b50610212610456366004611ddf565b610cea565b34801561046757600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610389565b34801561049957600080fd5b506102126104a8366004611dc4565b610e1e565b3480156104b957600080fd5b506102126104c8366004611dc4565b610e32565b3480156104d957600080fd5b506102126104e8366004611fc9565b610fff565b3480156104f957600080fd5b5061021261050836600461201e565b6111a3565b34801561051957600080fd5b50610546610528366004611dc4565b6001600160a01b031660009081526002602052604090205460ff1690565b6040519015158152602001610389565b34801561056257600080fd5b50610212610571366004611dc4565b6111b4565b34801561058257600080fd5b50610596610591366004611ddf565b611208565b604051610389919061213b565b3480156105af57600080fd5b5061047561151d565b6105c0611536565b6105ca600061157c565b565b6105d4611536565b6001600160a01b03166000908152600260205260409020805460ff19169055565b336001600160a01b038316146106995760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101ac565b6106a382826115d3565b600980549060006106b38361220b565b91905055505050565b6001546001600160a01b0316331461073c5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ac565b60035460ff166107a15760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ac565b600a825111156108195760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f723a205b4578656375746542617463685d204d61786960448201527f6d756d20313020657865637574696f6e7320616c6c6f7765640000000000000060648201526084016101ac565b80518251146108b65760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f723a205b4578656375746542617463685d204163636f60448201527f756e7473202620537472617465677920636f756e7420646f6e2774206d61746360648201527f6800000000000000000000000000000000000000000000000000000000000000608482015260a4016101ac565b60005b8251811015610a74574361093e600460008685815181106108dc576108dc612222565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061091857610918612222565b60209081029190910181015182528101919091526040016000206005015460ff1661163e565b6005600086858151811061095457610954612222565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085858151811061099057610990612222565b60200260200101518152602001908152602001600020546109b19190612238565b1015610a62576109f38382815181106109cc576109cc612222565b60200260200101518383815181106109e6576109e6612222565b6020026020010151611759565b15610a6257818181518110610a0a57610a0a612222565b6020026020010151838281518110610a2457610a24612222565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b80610a6c8161224b565b9150506108b9565b505050565b6001546001600160a01b03163314610af95760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ac565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff16610b955760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101ac565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517fa30b199700000000000000000000000000000000000000000000000000000000815290810183905263a30b199790602401600060405180830381600087803b158015610c1357600080fd5b505af1158015610c27573d6000803e3d6000fd5b505060098054925090506000610c3c8361220b565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610ca09160ff1690612264565b60405180910390a45050565b610cb4611536565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610ce0611536565b6105ca600061182f565b6001546001600160a01b03163314610d6a5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ac565b60035460ff16610dcf5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ac565b6000610ddb8383611759565b90508015610a745760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b610e26611536565b610e2f8161157c565b50565b3360009081526002602052604090205460ff1680610e5a57506000546001600160a01b031633145b610ecc5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ac565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f529190612272565b90508015610a74576000806000610f688461188c565b6006549295509093509150610f93906801000000000000000090046001600160a01b031684876118eb565b600754610faa906001600160a01b031683876118eb565b600854610fc1906001600160a01b031682876118eb565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60035460ff166110645760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79416374697665203a205b69734163746976655d20436f6e7472616374604482015269081a5cc81c185d5cd95960b21b60648201526084016101ac565b6110716020820182611dc4565b6001600160a01b0316336001600160a01b0316146110f75760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101ac565b6111086111038261244c565b61197d565b61117a5760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101ac565b61118b6111868261244c565b611a02565b6009805490600061119b8361224b565b919050555050565b6111ab611536565b610e2f81611c4b565b6111bc611536565b6001600160a01b0381166111ff576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101ac565b610e2f8161182f565b611210611cd9565b6001600160a01b03838116600090815260046020908152604080832086845282529182902082516101008101845281548516815283516060810185526001830180549687168252600160a01b90960460ff168185015260028301805492969395948701949193929184019161128490612526565b80601f01602080910402602001604051908101604052809291908181526020018280546112b090612526565b80156112fd5780601f106112d2576101008083540402835291602001916112fd565b820191906000526020600020905b8154815290600101906020018083116112e057829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061135590612526565b80601f016020809104026020016040519081016040528092919081815260200182805461138190612526565b80156113ce5780601f106113a3576101008083540402835291602001916113ce565b820191906000526020600020905b8154815290600101906020018083116113b157829003601f168201915b50505091909252505050815260058281015460209092019160ff16908111156113f9576113f96120b6565b600581111561140a5761140a6120b6565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff161515151581526020016009820160405180608001604052908160008201805461145d90612526565b80601f016020809104026020016040519081016040528092919081815260200182805461148990612526565b80156114d65780601f106114ab576101008083540402835291602001916114d6565b820191906000526020600020905b8154815290600101906020018083116114b957829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b031660609091015290525090505b92915050565b60006115316001546001600160a01b031690565b905090565b6000546001600160a01b031633146105ca576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101ac565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b038216600081815260046020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191610ca09160ff1690612264565b600080826005811115611653576116536120b6565b036116605750603c919050565b6001826005811115611674576116746120b6565b0361168557611517603c6005612560565b6002826005811115611699576116996120b6565b036116a8575062015180919050565b60038260058111156116bc576116bc6120b6565b036116cb57506202a300919050565b60048260058111156116df576116df6120b6565b036116ee575062093a80919050565b6005826005811115611702576117026120b6565b0361171157506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c000060448201526064016101ac565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af11580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f99190612577565b90508015611828576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600654600090819081906118a790859061ffff166012611c88565b6006549093506118c490859062010000900461ffff166012611c88565b6006549092506118e3908590640100000000900461ffff166012611c88565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119779190612577565b50505050565b600080600590506000818460600151600581111561199d5761199d6120b6565b855191101591506001600160a01b0316158015906119c857506020840151516001600160a01b031615155b80156119e157506040840151516001600160a01b031615155b80156119f1575060008460800151115b80156119fa5750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a087015184528252918290208551815490851673ffffffffffffffffffffffffffffffffffffffff1990911617815581860151805195820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff1990941696909516959095179190911783559083015184939192906002840190611ab190826125e2565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b0390931692909217919091178155918101519091906004840190611b1590826125e2565b50505060608201518160050160006101000a81548160ff02191690836005811115611b4257611b426120b6565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e0820151805160098301908190611b8b90826125e2565b5060208201516001918201805460408086015160609687015161ffff1990931694151561ff0019169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c191611c409190612264565b60405180910390a450565b6003805460ff19168215159081179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600080611c966002846126a2565b611ca190600a61279f565b611caf9061ffff8616612560565b9050611cbc83600a61279f565b611cc68287612560565b611cd091906127ae565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611d25604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b815260408051606080820183526000808352602083810191909152928201529101908152602001600081526020016000815260200160008152602001600015158152602001611da3604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b80356001600160a01b0381168114611dbf57600080fd5b919050565b600060208284031215611dd657600080fd5b61182882611da8565b60008060408385031215611df257600080fd5b611dfb83611da8565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611e4357611e43611e09565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e7257611e72611e09565b604052919050565b600067ffffffffffffffff821115611e9457611e94611e09565b5060051b60200190565b600082601f830112611eaf57600080fd5b81356020611ec4611ebf83611e7a565b611e49565b82815260059290921b84018101918181019086841115611ee357600080fd5b8286015b84811015611efe5780358352918301918301611ee7565b509695505050505050565b60008060408385031215611f1c57600080fd5b823567ffffffffffffffff80821115611f3457600080fd5b818501915085601f830112611f4857600080fd5b81356020611f58611ebf83611e7a565b82815260059290921b84018101918181019089841115611f7757600080fd5b948201945b83861015611f9c57611f8d86611da8565b82529482019490820190611f7c565b96505086013592505080821115611fb257600080fd5b50611fbf85828601611e9e565b9150509250929050565b600060208284031215611fdb57600080fd5b813567ffffffffffffffff811115611ff257600080fd5b8201610100818503121561182857600080fd5b8015158114610e2f57600080fd5b8035611dbf81612005565b60006020828403121561203057600080fd5b813561182881612005565b6000815180845260005b8181101561206157602081850181015186830182015201612045565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526119fa606085018261203b565b634e487b7160e01b600052602160045260246000fd5b600681106120ea57634e487b7160e01b600052602160045260246000fd5b9052565b6000815160808452612103608085018261203b565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b602081526121556020820183516001600160a01b03169052565b60006020830151610100806040850152612173610120850183612081565b91506040850151601f19808685030160608701526121918483612081565b9350606087015191506121a760808701836120cc565b608087015160a087015260a087015160c087015260c087015191506121d060e087018315159052565b60e08701519150808685030183870152506121eb83826120ee565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008161221a5761221a6121f5565b506000190190565b634e487b7160e01b600052603260045260246000fd5b80820180821115611517576115176121f5565b60006001820161225d5761225d6121f5565b5060010190565b6020810161151782846120cc565b60006020828403121561228457600080fd5b5051919050565b803560ff81168114611dbf57600080fd5b600067ffffffffffffffff8311156122b6576122b6611e09565b6122c9601f8401601f1916602001611e49565b90508281528383830111156122dd57600080fd5b828260208301376000602084830101529392505050565b60006060828403121561230657600080fd5b6040516060810167ffffffffffffffff828210818311171561232a5761232a611e09565b8160405282935061233a85611da8565b83526123486020860161228b565b6020840152604085013591508082111561236157600080fd5b508301601f8101851361237357600080fd5b6123828582356020840161229c565b6040830152505092915050565b803560068110611dbf57600080fd5b6000608082840312156123b057600080fd5b6040516080810167ffffffffffffffff82821081831117156123d4576123d4611e09565b8160405282935084359150808211156123ec57600080fd5b508301601f810185136123fe57600080fd5b61240d8582356020840161229c565b825250602083013561241e81612005565b602082015261242f6040840161228b565b604082015261244060608401611da8565b60608201525092915050565b6000610100823603121561245f57600080fd5b612467611e1f565b61247083611da8565b8152602083013567ffffffffffffffff8082111561248d57600080fd5b612499368387016122f4565b602084015260408501359150808211156124b257600080fd5b6124be368387016122f4565b60408401526124cf6060860161238f565b60608401526080850135608084015260a085013560a08401526124f460c08601612013565b60c084015260e085013591508082111561250d57600080fd5b5061251a3682860161239e565b60e08301525092915050565b600181811c9082168061253a57607f821691505b60208210810361255a57634e487b7160e01b600052602260045260246000fd5b50919050565b8082028115828204841417611517576115176121f5565b60006020828403121561258957600080fd5b815161182881612005565b601f821115610a7457600081815260208120601f850160051c810160208610156125bb5750805b601f850160051c820191505b818110156125da578281556001016125c7565b505050505050565b815167ffffffffffffffff8111156125fc576125fc611e09565b6126108161260a8454612526565b84612594565b602080601f831160018114612645576000841561262d5750858301515b600019600386901b1c1916600185901b1785556125da565b600085815260208120601f198616915b8281101561267457888601518255948401946001909101908401612655565b50858210156126925787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60ff8281168282160390811115611517576115176121f5565b600181815b808511156126f65781600019048211156126dc576126dc6121f5565b808516156126e957918102915b93841c93908002906126c0565b509250929050565b60008261270d57506001611517565b8161271a57506000611517565b8160018114612730576002811461273a57612756565b6001915050611517565b60ff84111561274b5761274b6121f5565b50506001821b611517565b5060208310610133831016604e8410600b8410161715612779575081810a611517565b61278383836126bb565b8060001904821115612797576127976121f5565b029392505050565b600061182860ff8416836126fe565b6000826127cb57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220928828c720fea7da98fe1e2d2b7e4b43a1f8cefc353e153edcc1407a1f36648d64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
