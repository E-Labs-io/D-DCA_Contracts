/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccountSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "DCAAccount_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "strategyId_",
        type: "uint256[]",
      },
    ],
    name: "ExecuteBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "depositReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "withdrawReinvestMethod",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "reinvestSpender",
                type: "address",
              },
            ],
            internalType: "struct DCAReinvest.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526006805460ff191660011790553480156200001e57600080fd5b50604051620026cb380380620026cb83398101604081905262000041916200023c565b3360009081526020819052604090205460ff16806200008957507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031633145b620000da5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640160405180910390fd5b81516003805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600480549183166001600160a01b031992831617905560c084015160058054919093169116179055620001a881620001b0565b50506200032e565b60068054610100600160a81b0319166101006001600160a01b038416908102919091179091556040513381527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b22999060200160405180910390a250565b805161ffff811681146200021f57600080fd5b919050565b80516001600160a01b03811681146200021f57600080fd5b6000808284036101008112156200025257600080fd5b60e08112156200026157600080fd5b5060405160e081016001600160401b03811182821017156200029357634e487b7160e01b600052604160045260246000fd5b604052620002a1846200020c565b8152620002b1602085016200020c565b6020820152620002c4604085016200020c565b6040820152620002d7606085016200020c565b6060820152620002ea6080850162000224565b6080820152620002fd60a0850162000224565b60a08201526200031060c0850162000224565b60c082015291506200032560e0840162000224565b90509250929050565b61238d806200033e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637048027511610097578063a8c2ec0311610066578063a8c2ec03146101f2578063d9fa9c1a14610205578063f2fde38b14610231578063f3e8ff5b1461024457600080fd5b8063704802751461018a578063715018a61461019d578063892cd8f5146101a55780638da5cb5b146101b857600080fd5b80633adee794116100d35780633adee7941461014a5780633c7c46dc1461015c5780635864badb146101645780635b2fc9581461017757600080fd5b80631785f53c146100fa57806318f1f54d1461010f57806327b827b714610137575b600080fd5b61010d61010836600461191a565b610264565b005b61012261011d366004611935565b61028d565b60405190151581526020015b60405180910390f35b61012261014536600461195f565b6102b9565b6008545b60405190815260200161012e565b60075461014e565b61010d610172366004611a9b565b6103b6565b61010d610185366004611935565b61073d565b61010d61019836600461191a565b610983565b61010d6109af565b61010d6101b3366004611935565b6109c3565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161012e565b61010d61020036600461191a565b610b0d565b61012261021336600461191a565b6001600160a01b031660009081526020819052604090205460ff1690565b61010d61023f36600461191a565b610cd3565b610257610252366004611935565b610d2a565b60405161012e9190611c75565b61026c6110c8565b6001600160a01b03166000908152602081905260409020805460ff19169055565b6000610299838361113c565b600780549060006102a983611d45565b9190505550600190505b92915050565b60065460009060ff166103295760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b60648201526084015b60405180910390fd5b61033a61033583611f6a565b6111a7565b6103865760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207374726174656779000000000000000000000000000000006044820152606401610320565b61039761039283611f6a565b61122c565b600780549060006103a783612044565b9190505550600190505b919050565b3360009081526020819052604090205460ff16806103fd57507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031633145b6104495760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610320565b60065460ff166104b15760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b6064820152608401610320565b600a825111156105035760405162461bcd60e51b815260206004820152601d60248201527f4d6178696d756d20313020657865637574696f6e7320616c6c6f7765640000006044820152606401610320565b805182511461057a5760405162461bcd60e51b815260206004820152602560248201527f4163636f756e7473202620537472617465677920636f756e7420646f6e27742060448201527f6d617463680000000000000000000000000000000000000000000000000000006064820152608401610320565b60005b82518110156107385743610602600160008685815181106105a0576105a061205d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106105dc576105dc61205d565b60209081029190910181015182528101919091526040016000206005015460ff1661147c565b600260008685815181106106185761061861205d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008585815181106106545761065461205d565b60200260200101518152602001908152602001600020546106759190612073565b1015610726576106b78382815181106106905761069061205d565b60200260200101518383815181106106aa576106aa61205d565b6020026020010151611597565b15610726578181815181106106ce576106ce61205d565b60200260200101518382815181106106e8576106e861205d565b60200260200101516001600160a01b03167f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e060405160405180910390a35b8061073081612044565b91505061057d565b505050565b3360009081526020819052604090205460ff168061078457507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031633145b6107d05760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610320565b6001600160a01b038216600090815260016020908152604080832084845290915290206008015460ff1661086c5760405162461bcd60e51b815260206004820152602660248201527f4578656375746f723a204163636f756e7420616c726561647920756e7375627360448201527f63726962656400000000000000000000000000000000000000000000000000006064820152608401610320565b6001600160a01b038216600081815260016020908152604080832085845290915290819020600801805460ff19169055517fa30b19970000000000000000000000000000000000000000000000000000000081526004810183905263a30b199790602401600060405180830381600087803b1580156108ea57600080fd5b505af11580156108fe573d6000803e3d6000fd5b50506007805492509050600061091383611d45565b90915550506001600160a01b03821660008181526001602090815260408083208584529091528082206005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916109779160ff1690612086565b60405180910390a45050565b61098b6110c8565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6109b76110c8565b6109c1600061166d565b565b3360009081526020819052604090205460ff1680610a0a57507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031633145b610a565760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610320565b60065460ff16610abe5760405162461bcd60e51b815260206004820152602d60248201527f4443414578656375746f72203a205b69734163746976655d204578656375746f60448201526c72206973206f6e20706175736560981b6064820152608401610320565b6000610aca8383611597565b905080156107385760405182906001600160a01b038516907f647e094a2b06f56215fbf82c903045a0a7192871b85d64cbd2596039597fd0e090600090a3505050565b3360009081526020819052604090205460ff1680610b5457507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031633145b610ba05760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e0000000000000000006044820152606401610320565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c269190612094565b90508015610738576000806000610c3c846116eb565b6003549295509093509150610c67906801000000000000000090046001600160a01b0316848761174a565b600454610c7e906001600160a01b0316838761174a565b600554610c95906001600160a01b0316828761174a565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b610cdb6110c8565b6001600160a01b038116610d1e576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610320565b610d278161166d565b50565b610d3261182d565b6001600160a01b038381166000908152600160208181526040808420878552825292839020835161010081018552815486168152845160608101865293820180549687168552600160a01b90960460ff1684840152600282018054919692959387019493840191610da2906120ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610dce906120ad565b8015610e1b5780601f10610df057610100808354040283529160200191610e1b565b820191906000526020600020905b815481529060010190602001808311610dfe57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610e73906120ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9f906120ad565b8015610eec5780601f10610ec157610100808354040283529160200191610eec565b820191906000526020600020905b815481529060010190602001808311610ecf57829003601f168201915b50505091909252505050815260058281015460209092019160ff1690811115610f1757610f17611bd6565b6005811115610f2857610f28611bd6565b815260068201546020808301919091526007830154604080840191909152600884015460ff90811615156060850152815160a08101835260098601805480841615158352610100900490921693810193909352600a850180546080909501949192840191610f95906120ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc1906120ad565b801561100e5780601f10610fe35761010080835404028352916020019161100e565b820191906000526020600020905b815481529060010190602001808311610ff157829003601f168201915b50505050508152602001600282018054611027906120ad565b80601f0160208091040260200160405190810160405280929190818152602001828054611053906120ad565b80156110a05780601f10611075576101008083540402835291602001916110a0565b820191906000526020600020905b81548152906001019060200180831161108357829003601f168201915b5050509183525050600391909101546001600160a01b03166020909101529052509392505050565b336110fa7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146109c1576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610320565b6001600160a01b038216600081815260016020908152604080832085845290915280822060088101805460ff191690556005015490519192849290917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916109779160ff1690612086565b60008060059050600081846060015160058111156111c7576111c7611bd6565b855191101591506001600160a01b0316158015906111f257506020840151516001600160a01b031615155b801561120b57506040840151516001600160a01b031615155b801561121b575060008460800151115b80156112245750805b949350505050565b600160c0820181905281516001600160a01b0390811660009081526020838152604080832060a087015184528252918290208551815490851673ffffffffffffffffffffffffffffffffffffffff1990911617815581860151805195820180549382015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909416969095169590951791909117835590830151849391929060028401906112d99082612135565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b039093169290921791909117815591810151909190600484019061133d9082612135565b50505060608201518160050160006101000a81548160ff0219169083600581111561136a5761136a611bd6565b02179055506080820151600682015560a0820151600782015560c082015160088201805491151560ff1990921691909117905560e08201518051600983018054602084015160ff166101000261ff00199315159390931661ffff19909116179190911781556040820151600a8401906113e39082612135565b50606082015160028201906113f89082612135565b50608091909101516003909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392831617905560a084015184516060860151604051600196509294509216917f514c725e2967b29cd7370d3c6c5390c20ec70cf4093b17b399d39c6f04c7f4c1916114719190612086565b60405180910390a450565b60008082600581111561149157611491611bd6565b0361149e5750603c919050565b60018260058111156114b2576114b2611bd6565b036114c3576102b3603c60056121f5565b60028260058111156114d7576114d7611bd6565b036114e6575062015180919050565b60038260058111156114fa576114fa611bd6565b0361150957506202a300919050565b600482600581111561151d5761151d611bd6565b0361152c575062093a80919050565b600582600581111561154057611540611bd6565b0361154f57506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c00006044820152606401610320565b6003546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611613573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611637919061220c565b90508015611666576001600160a01b038416600090815260026020908152604080832086845290915290204390555b9392505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6003546000908190819061170690859061ffff1660126117dc565b60035490935061172390859062010000900461ffff1660126117dc565b600354909250611742908590640100000000900461ffff1660126117dc565b929491935050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af11580156117b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d6919061220c565b50505050565b6000806117ea600284612229565b6117f590600a612326565b6118039061ffff86166121f5565b905061181083600a612326565b61181a82876121f5565b6118249190612335565b95945050505050565b60405180610100016040528060006001600160a01b03168152602001611879604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260200160008152602001600081526020016000151581526020016118fe6040518060a00160405280600015158152602001600060ff168152602001606081526020016060815260200160006001600160a01b031681525090565b905290565b80356001600160a01b03811681146103b157600080fd5b60006020828403121561192c57600080fd5b61166682611903565b6000806040838503121561194857600080fd5b61195183611903565b946020939093013593505050565b60006020828403121561197157600080fd5b813567ffffffffffffffff81111561198857600080fd5b8201610100818503121561166657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156119d5576119d561199b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611a0457611a0461199b565b604052919050565b600067ffffffffffffffff821115611a2657611a2661199b565b5060051b60200190565b600082601f830112611a4157600080fd5b81356020611a56611a5183611a0c565b6119db565b82815260059290921b84018101918181019086841115611a7557600080fd5b8286015b84811015611a905780358352918301918301611a79565b509695505050505050565b60008060408385031215611aae57600080fd5b823567ffffffffffffffff80821115611ac657600080fd5b818501915085601f830112611ada57600080fd5b81356020611aea611a5183611a0c565b82815260059290921b84018101918181019089841115611b0957600080fd5b948201945b83861015611b2e57611b1f86611903565b82529482019490820190611b0e565b96505086013592505080821115611b4457600080fd5b50611b5185828601611a30565b9150509250929050565b6000815180845260005b81811015611b8157602081850181015186830182015201611b65565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03815116825260ff602082015116602083015260006040820151606060408501526112246060850182611b5b565b634e487b7160e01b600052602160045260246000fd5b60068110611c0a57634e487b7160e01b600052602160045260246000fd5b9052565b80511515825260ff60208201511660208301526000604082015160a06040850152611c3c60a0850182611b5b565b905060608301518482036060860152611c558282611b5b565b9150506001600160a01b0360808401511660808501528091505092915050565b60208152611c8f6020820183516001600160a01b03169052565b60006020830151610100806040850152611cad610120850183611ba1565b91506040850151601f1980868503016060870152611ccb8483611ba1565b935060608701519150611ce16080870183611bec565b608087015160a087015260a087015160c087015260c08701519150611d0a60e087018315159052565b60e0870151915080868503018387015250611d258382611c0e565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600081611d5457611d54611d2f565b506000190190565b803560ff811681146103b157600080fd5b600067ffffffffffffffff831115611d8757611d8761199b565b611d9a601f8401601f19166020016119db565b9050828152838383011115611dae57600080fd5b828260208301376000602084830101529392505050565b600060608284031215611dd757600080fd5b6040516060810167ffffffffffffffff8282108183111715611dfb57611dfb61199b565b81604052829350611e0b85611903565b8352611e1960208601611d5c565b60208401526040850135915080821115611e3257600080fd5b508301601f81018513611e4457600080fd5b611e5385823560208401611d6d565b6040830152505092915050565b8035600681106103b157600080fd5b8015158114610d2757600080fd5b80356103b181611e6f565b600082601f830112611e9957600080fd5b61166683833560208501611d6d565b600060a08284031215611eba57600080fd5b60405160a0810167ffffffffffffffff8282108183111715611ede57611ede61199b565b8160405282935084359150611ef282611e6f565b818352611f0160208601611d5c565b60208401526040850135915080821115611f1a57600080fd5b611f2686838701611e88565b60408401526060850135915080821115611f3f57600080fd5b50611f4c85828601611e88565b606083015250611f5e60808401611903565b60808201525092915050565b60006101008236031215611f7d57600080fd5b611f856119b1565b611f8e83611903565b8152602083013567ffffffffffffffff80821115611fab57600080fd5b611fb736838701611dc5565b60208401526040850135915080821115611fd057600080fd5b611fdc36838701611dc5565b6040840152611fed60608601611e60565b60608401526080850135608084015260a085013560a084015261201260c08601611e7d565b60c084015260e085013591508082111561202b57600080fd5b5061203836828601611ea8565b60e08301525092915050565b60006001820161205657612056611d2f565b5060010190565b634e487b7160e01b600052603260045260246000fd5b808201808211156102b3576102b3611d2f565b602081016102b38284611bec565b6000602082840312156120a657600080fd5b5051919050565b600181811c908216806120c157607f821691505b6020821081036120e157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561073857600081815260208120601f850160051c8101602086101561210e5750805b601f850160051c820191505b8181101561212d5782815560010161211a565b505050505050565b815167ffffffffffffffff81111561214f5761214f61199b565b6121638161215d84546120ad565b846120e7565b602080601f83116001811461219857600084156121805750858301515b600019600386901b1c1916600185901b17855561212d565b600085815260208120601f198616915b828110156121c7578886015182559484019460019091019084016121a8565b50858210156121e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820281158282048414176102b3576102b3611d2f565b60006020828403121561221e57600080fd5b815161166681611e6f565b60ff82811682821603908111156102b3576102b3611d2f565b600181815b8085111561227d57816000190482111561226357612263611d2f565b8085161561227057918102915b93841c9390800290612247565b509250929050565b600082612294575060016102b3565b816122a1575060006102b3565b81600181146122b757600281146122c1576122dd565b60019150506102b3565b60ff8411156122d2576122d2611d2f565b50506001821b6102b3565b5060208310610133831016604e8410600b8410161715612300575081810a6102b3565b61230a8383612242565b806000190482111561231e5761231e611d2f565b029392505050565b600061166660ff841683612285565b60008261235257634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122036d2c24e0937202975f8a84ef7f0b329b4db1ae4c579597d8ef61df15909181c64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
