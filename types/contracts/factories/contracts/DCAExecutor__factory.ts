/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IDCADataStructures.Strategy",
        name: "interval_",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccontSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ForceFeeFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "GetIntervalsStrategys",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GetTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "contract IERC20",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526009805460ff191660011790553480156200001e57600080fd5b50604051620022283803806200222883398101604081905262000041916200036c565b33806200006957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000074816200028b565b503360009081526001602052604090205460ff16806200009e57506000546001600160a01b031633145b620000ec5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640162000060565b81516006805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600780549183166001600160a01b031992831617905560c084015160088054919093169116179055620001ba81620002db565b62000283600560205260147f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc556116807f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b55612d007f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55619d807fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc05560046000526202a3007f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d555565b50506200045e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60098054610100600160a81b0319166101006001600160a01b03841690810291909117909155604080519182523360208301527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b2299910160405180910390a150565b805161ffff811681146200034f57600080fd5b919050565b80516001600160a01b03811681146200034f57600080fd5b6000808284036101008112156200038257600080fd5b60e08112156200039157600080fd5b5060405160e081016001600160401b0381118282101715620003c357634e487b7160e01b600052604160045260246000fd5b604052620003d1846200033c565b8152620003e1602085016200033c565b6020820152620003f4604085016200033c565b604082015262000407606085016200033c565b60608201526200041a6080850162000354565b60808201526200042d60a0850162000354565b60a08201526200044060c0850162000354565b60c082015291506200045560e0840162000354565b90509250929050565b611dba806200046e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101355780638da5cb5b1461013d578063a44e13e014610158578063f2fde38b14610184578063f94d12be14610197578063fd4549dd146101b757600080fd5b80631785f53c146100b95780634162a883146100ce57806343771d6d146100e157806357b6e05b146100f7578063585134421461011a5780637048027514610122575b600080fd5b6100cc6100c73660046114c6565b6101ca565b005b6100cc6100dc366004611502565b6101f3565b600a546040519081526020015b60405180910390f35b61010a61010536600461151f565b6103ae565b60405190151581526020016100ee565b6100cc6103da565b6100cc6101303660046114c6565b61044a565b6100cc610479565b6000546040516001600160a01b0390911681526020016100ee565b61010a6101663660046114c6565b6001600160a01b031660009081526001602052604090205460ff1690565b6100cc6101923660046114c6565b61048b565b6101aa6101a5366004611502565b6104c9565b6040516100ee9190611603565b61010a6101c536600461151f565b610782565b6101d26107f4565b6001600160a01b03166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff168061021b57506000546001600160a01b031633145b6102665760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b99034b9903737ba1030b71030b236b4b760491b60448201526064015b60405180910390fd5b60095460ff166102aa5760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b604482015260640161025d565b8042600560008360048111156102c2576102c26115cb565b60048111156102d3576102d36115cb565b815260200190815260200160002054600460008460048111156102f8576102f86115cb565b6004811115610309576103096115cb565b8152602001908152602001600020546103229190611706565b106103665760405162461bcd60e51b81526020600482015260146024820152731110d048125b9d195c9d985b081b9bdd081b595d60621b604482015260640161025d565b61036f82610821565b816004811115610381576103816115cb565b6040517f722c785bc9118de1273269e2df382c3d675c0a0de27d86796a424652d817e47190600090a25050565b60006001600a60008282546103c3919061171f565b909155506103d2905082610bb1565b506001919050565b3360009081526001602052604090205460ff168061040257506000546001600160a01b031633145b6104485760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b99034b9903737ba1030b71030b236b4b760491b604482015260640161025d565b565b6104526107f4565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6104816107f4565b6104486000610bf7565b6104936107f4565b6001600160a01b0381166104bd57604051631e4fbdf760e01b81526000600482015260240161025d565b6104c681610bf7565b50565b6060600260008360048111156104e1576104e16115cb565b60048111156104f2576104f26115cb565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561077757600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff1681870152600283018054959693959387019491939184019161059390611732565b80601f01602080910402602001604051908101604052809291908181526020018280546105bf90611732565b801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061066490611732565b80601f016020809104026020016040519081016040528092919081815260200182805461069090611732565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610708576107086115cb565b6004811115610719576107196115cb565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a0909101529082526001929092019101610520565b505050509050919050565b60095460009060ff166107c95760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b604482015260640161025d565b6107d282610c47565b6001600a60008282546107e59190611706565b9091555060019150505b919050565b6000546001600160a01b031633146104485760405163118cdaa760e01b815233600482015260240161025d565b600060026000836004811115610839576108396115cb565b600481111561084a5761084a6115cb565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610acf57600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916108eb90611732565b80601f016020809104026020016040519081016040528092919081815260200182805461091790611732565b80156109645780601f1061093957610100808354040283529160200191610964565b820191906000526020600020905b81548152906001019060200180831161094757829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906109bc90611732565b80601f01602080910402602001604051908101604052809291908181526020018280546109e890611732565b8015610a355780601f10610a0a57610100808354040283529160200191610a35565b820191906000526020600020905b815481529060010190602001808311610a1857829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610a6057610a606115cb565b6004811115610a7157610a716115cb565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a0909101529082526001929092019101610878565b50505050905060005b8151811015610b5a57818181518110610af357610af361176c565b602002602001015160e0015115610b4857610b48828281518110610b1957610b1961176c565b602002602001015160000151838381518110610b3757610b3761176c565b602002602001015160a00151610d85565b80610b5281611782565b915050610ad8565b504260046000846004811115610b7257610b726115cb565b6004811115610b8357610b836115cb565b8152602001908152602001600020819055506001600b6000828254610ba89190611706565b90915550505050565b610bba81610dfa565b7f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e01816001604051610bec929190611888565b60405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600281610c5c6080850160608601611502565b6004811115610c6d57610c6d6115cb565b6004811115610c7e57610c7e6115cb565b815260208101919091526040016000908120549150600290610ca66080850160608601611502565b6004811115610cb757610cb76115cb565b6004811115610cc857610cc86115cb565b815260208082019290925260400160009081208054600181018255908252919020839160090201610cf98282611bb6565b5081905060036000610d0e60208601866114c6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460a001358152602001908152602001600020819055507f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e01826001604051610d79929190611888565b60405180910390a15050565b6006546040516303a9568360e11b815260048101839052660100000000000090910461ffff1660248201526001600160a01b03831690630752ad0690604401600060405180830381600087803b158015610dde57600080fd5b505af1158015610df2573d6000803e3d6000fd5b505050505050565b6000600381610e0c60208501856114c6565b6001600160a01b031681526020808201929092526040908101600090812060a086013582529092528120549150600281610e4c6080860160608701611502565b6004811115610e5d57610e5d6115cb565b6004811115610e6e57610e6e6115cb565b8152602001908152602001600020600160026000866060016020810190610e959190611502565b6004811115610ea657610ea66115cb565b6004811115610eb757610eb76115cb565b8152602081019190915260400160002054610ed2919061171f565b81548110610ee257610ee261176c565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610f4f90611732565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7b90611732565b8015610fc85780601f10610f9d57610100808354040283529160200191610fc8565b820191906000526020600020905b815481529060010190602001808311610fab57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061102090611732565b80601f016020809104026020016040519081016040528092919081815260200182805461104c90611732565b80156110995780601f1061106e57610100808354040283529160200191611099565b820191906000526020600020905b81548152906001019060200180831161107c57829003601f168201915b505050919092525050508152600582015460209091019060ff1660048111156110c4576110c46115cb565b60048111156110d5576110d56115cb565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a0909301929092529192508391600191600291600091611149918901908901611502565b600481111561115a5761115a6115cb565b600481111561116b5761116b6115cb565b8152602081019190915260400160002054611186919061171f565b146113675780600260006111a06080870160608801611502565b60048111156111b1576111b16115cb565b60048111156111c2576111c26115cb565b815260200190815260200160002083815481106111e1576111e161176c565b6000918252602091829020835160099092020180546001600160a01b039283166001600160a01b03199091161781558383015180516001830180549583015160ff16600160a01b026001600160a81b0319909616919094161793909317825560408301519092919060028401906112589082611cae565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b03909316929092179190911781559181015190919060048401906112ae9082611cae565b505050606082015160058201805460ff191660018360048111156112d4576112d46115cb565b02179055506080820151600682015560a080830151600783015560c08301516008909201805460e08501516101009586015161ffff1990921694151561ff001916949094179315159094029290921762010000600160b01b031916620100006001600160a01b03948516021790915582519091166000908152600360209081526040808320938501518352929052208290555b6002600061137b6080860160608701611502565b600481111561138c5761138c6115cb565b600481111561139d5761139d6115cb565b81526020019081526020016000208054806113ba576113ba611d6e565b60008281526020812060096000199093019283020180546001600160a01b03191681556001810180546001600160a81b0319168155909190816114006002850182611458565b50506003820180546001600160a81b031916815560006114236004850182611458565b50505060058101805460ff19169055600060068201819055600782015560080180546001600160b01b03191690559055505050565b50805461146490611732565b6000825580601f10611474575050565b601f0160209004906000526020600020908101906104c691905b808211156114a2576000815560010161148e565b5090565b6001600160a01b03811681146104c657600080fd5b80356107ef816114a6565b6000602082840312156114d857600080fd5b81356114e3816114a6565b9392505050565b600581106104c657600080fd5b80356107ef816114ea565b60006020828403121561151457600080fd5b81356114e3816114ea565b60006020828403121561153157600080fd5b813567ffffffffffffffff81111561154857600080fd5b820161012081850312156114e357600080fd5b60018060a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b818110156115a95782810184015187820160800152830161158d565b506000608082880101526080601f19601f830116870101935050505092915050565b634e487b7160e01b600052602160045260246000fd5b600581106115ff57634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156116e257888303603f19018552815180516001600160a01b0316845261012088820151818a8701526116628287018261155b565b915050878201518582038987015261167a828261155b565b91505060608083015161168f828801826115e1565b50506080828101519086015260a0808301519086015260c08083015115159086015260e080830151151590860152610100918201516001600160a01b03169190940152938601939086019060010161162a565b509098975050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611719576117196116f0565b92915050565b81810381811115611719576117196116f0565b600181811c9082168061174657607f821691505b60208210810361176657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060018201611794576117946116f0565b5060010190565b60008235605e198336030181126117b157600080fd5b90910192915050565b60ff811681146104c657600080fd5b600081356117d6816114a6565b6001600160a01b0316835260208201356117ef816117ba565b60ff166020840152604082013536839003601e1901811261180f57600080fd5b820160208101903567ffffffffffffffff81111561182c57600080fd5b80360382131561183b57600080fd5b60606040860152806060860152808260808701376000608082870101526080601f19601f8301168601019250505092915050565b80151581146104c657600080fd5b80356107ef8161186f565b604081526118a96040820161189c856114bb565b6001600160a01b03169052565b60006118b8602085018561179b565b6101208060608501526118cf6101608501836117c9565b91506118de604087018761179b565b848303603f190160808601526118f483826117c9565b925050611903606087016114f7565b61191060a08601826115e1565b50608086013560c085015260a086013560e085015261193160c0870161187d565b6101006119418187018315159052565b61194d60e0890161187d565b8015158785015291506119618189016114bb565b9250505061197b6101408501826001600160a01b03169052565b50831515602084015290506114e3565b60008135611719816114a6565b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008235605e198336030181126119ce57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b601f821115611a3457600081815260208120601f850160051c81016020861015611a155750805b601f850160051c820191505b81811015610df257828155600101611a21565b505050565b8135611a44816114a6565b611a4e8183611998565b50602080830135611a5e816117ba565b825460ff60a01b191660a09190911b60ff60a01b161782556001808301604085013536869003601e19018112611a9357600080fd5b8501803567ffffffffffffffff811115611aac57600080fd5b8036038583011315611abd57600080fd5b611ad181611acb8554611732565b856119ee565b6000601f821160018114611b075760008315611aef57508382018701355b600019600385901b1c1916600184901b178555611b60565b600085815260209020601f19841690835b82811015611b37578685018a0135825593890193908801908901611b18565b5084821015611b565760001960f88660031b161c198985880101351681555b50508583871b0185555b505050505050505050565b60008135611719816114ea565b60058210611b9657634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b600081356117198161186f565b611bc8611bc28361198b565b82611998565b611be1611bd860208401846119b8565b60018301611a39565b611bfa611bf160408401846119b8565b60038301611a39565b611c12611c0960608401611b6b565b60058301611b78565b6080820135600682015560a0820135600782015560088101611c4d611c3960c08501611ba9565b825490151560ff1660ff1991909116178255565b611c76611c5c60e08501611ba9565b82805461ff00191691151560081b61ff0016919091179055565b611a34611c86610100850161198b565b82805462010000600160b01b03191660109290921b62010000600160b01b0316919091179055565b815167ffffffffffffffff811115611cc857611cc86119d8565b611cdc81611cd68454611732565b846119ee565b602080601f831160018114611d115760008415611cf95750858301515b600019600386901b1c1916600185901b178555610df2565b600085815260208120601f198616915b82811015611d4057888601518255948401946001909101908401611d21565b5085821015611d5e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220f11addabb414933c8e91b8904d32eede19e339d1e87f1ec223afb3e0e458fe9a64736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
