/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IDCADataStructures.Strategy",
        name: "interval_",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccontSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ForceFeeFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "GetIntervalsStrategys",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "GetSpesificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GetTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526009805460ff191660011790553480156200001e57600080fd5b506040516200275d3803806200275d83398101604081905262000041916200036c565b33806200006957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000074816200028b565b503360009081526001602052604090205460ff16806200009e57506000546001600160a01b031633145b620000ec5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640162000060565b81516006805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600780549183166001600160a01b031992831617905560c084015160088054919093169116179055620001ba81620002db565b62000283600560205260147f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc556116807f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b55612d007f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55619d807fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc05560046000526202a3007f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d555565b50506200045e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60098054610100600160a81b0319166101006001600160a01b03841690810291909117909155604080519182523360208301527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b2299910160405180910390a150565b805161ffff811681146200034f57600080fd5b919050565b80516001600160a01b03811681146200034f57600080fd5b6000808284036101008112156200038257600080fd5b60e08112156200039157600080fd5b5060405160e081016001600160401b0381118282101715620003c357634e487b7160e01b600052604160045260246000fd5b604052620003d1846200033c565b8152620003e1602085016200033c565b6020820152620003f4604085016200033c565b604082015262000407606085016200033c565b60608201526200041a6080850162000354565b60808201526200042d60a0850162000354565b60a08201526200044060c0850162000354565b60c082015291506200045560e0840162000354565b90509250929050565b6122ef806200046e6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063715018a61161008c578063c958e43711610066578063c958e437146101af578063f2fde38b146101cf578063f94d12be146101e2578063fd4549dd1461020257600080fd5b8063715018a6146101605780638da5cb5b14610168578063a44e13e01461018357600080fd5b806357b6e05b116100bd57806357b6e05b146101225780635851344214610145578063704802751461014d57600080fd5b80631785f53c146100e45780634162a883146100f957806343771d6d1461010c575b600080fd5b6100f76100f236600461193e565b610215565b005b6100f7610107366004611973565b61023e565b600a546040519081526020015b60405180910390f35b610135610130366004611990565b610416565b6040519015158152602001610119565b6100f7610442565b6100f761015b36600461193e565b6104b8565b6100f76104e7565b6000546040516001600160a01b039091168152602001610119565b61013561019136600461193e565b6001600160a01b031660009081526001602052604090205460ff1690565b6101c26101bd3660046119cc565b6104f9565b6040516101199190611b68565b6100f76101dd36600461193e565b6107af565b6101f56101f0366004611973565b610806565b6040516101199190611b7b565b610135610210366004611990565b610abf565b61021d610b3f565b6001600160a01b03166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff168061026657506000546001600160a01b031633145b6102b75760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064015b60405180910390fd5b60095460ff166103095760405162461bcd60e51b815260206004820152600f60248201527f444341206973206f6e207061757365000000000000000000000000000000000060448201526064016102ae565b80426005600083600481111561032157610321611a7e565b600481111561033257610332611a7e565b8152602001908152602001600020546004600084600481111561035757610357611a7e565b600481111561036857610368611a7e565b8152602001908152602001600020546103819190611bf3565b106103ce5760405162461bcd60e51b815260206004820152601460248201527f44434120496e74657276616c206e6f74206d657400000000000000000000000060448201526064016102ae565b6103d782610b85565b8160048111156103e9576103e9611a7e565b6040517f722c785bc9118de1273269e2df382c3d675c0a0de27d86796a424652d817e47190600090a25050565b60006001600a600082825461042b9190611c0c565b9091555061043a905082610f15565b506001919050565b3360009081526001602052604090205460ff168061046a57506000546001600160a01b031633145b6104b65760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e00000000000000000060448201526064016102ae565b565b6104c0610b3f565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6104ef610b3f565b6104b66000610f5b565b610501611832565b6002600084600481111561051757610517611a7e565b600481111561052857610528611a7e565b8152602080820192909252604090810160009081206001600160a01b03881682526003845282822086835290935220548154811061056857610568611c1f565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916105d590611c35565b80601f016020809104026020016040519081016040528092919081815260200182805461060190611c35565b801561064e5780601f106106235761010080835404028352916020019161064e565b820191906000526020600020905b81548152906001019060200180831161063157829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906106a690611c35565b80601f01602080910402602001604051908101604052809291908181526020018280546106d290611c35565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561074a5761074a611a7e565b600481111561075b5761075b611a7e565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a09091015290505b9392505050565b6107b7610b3f565b6001600160a01b0381166107fa576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102ae565b61080381610f5b565b50565b60606002600083600481111561081e5761081e611a7e565b600481111561082f5761082f611a7e565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ab457600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916108d090611c35565b80601f01602080910402602001604051908101604052809291908181526020018280546108fc90611c35565b80156109495780601f1061091e57610100808354040283529160200191610949565b820191906000526020600020905b81548152906001019060200180831161092c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff1660208084019190915260048601805491909501949293919291840191906109a190611c35565b80601f01602080910402602001604051908101604052809291908181526020018280546109cd90611c35565b8015610a1a5780601f106109ef57610100808354040283529160200191610a1a565b820191906000526020600020905b8154815290600101906020018083116109fd57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610a4557610a45611a7e565b6004811115610a5657610a56611a7e565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a090910152908252600192909201910161085d565b505050509050919050565b60095460009060ff16610b145760405162461bcd60e51b815260206004820152600f60248201527f444341206973206f6e207061757365000000000000000000000000000000000060448201526064016102ae565b610b1d82610fab565b6001600a6000828254610b309190611bf3565b9091555060019150505b919050565b6000546001600160a01b031633146104b6576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102ae565b600060026000836004811115610b9d57610b9d611a7e565b6004811115610bae57610bae611a7e565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610e3357600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610c4f90611c35565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7b90611c35565b8015610cc85780601f10610c9d57610100808354040283529160200191610cc8565b820191906000526020600020905b815481529060010190602001808311610cab57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610d2090611c35565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4c90611c35565b8015610d995780601f10610d6e57610100808354040283529160200191610d99565b820191906000526020600020905b815481529060010190602001808311610d7c57829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610dc457610dc4611a7e565b6004811115610dd557610dd5611a7e565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a0909101529082526001929092019101610bdc565b50505050905060005b8151811015610ebe57818181518110610e5757610e57611c1f565b602002602001015160e0015115610eac57610eac828281518110610e7d57610e7d611c1f565b602002602001015160000151838381518110610e9b57610e9b611c1f565b602002602001015160a001516110e9565b80610eb681611c6f565b915050610e3c565b504260046000846004811115610ed657610ed6611a7e565b6004811115610ee757610ee7611a7e565b8152602001908152602001600020819055506001600b6000828254610f0c9190611bf3565b90915550505050565b610f1e81611177565b7f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e01816001604051610f50929190611d75565b60405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600281610fc06080850160608601611973565b6004811115610fd157610fd1611a7e565b6004811115610fe257610fe2611a7e565b81526020810191909152604001600090812054915060029061100a6080850160608601611973565b600481111561101b5761101b611a7e565b600481111561102c5761102c611a7e565b81526020808201929092526040016000908120805460018101825590825291902083916009020161105d82826120be565b5081905060036000611072602086018661193e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460a001358152602001908152602001600020819055507f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e018260016040516110dd929190611d75565b60405180910390a15050565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff1660248201526001600160a01b0383169063ca4c8b3190604401600060405180830381600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b505050505050565b6000600381611189602085018561193e565b6001600160a01b031681526020808201929092526040908101600090812060a0860135825290925281205491506002816111c96080860160608701611973565b60048111156111da576111da611a7e565b60048111156111eb576111eb611a7e565b81526020019081526020016000206001600260008660600160208101906112129190611973565b600481111561122357611223611a7e565b600481111561123457611234611a7e565b815260208101919091526040016000205461124f9190611c0c565b8154811061125f5761125f611c1f565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916112cc90611c35565b80601f01602080910402602001604051908101604052809291908181526020018280546112f890611c35565b80156113455780601f1061131a57610100808354040283529160200191611345565b820191906000526020600020905b81548152906001019060200180831161132857829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061139d90611c35565b80601f01602080910402602001604051908101604052809291908181526020018280546113c990611c35565b80156114165780601f106113eb57610100808354040283529160200191611416565b820191906000526020600020905b8154815290600101906020018083116113f957829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561144157611441611a7e565b600481111561145257611452611a7e565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a09093019290925291925083916001916002916000916114c6918901908901611973565b60048111156114d7576114d7611a7e565b60048111156114e8576114e8611a7e565b81526020810191909152604001600020546115039190611c0c565b1461170d57806002600061151d6080870160608801611973565b600481111561152e5761152e611a7e565b600481111561153f5761153f611a7e565b8152602001908152602001600020838154811061155e5761155e611c1f565b6000918252602091829020835160099092020180546001600160a01b039283166001600160a01b03199091161781558383015180516001830180549583015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909616919094161793909317825560408301519092919060028401906115e390826121e3565b5050506040828101518051600384018054602084015160ff16600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199091166001600160a01b039093169290921791909117815591810151909190600484019061164790826121e3565b505050606082015160058201805460ff1916600183600481111561166d5761166d611a7e565b02179055506080820151600682015560a080830151600783015560c08301516008909201805460e08501516101009586015161ffff1990921694151561ff001916949094179315159094029290921775ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b03948516021790915582519091166000908152600360209081526040808320938501518352929052208290555b600260006117216080860160608701611973565b600481111561173257611732611a7e565b600481111561174357611743611a7e565b8152602001908152602001600020805480611760576117606122a3565b60008281526020812060096000199093019283020180546001600160a01b031916815560018101805474ffffffffffffffffffffffffffffffffffffffffff19168155909190816117b460028501826118d0565b505060038201805474ffffffffffffffffffffffffffffffffffffffffff1916815560006117e560048501826118d0565b50505060058101805460ff19169055600060068201819055600782015560080180547fffffffffffffffffffff000000000000000000000000000000000000000000001690559055505050565b60405180610120016040528060006001600160a01b0316815260200161187e604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b5080546118dc90611c35565b6000825580601f106118ec575050565b601f01602090049060005260206000209081019061080391905b8082111561191a5760008155600101611906565b5090565b6001600160a01b038116811461080357600080fd5b8035610b3a8161191e565b60006020828403121561195057600080fd5b81356107a88161191e565b6005811061080357600080fd5b8035610b3a8161195b565b60006020828403121561198557600080fd5b81356107a88161195b565b6000602082840312156119a257600080fd5b813567ffffffffffffffff8111156119b957600080fd5b820161012081850312156107a857600080fd5b6000806000606084860312156119e157600080fd5b83356119ec8161191e565b925060208401356119fc8161195b565b929592945050506040919091013590565b6001600160a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b81811015611a5c57828101840151878201608001528301611a40565b506000608082880101526080601f19601f830116870101935050505092915050565b634e487b7160e01b600052602160045260246000fd5b60058110611ab257634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260006101206020830151816020860152611adf82860182611a0d565b91505060408301518482036040860152611af98282611a0d565b9150506060830151611b0e6060860182611a94565b506080830151608085015260a083015160a085015260c0830151611b3660c086018215159052565b5060e0830151611b4a60e086018215159052565b50610100928301516001600160a01b03169390920192909252919050565b6020815260006107a86020830184611ab6565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611bd057603f19888603018452611bbe858351611ab6565b94509285019290850190600101611ba2565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611c0657611c06611bdd565b92915050565b81810381811115611c0657611c06611bdd565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611c4957607f821691505b602082108103611c6957634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201611c8157611c81611bdd565b5060010190565b60008235605e19833603018112611c9e57600080fd5b90910192915050565b60ff8116811461080357600080fd5b60008135611cc38161191e565b6001600160a01b031683526020820135611cdc81611ca7565b60ff166020840152604082013536839003601e19018112611cfc57600080fd5b820160208101903567ffffffffffffffff811115611d1957600080fd5b803603821315611d2857600080fd5b60606040860152806060860152808260808701376000608082870101526080601f19601f8301168601019250505092915050565b801515811461080357600080fd5b8035610b3a81611d5c565b60408152611d9660408201611d8985611933565b6001600160a01b03169052565b6000611da56020850185611c88565b610120806060850152611dbc610160850183611cb6565b9150611dcb6040870187611c88565b848303603f19016080860152611de18382611cb6565b925050611df060608701611968565b611dfd60a0860182611a94565b50608086013560c085015260a086013560e0850152611e1e60c08701611d6a565b610100611e2e8187018315159052565b611e3a60e08901611d6a565b801515878501529150611e4e818901611933565b92505050611e686101408501826001600160a01b03169052565b50831515602084015290506107a8565b60008135611c068161191e565b60008235605e19833603018112611e9b57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b601f821115611f0157600081815260208120601f850160051c81016020861015611ee25750805b601f850160051c820191505b8181101561116f57828155600101611eee565b505050565b8135611f118161191e565b81546001600160a01b0319166001600160a01b03821617825550602080830135611f3a81611ca7565b82547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1660a09190911b74ff0000000000000000000000000000000000000000161782556001808301604085013536869003601e19018112611f9b57600080fd5b8501803567ffffffffffffffff811115611fb457600080fd5b8036038583011315611fc557600080fd5b611fd981611fd38554611c35565b85611ebb565b6000601f82116001811461200f5760008315611ff757508382018701355b600019600385901b1c1916600184901b178555612068565b600085815260209020601f19841690835b8281101561203f578685018a0135825593890193908801908901612020565b508482101561205e5760001960f88660031b161c198985880101351681555b50508583871b0185555b505050505050505050565b60008135611c068161195b565b6005821061209e57634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b60008135611c0681611d5c565b6120e76120ca83611e78565b82546001600160a01b0319166001600160a01b0391909116178255565b6121006120f76020840184611e85565b60018301611f06565b6121196121106040840184611e85565b60038301611f06565b61213161212860608401612073565b60058301612080565b6080820135600682015560a082013560078201556008810161216c61215860c085016120b1565b825490151560ff1660ff1991909116178255565b61219561217b60e085016120b1565b82805461ff00191691151560081b61ff0016919091179055565b611f016121a56101008501611e78565b825475ffffffffffffffffffffffffffffffffffffffff0000191660109190911b75ffffffffffffffffffffffffffffffffffffffff000016178255565b815167ffffffffffffffff8111156121fd576121fd611ea5565b6122118161220b8454611c35565b84611ebb565b602080601f831160018114612246576000841561222e5750858301515b600019600386901b1c1916600185901b17855561116f565b600085815260208120601f198616915b8281101561227557888601518255948401946001909101908401612256565b50858210156122935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea264697066735822122024bbf33761585a9a432bd22ad09e42319e6b7e49ea2af302099e9b1f3858f6f764736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
