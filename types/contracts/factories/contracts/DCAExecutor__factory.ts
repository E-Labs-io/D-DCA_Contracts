/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../contracts/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IDCADataStructures.Strategy",
        name: "interval_",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "DCAAccontSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "ExecutedDCA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newExecutionEOA_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changer_",
        type: "address",
      },
    ],
    name: "ExecutionEOAAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "CheckIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ForceFeeFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "GetIntervalsStrategys",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "GetSpesificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GetTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokeData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "reinvest",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "address",
            name: "revestContract",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Unsubscribe",
    outputs: [
      {
        internalType: "bool",
        name: "sucsess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526009805460ff191660011790553480156200001e57600080fd5b506040516200262b3803806200262b83398101604081905262000041916200036c565b33806200006957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000074816200028b565b503360009081526001602052604090205460ff16806200009e57506000546001600160a01b031633145b620000ec5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f7420616e2061646d696e000000000000000000604482015260640162000060565b81516006805460208501516040860151606087015160808801516001600160a01b039081166801000000000000000002600160401b600160e01b031961ffff93841666010000000000000261ffff60301b19958516640100000000029590951663ffffffff60201b19968516620100000263ffffffff199098169490991693909317959095179390931695909517179390931617905560a0830151600780549183166001600160a01b031992831617905560c084015160088054919093169116179055620001ba81620002db565b62000283600560205260147f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc556116807f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b55612d007f89832631fb3c3307a103ba2c84ab569c64d6182a18893dcd163f0f1c2090733a55619d807fa9bc9a3a348c357ba16b37005d7e6b3236198c0e939f4af8c5f19b8deeb8ebc05560046000526202a3007f3eec716f11ba9e820c81ca75eb978ffb45831ef8b7a53e5e422c26008e1ca6d555565b50506200045e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60098054610100600160a81b0319166101006001600160a01b03841690810291909117909155604080519182523360208301527f3b0bf299f0737f59e2100945943806da75fe3460c252af26cd54645f565b2299910160405180910390a150565b805161ffff811681146200034f57600080fd5b919050565b80516001600160a01b03811681146200034f57600080fd5b6000808284036101008112156200038257600080fd5b60e08112156200039157600080fd5b5060405160e081016001600160401b0381118282101715620003c357634e487b7160e01b600052604160045260246000fd5b604052620003d1846200033c565b8152620003e1602085016200033c565b6020820152620003f4604085016200033c565b604082015262000407606085016200033c565b60608201526200041a6080850162000354565b60808201526200042d60a0850162000354565b60a08201526200044060c0850162000354565b60c082015291506200045560e0840162000354565b90509250929050565b6121bd806200046e6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063c958e43711610066578063c958e4371461019f578063f2fde38b146101bf578063f94d12be146101d2578063fd4549dd146101f257600080fd5b8063715018a6146101505780638da5cb5b14610158578063a44e13e01461017357600080fd5b80631785f53c146100d45780634162a883146100e957806343771d6d146100fc57806357b6e05b146101125780635851344214610135578063704802751461013d575b600080fd5b6100e76100e2366004611855565b610205565b005b6100e76100f736600461188a565b61022e565b600a546040519081526020015b60405180910390f35b6101256101203660046118a7565b6103e9565b6040519015158152602001610109565b6100e7610415565b6100e761014b366004611855565b610485565b6100e76104b4565b6000546040516001600160a01b039091168152602001610109565b610125610181366004611855565b6001600160a01b031660009081526001602052604090205460ff1690565b6101b26101ad3660046118e3565b6104c6565b6040516101099190611a7e565b6100e76101cd366004611855565b61077c565b6101e56101e036600461188a565b6107ba565b6040516101099190611a91565b6101256102003660046118a7565b610a73565b61020d610ae5565b6001600160a01b03166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff168061025657506000546001600160a01b031633145b6102a15760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b99034b9903737ba1030b71030b236b4b760491b60448201526064015b60405180910390fd5b60095460ff166102e55760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b6044820152606401610298565b8042600560008360048111156102fd576102fd611994565b600481111561030e5761030e611994565b8152602001908152602001600020546004600084600481111561033357610333611994565b600481111561034457610344611994565b81526020019081526020016000205461035d9190611b09565b106103a15760405162461bcd60e51b81526020600482015260146024820152731110d048125b9d195c9d985b081b9bdd081b595d60621b6044820152606401610298565b6103aa82610b12565b8160048111156103bc576103bc611994565b6040517f722c785bc9118de1273269e2df382c3d675c0a0de27d86796a424652d817e47190600090a25050565b60006001600a60008282546103fe9190611b22565b9091555061040d905082610ea2565b506001919050565b3360009081526001602052604090205460ff168061043d57506000546001600160a01b031633145b6104835760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b99034b9903737ba1030b71030b236b4b760491b6044820152606401610298565b565b61048d610ae5565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6104bc610ae5565b6104836000610ee8565b6104ce611749565b600260008460048111156104e4576104e4611994565b60048111156104f5576104f5611994565b8152602080820192909252604090810160009081206001600160a01b03881682526003845282822086835290935220548154811061053557610535611b35565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff168187015260028301805495969395938701949193918401916105a290611b4b565b80601f01602080910402602001604051908101604052809291908181526020018280546105ce90611b4b565b801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061067390611b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90611b4b565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b505050919092525050508152600582015460209091019060ff16600481111561071757610717611994565b600481111561072857610728611994565b8152600682015460208201526007820154604082015260089091015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a09091015290505b9392505050565b610784610ae5565b6001600160a01b0381166107ae57604051631e4fbdf760e01b815260006004820152602401610298565b6107b781610ee8565b50565b6060600260008360048111156107d2576107d2611994565b60048111156107e3576107e3611994565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a6857600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff1681870152600283018054959693959387019491939184019161088490611b4b565b80601f01602080910402602001604051908101604052809291908181526020018280546108b090611b4b565b80156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061095590611b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461098190611b4b565b80156109ce5780601f106109a3576101008083540402835291602001916109ce565b820191906000526020600020905b8154815290600101906020018083116109b157829003601f168201915b505050919092525050508152600582015460209091019060ff1660048111156109f9576109f9611994565b6004811115610a0a57610a0a611994565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a0909101529082526001929092019101610811565b505050509050919050565b60095460009060ff16610aba5760405162461bcd60e51b815260206004820152600f60248201526e444341206973206f6e20706175736560881b6044820152606401610298565b610ac382610f38565b6001600a6000828254610ad69190611b09565b9091555060019150505b919050565b6000546001600160a01b031633146104835760405163118cdaa760e01b8152336004820152602401610298565b600060026000836004811115610b2a57610b2a611994565b6004811115610b3b57610b3b611994565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610dc057600084815260209081902060408051610120810182526009860290920180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff16818701526002830180549596939593870194919391840191610bdc90611b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0890611b4b565b8015610c555780601f10610c2a57610100808354040283529160200191610c55565b820191906000526020600020905b815481529060010190602001808311610c3857829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff166020808401919091526004860180549190950194929391929184019190610cad90611b4b565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd990611b4b565b8015610d265780601f10610cfb57610100808354040283529160200191610d26565b820191906000526020600020905b815481529060010190602001808311610d0957829003601f168201915b505050919092525050508152600582015460209091019060ff166004811115610d5157610d51611994565b6004811115610d6257610d62611994565b815260068201546020808301919091526007830154604083015260089092015460ff80821615156060840152610100820416151560808301526201000090046001600160a01b031660a0909101529082526001929092019101610b69565b50505050905060005b8151811015610e4b57818181518110610de457610de4611b35565b602002602001015160e0015115610e3957610e39828281518110610e0a57610e0a611b35565b602002602001015160000151838381518110610e2857610e28611b35565b602002602001015160a00151611076565b80610e4381611b85565b915050610dc9565b504260046000846004811115610e6357610e63611994565b6004811115610e7457610e74611994565b8152602001908152602001600020819055506001600b6000828254610e999190611b09565b90915550505050565b610eab816110eb565b7f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e01816001604051610edd929190611c8b565b60405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600281610f4d608085016060860161188a565b6004811115610f5e57610f5e611994565b6004811115610f6f57610f6f611994565b815260208101919091526040016000908120549150600290610f97608085016060860161188a565b6004811115610fa857610fa8611994565b6004811115610fb957610fb9611994565b815260208082019290925260400160009081208054600181018255908252919020839160090201610fea8282611fb9565b5081905060036000610fff6020860186611855565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460a001358152602001908152602001600020819055507f844d5b120f39b2444fda8cef9113b11d59bbec6e8cae4ce4fc6010f843791e0182600160405161106a929190611c8b565b60405180910390a15050565b60065460405163ca4c8b3160e01b815260048101839052660100000000000090910461ffff1660248201526001600160a01b0383169063ca4c8b3190604401600060405180830381600087803b1580156110cf57600080fd5b505af11580156110e3573d6000803e3d6000fd5b505050505050565b60006003816110fd6020850185611855565b6001600160a01b031681526020808201929092526040908101600090812060a08601358252909252812054915060028161113d608086016060870161188a565b600481111561114e5761114e611994565b600481111561115f5761115f611994565b8152602001908152602001600020600160026000866060016020810190611186919061188a565b600481111561119757611197611994565b60048111156111a8576111a8611994565b81526020810191909152604001600020546111c39190611b22565b815481106111d3576111d3611b35565b6000918252602091829020604080516101208101825260099390930290910180546001600160a01b03908116845282516060810184526001830180549283168252600160a01b90920460ff1681870152600283018054959693959387019491939184019161124090611b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461126c90611b4b565b80156112b95780601f1061128e576101008083540402835291602001916112b9565b820191906000526020600020905b81548152906001019060200180831161129c57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b0381168352600160a01b900460ff16602080840191909152600486018054919095019492939192918401919061131190611b4b565b80601f016020809104026020016040519081016040528092919081815260200182805461133d90611b4b565b801561138a5780601f1061135f5761010080835404028352916020019161138a565b820191906000526020600020905b81548152906001019060200180831161136d57829003601f168201915b505050919092525050508152600582015460209091019060ff1660048111156113b5576113b5611994565b60048111156113c6576113c6611994565b8152600682015460208201526007820154604082015260089091015460ff808216151560608085019190915261010083049091161515608080850191909152620100009092046001600160a01b031660a090930192909252919250839160019160029160009161143a91890190890161188a565b600481111561144b5761144b611994565b600481111561145c5761145c611994565b81526020810191909152604001600020546114779190611b22565b14611658578060026000611491608087016060880161188a565b60048111156114a2576114a2611994565b60048111156114b3576114b3611994565b815260200190815260200160002083815481106114d2576114d2611b35565b6000918252602091829020835160099092020180546001600160a01b039283166001600160a01b03199091161781558383015180516001830180549583015160ff16600160a01b026001600160a81b03199096169190941617939093178255604083015190929190600284019061154990826120b1565b5050506040828101518051600384018054602084015160ff16600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117815591810151909190600484019061159f90826120b1565b505050606082015160058201805460ff191660018360048111156115c5576115c5611994565b02179055506080820151600682015560a080830151600783015560c08301516008909201805460e08501516101009586015161ffff1990921694151561ff001916949094179315159094029290921762010000600160b01b031916620100006001600160a01b03948516021790915582519091166000908152600360209081526040808320938501518352929052208290555b6002600061166c608086016060870161188a565b600481111561167d5761167d611994565b600481111561168e5761168e611994565b81526020019081526020016000208054806116ab576116ab612171565b60008281526020812060096000199093019283020180546001600160a01b03191681556001810180546001600160a81b0319168155909190816116f160028501826117e7565b50506003820180546001600160a81b0319168155600061171460048501826117e7565b50505060058101805460ff19169055600060068201819055600782015560080180546001600160b01b03191690559055505050565b60405180610120016040528060006001600160a01b03168152602001611795604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b5080546117f390611b4b565b6000825580601f10611803575050565b601f0160209004906000526020600020908101906107b791905b80821115611831576000815560010161181d565b5090565b6001600160a01b03811681146107b757600080fd5b8035610ae081611835565b60006020828403121561186757600080fd5b813561077581611835565b600581106107b757600080fd5b8035610ae081611872565b60006020828403121561189c57600080fd5b813561077581611872565b6000602082840312156118b957600080fd5b813567ffffffffffffffff8111156118d057600080fd5b8201610120818503121561077557600080fd5b6000806000606084860312156118f857600080fd5b833561190381611835565b9250602084013561191381611872565b929592945050506040919091013590565b60018060a01b0381511682526000602060ff818401511681850152604083015160606040860152805180606087015260005b8181101561197257828101840151878201608001528301611956565b506000608082880101526080601f19601f830116870101935050505092915050565b634e487b7160e01b600052602160045260246000fd5b600581106119c857634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b03168252600061012060208301518160208601526119f582860182611924565b91505060408301518482036040860152611a0f8282611924565b9150506060830151611a2460608601826119aa565b506080830151608085015260a083015160a085015260c0830151611a4c60c086018215159052565b5060e0830151611a6060e086018215159052565b50610100928301516001600160a01b03169390920192909252919050565b60208152600061077560208301846119cc565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ae657603f19888603018452611ad48583516119cc565b94509285019290850190600101611ab8565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611b1c57611b1c611af3565b92915050565b81810381811115611b1c57611b1c611af3565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680611b5f57607f821691505b602082108103611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201611b9757611b97611af3565b5060010190565b60008235605e19833603018112611bb457600080fd5b90910192915050565b60ff811681146107b757600080fd5b60008135611bd981611835565b6001600160a01b031683526020820135611bf281611bbd565b60ff166020840152604082013536839003601e19018112611c1257600080fd5b820160208101903567ffffffffffffffff811115611c2f57600080fd5b803603821315611c3e57600080fd5b60606040860152806060860152808260808701376000608082870101526080601f19601f8301168601019250505092915050565b80151581146107b757600080fd5b8035610ae081611c72565b60408152611cac60408201611c9f8561184a565b6001600160a01b03169052565b6000611cbb6020850185611b9e565b610120806060850152611cd2610160850183611bcc565b9150611ce16040870187611b9e565b848303603f19016080860152611cf78382611bcc565b925050611d066060870161187f565b611d1360a08601826119aa565b50608086013560c085015260a086013560e0850152611d3460c08701611c80565b610100611d448187018315159052565b611d5060e08901611c80565b801515878501529150611d6481890161184a565b92505050611d7e6101408501826001600160a01b03169052565b5083151560208401529050610775565b60008135611b1c81611835565b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008235605e19833603018112611dd157600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b601f821115611e3757600081815260208120601f850160051c81016020861015611e185750805b601f850160051c820191505b818110156110e357828155600101611e24565b505050565b8135611e4781611835565b611e518183611d9b565b50602080830135611e6181611bbd565b825460ff60a01b191660a09190911b60ff60a01b161782556001808301604085013536869003601e19018112611e9657600080fd5b8501803567ffffffffffffffff811115611eaf57600080fd5b8036038583011315611ec057600080fd5b611ed481611ece8554611b4b565b85611df1565b6000601f821160018114611f0a5760008315611ef257508382018701355b600019600385901b1c1916600184901b178555611f63565b600085815260209020601f19841690835b82811015611f3a578685018a0135825593890193908801908901611f1b565b5084821015611f595760001960f88660031b161c198985880101351681555b50508583871b0185555b505050505050505050565b60008135611b1c81611872565b60058210611f9957634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b60008135611b1c81611c72565b611fcb611fc583611d8e565b82611d9b565b611fe4611fdb6020840184611dbb565b60018301611e3c565b611ffd611ff46040840184611dbb565b60038301611e3c565b61201561200c60608401611f6e565b60058301611f7b565b6080820135600682015560a082013560078201556008810161205061203c60c08501611fac565b825490151560ff1660ff1991909116178255565b61207961205f60e08501611fac565b82805461ff00191691151560081b61ff0016919091179055565b611e376120896101008501611d8e565b82805462010000600160b01b03191660109290921b62010000600160b01b0316919091179055565b815167ffffffffffffffff8111156120cb576120cb611ddb565b6120df816120d98454611b4b565b84611df1565b602080601f83116001811461211457600084156120fc5750858301515b600019600386901b1c1916600185901b1785556110e3565b600085815260208120601f198616915b8281101561214357888601518255948401946001909101908401612124565b50858210156121615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea264697066735822122090180155e8126c6e6f6a11a1915d48e8be924a7d6276658239ac2f99a09af22864736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
