/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvest,
  DCAReinvestInterface,
} from "../../../contracts/utils/DCAReinvest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "activate_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "depositReinvestMethod",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "withdrawReinvestMethod",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "reinvestSpender",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "depositReinvestMethod",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "withdrawReinvestMethod",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "reinvestSpender",
            type: "address",
          },
        ],
        internalType: "struct DCAReinvest.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108e93803806108e983398101604081905261002f916100d0565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610080565b5060008054911515600160a01b0260ff60a01b199092169190911790556100f9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e257600080fd5b815180151581146100f257600080fd5b9392505050565b6107e1806101086000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063738800b7116100765780638da5cb5b1161005b5780638da5cb5b1461018d578063a4fbe3b7146101a8578063f2fde38b146101bb57600080fd5b8063738800b71461012d5780637c4bb0b11461016957600080fd5b80630ca75044146100a857806340438aea146100f3578063611e2c3f146100fd578063715018a614610125575b600080fd5b60408051808201909152600f81527f4554485f474f45524c492056302e31000000000000000000000000000000000060208201525b6040516100ea9190610542565b60405180910390f35b6100fb6101ce565b005b61011061010b366004610687565b610212565b604080519283529015156020830152016100ea565b6100fb61022d565b6100dd6040518060400160405280600f81526020017f4554485f474f45524c492056302e31000000000000000000000000000000000081525081565b60005461017d90600160a01b900460ff1681565b60405190151581526020016100ea565b6000546040516001600160a01b0390911681526020016100ea565b6101106101b6366004610687565b610241565b6100fb6101c936600461076d565b61024f565b6101d66102ab565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116600160a01b9182900460ff1615909102179055565b6000806102208585856102f1565b915091505b935093915050565b6102356102ab565b61023f6000610334565b565b60008061022085858561039c565b6102576102ab565b6001600160a01b03811661029f576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6102a881610334565b50565b6000546001600160a01b0316331461023f576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610296565b6020830151600090819060ff16156102255760ff8016856020015160ff160361031957600091505b81156102255761032a8483336103d4565b9050935093915050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060ff8016856020015160ff16036103b95760009150610225565b600260ff16856020015160ff16111561022557935093915050565b6040516001600160a01b038216602482015260448101839052600090819060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052519091506001600160a01b0386169061046790839061078f565b6000604051808303816000865af19150503d80600081146104a4576040519150601f19603f3d011682016040523d82523d6000602084013e6104a9565b606091505b50508092505081610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f546f6b656e207472616e73666572206661696c656400000000000000000000006044820152606401610296565b509392505050565b60005b83811015610539578181015183820152602001610521565b50506000910152565b602081526000825180602084015261056181604085016020870161051e565b601f01601f19169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156105c7576105c7610575565b60405290565b803560ff811681146105de57600080fd5b919050565b600082601f8301126105f457600080fd5b813567ffffffffffffffff8082111561060f5761060f610575565b604051601f8301601f19908116603f0116810190828211818310171561063757610637610575565b8160405283815286602085880101111561065057600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b03811681146105de57600080fd5b60008060006060848603121561069c57600080fd5b833567ffffffffffffffff808211156106b457600080fd5b9085019060a082880312156106c857600080fd5b6106d06105a4565b823580151581146106e057600080fd5b81526106ee602084016105cd565b602082015260408301358281111561070557600080fd5b610711898286016105e3565b60408301525060608301358281111561072957600080fd5b610735898286016105e3565b60608301525061074760808401610670565b6080820152945061075d91505060208501610670565b9150604084013590509250925092565b60006020828403121561077f57600080fd5b61078882610670565b9392505050565b600082516107a181846020870161051e565b919091019291505056fea26469706673582212202db94eea551b8054069a0e7cf7ecce1ae45735b2feac9904064e2f0408ab1dd664736f6c63430008140033";

type DCAReinvestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvest__factory extends ContractFactory {
  constructor(...args: DCAReinvestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    activate_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(activate_, overrides || {});
  }
  override deploy(
    activate_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(activate_, overrides || {}) as Promise<
      DCAReinvest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvest__factory {
    return super.connect(runner) as DCAReinvest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestInterface {
    return new Interface(_abi) as DCAReinvestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAReinvest {
    return new Contract(address, _abi, runner) as unknown as DCAReinvest;
  }
}
