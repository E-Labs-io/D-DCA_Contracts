/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DCAReinvestLogic,
  DCAReinvestLogicInterface,
} from "../../../../contracts/logic/ReinvestLogic.sol/DCAReinvestLogic";

const _abi = [
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_ACTIVE",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_CHAIN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class DCAReinvestLogic__factory {
  static readonly abi = _abi;
  static createInterface(): DCAReinvestLogicInterface {
    return new Interface(_abi) as DCAReinvestLogicInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DCAReinvestLogic {
    return new Contract(address, _abi, runner) as unknown as DCAReinvestLogic;
  }
}
